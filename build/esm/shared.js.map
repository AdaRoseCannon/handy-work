{"version":3,"file":"shared.js","sources":["../../node_modules/comlink/dist/esm/comlink.mjs","../../node_modules/three/src/math/MathUtils.js","../../node_modules/three/src/math/Quaternion.js","../../node_modules/three/src/math/Vector3.js","../../node_modules/three/src/math/Matrix4.js","../../src/normalize.js"],"sourcesContent":["/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case \"GET\" /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case \"SET\" /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case \"APPLY\" /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case \"CONSTRUCT\" /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case \"ENDPOINT\" /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case \"RELEASE\" /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === \"RELEASE\" /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: \"RELEASE\" /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: \"GET\" /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: \"SET\" /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: \"ENDPOINT\" /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"APPLY\" /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"CONSTRUCT\" /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: \"HANDLER\" /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: \"RAW\" /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case \"HANDLER\" /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case \"RAW\" /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","const _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toUpperCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s % 2147483647;\n\n\t// Park-Miller algorithm\n\n\t_seed = _seed * 16807 % 2147483647;\n\n\treturn ( _seed - 1 ) / 2147483646;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\n\n\n\nexport {\n\tDEG2RAD,\n\tRAD2DEG,\n\tgenerateUUID,\n\tclamp,\n\teuclideanModulo,\n\tmapLinear,\n\tinverseLerp,\n\tlerp,\n\tdamp,\n\tpingpong,\n\tsmoothstep,\n\tsmootherstep,\n\trandInt,\n\trandFloat,\n\trandFloatSpread,\n\tseededRandom,\n\tdegToRad,\n\tradToDeg,\n\tisPowerOfTwo,\n\tceilPowerOfTwo,\n\tfloorPowerOfTwo,\n\tsetQuaternionFromProperEuler,\n};\n","import * as MathUtils from './MathUtils.js';\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\treturn qm.slerpQuaternions( qa, qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nQuaternion.prototype.isQuaternion = true;\n\nexport { Quaternion };\n","import * as MathUtils from './MathUtils.js';\nimport { Quaternion } from './Quaternion.js';\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nexport { Vector3 };\n","import { Vector3 } from './Vector3.js';\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1.elements[ 0 ] *= invSX;\n\t\t_m1.elements[ 1 ] *= invSX;\n\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t_m1.elements[ 4 ] *= invSY;\n\t\t_m1.elements[ 5 ] *= invSY;\n\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nexport { Matrix4 };\n","import {Matrix4} from 'three';\n\n/**\n * Modify an Array of Matrixes in place by premultiplying them by the inverse of the first item.\n * \n * @param { Float32Array } handPose Array of 4x4 Matrixes in column order\n */\nexport default function normalize(handPose) {\n\n    // handPose is the concatenated data of 4x4 Matrices\n    const size = handPose.length/16;\n\n    // The first item in hand pose information is the wrist\n    const inverseWristMat = new Matrix4();\n    inverseWristMat.fromArray(handPose, 0);\n    inverseWristMat.invert();\n\n    const tempMat = new Matrix4();\n    for (let i=0; i<size; i++) {\n        const offset = i*16;\n        tempMat.fromArray(handPose, offset);\n        tempMat.premultiply(inverseWristMat);\n        tempMat.toArray(handPose, offset);\n    }\n}"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","value","serialized","Error","isError","message","name","stack","Object","assign","ep","self","addEventListener","callback","ev","data","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","get","_target","requestResponseMessage","p","toString","length","r","bind","set","_thisArg","rawArgumentList","last","processArguments","construct","processed","v","arr","Array","prototype","concat","transferCache","WeakMap","transfers","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","_lut","i","clamp","min","max","Quaternion","x","y","z","w","this","_x","_y","_z","_w","static","qa","qb","qm","t","console","warn","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","s","cos","dir","sqrSin","EPSILON","sin","sqrt","len","atan2","tDir","f","_onChangeCallback","clone","copy","quaternion","setFromEuler","euler","update","isEuler","order","_order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","m","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","dot","abs","normalize","angleTo","q","acos","MathUtils.clamp","rotateTowards","step","slerp","identity","invert","conjugate","lengthSq","multiply","multiplyQuaternions","premultiply","a","b","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","u1","sqrt1u1","sqrtu1","u2","PI","u3","equals","fromArray","array","offset","toArray","fromBufferAttribute","attribute","index","getX","getY","getZ","getW","_onChange","isQuaternion","Vector3","setScalar","scalar","setX","setY","setZ","setComponent","getComponent","add","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiplyVectors","multiplyScalar","applyEuler","error","applyQuaternion","_quaternion","applyAxisAngle","applyMatrix3","e","applyNormalMatrix","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","ceil","round","roundToZero","negate","manhattanLength","setLength","lerp","alpha","lerpVectors","v1","v2","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector","reflect","normal","theta","distanceTo","distanceToSquared","dx","dy","dz","manhattanDistanceTo","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","c","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","setFromMatrix3Column","randomDirection","u","iterator","isVector3","Matrix4","arguments","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","me","copyPosition","setFromMatrix3","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","_v1","scaleY","scaleZ","makeRotationFromEuler","d","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","lookAt","eye","up","n","multiplyMatrices","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","determinant","transpose","tmp","setPosition","t11","t12","t13","t14","det","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","makeShear","xy","xz","yx","yz","zx","zy","position","x2","y2","z2","xx","yy","zz","wx","wy","wz","decompose","_m1","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","matrix","isMatrix4","handPose","size","inverseWristMat","tempMat"],"mappings":"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"}