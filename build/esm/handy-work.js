import{w as e,n as t,t as s}from"./shared.js";export{n as normalize}from"./shared.js";const a=e(new Worker(new URL("handpose.js",import.meta.url),{type:"module"})).default;function o(e,n){return a.loadPose(e,n)}function i(e){return a.getPose(e)}window.addEventListener("enter-vr",h),window.addEventListener("exit-vr",h);const r=new EventTarget;class d{#e;constructor({source:e,handPose:n}){this.handPose=n,this.size=e.hand.size,this.jointKeys=Array.from(e.hand.keys()),this.hand=e.hand,this.jointMatrixArray=new Float32Array(16*e.hand.size),this.handedness=e.handedness,this.#e=!0}async update(e,n,t){if(!this.#e)return[];this.#e=!1,t.fillPoses(this.hand.values(),n,this.jointMatrixArray);const a=await this.handPose.update(e.transform.matrix,s(this.jointMatrixArray,[this.jointMatrixArray.buffer]),this.handedness);return this.jointMatrixArray=a.usedHandArrayBuffer,this.#e=!0,a.distances}}const c=new Map;function h(){c.clear()}let f=!1;function l(){f=!0}function u(e,n,s){const a={};for(const n of e)n.hand&&(a[n.handedness]=n.hand);if(a.left&&a.right){f=!1;const e=a.left.size,o=new Float32Array(1+16*e+16*e+e+e);o[0]=e;const i=new Float32Array(o.buffer,4,16*e),r=new Float32Array(o.buffer,4+16*e*4,16*e);new Float32Array(o.buffer,4+16*e*4*2,2*e).fill(1),s.fillPoses(a.left.values(),n,i),s.fillPoses(a.right.values(),n,r),t(i),t(r),console.log(o);const d=window.document.createElement("a");d.href=window.URL.createObjectURL(new Blob([new Uint8Array(o.buffer)],{type:"application/octet-stream"})),d.download="untitled.handpose",document.body.appendChild(d),d.click(),document.body.removeChild(d)}}function w(e,n,t){const s={handedness:n.handedness,distances:e},a=new CustomEvent("pose",{detail:s});r.dispatchEvent(a),t&&t(s)}function y(e,n,t,s){if(e&&t){undefined!==t.session&&function(e){e.addEventListener("reset",h),e.addEventListener("end",h),e.addEventListener("visibilitychange",h),e.addEventListener("inputsourceschange",h)}(t.session),f&&u(e,n,t);const o=t.getViewerPose(n);for(const i of e){const e=i.handedness;if(i.hand)if(c.has(e)){const a=c.get(e);if(a instanceof Promise)continue;a.update(o,n,t).then((e=>{e.length&&w(e,a,s)})).catch((function(e){console.log(e)}))}else{const n=new a;c.set(e,n),n.then((n=>{const s=t.session,a=new d({session:s,source:i,handPose:n});c.set(e,a)}))}}}}export{l as dumpHands,i as getPose,u as handDataToFile,r as handPoses,o as loadPose,h as resetHands,y as update};
//# sourceMappingURL=handy-work.js.map
