import{w as e,n as t,t as s}from"./shared.js";export{n as normalize}from"./shared.js";const o=e(new Worker(new URL("handpose.js",import.meta.url),{type:"module"})).default;function a(e,n){return o.loadPose(e,n)}function r(e){return o.getPose(e)}function i(e,n){return o.setPose(e,n)}window.addEventListener("enter-vr",f),window.addEventListener("exit-vr",f);const d=new EventTarget;class c{#e;constructor({source:e,handPose:n}){this.handPose=n,this.size=e.hand.size,this.jointKeys=Array.from(e.hand.keys()),this.hand=e.hand,this.jointMatrixArray=new Float32Array(16*e.hand.size),this.handedness=e.handedness,this.#e=!0}async update(e,n,t){if(!this.#e)return[];this.#e=!1,t.fillPoses(this.hand.values(),n,this.jointMatrixArray);const o=await this.handPose.update(e.transform.matrix,s(this.jointMatrixArray,[this.jointMatrixArray.buffer]),this.handedness);return this.jointMatrixArray=o.usedHandArrayBuffer,this.#e=!0,o.distances}}const h=new Map;function f(){h.clear()}let l=!1;function u(){l=!0}function w(e,n,s){const o={};for(const n of e)n.hand&&(o[n.handedness]=n.hand);if(o.left&&o.right){l=!1;const e=o.left.size,a=new Float32Array(1+16*e+16*e+e+e);a[0]=e;const r=new Float32Array(a.buffer,4,16*e),i=new Float32Array(a.buffer,4+16*e*4,16*e);new Float32Array(a.buffer,4+16*e*4*2,2*e).fill(1),s.fillPoses(o.left.values(),n,r),s.fillPoses(o.right.values(),n,i),t(r),t(i),console.log(a);const d=window.document.createElement("a");d.href=window.URL.createObjectURL(new Blob([new Uint8Array(a.buffer)],{type:"application/octet-stream"})),d.download="untitled.handpose",document.body.appendChild(d),d.click(),document.body.removeChild(d)}}function y(e,n,t){const s={handedness:n.handedness,distances:e},o=new CustomEvent("pose",{detail:s});d.dispatchEvent(o),t&&t(s)}function p(e,n,t,s){if(e&&t){undefined!==t.session&&function(e){e.addEventListener("reset",f),e.addEventListener("end",f),e.addEventListener("visibilitychange",f),e.addEventListener("inputsourceschange",f)}(t.session),l&&w(e,n,t);const a=t.getViewerPose(n);for(const r of e){const e=r.handedness;if(r.hand)if(h.has(e)){const o=h.get(e);if(o instanceof Promise)continue;o.update(a,n,t).then((e=>{e.length&&y(e,o,s)})).catch((function(e){console.log(e)}))}else{const n=new o;h.set(e,n),n.then((n=>{const s=t.session,o=new c({session:s,source:r,handPose:n});h.set(e,o)}))}}}}export{u as dumpHands,r as getPose,w as handDataToFile,d as handPoses,a as loadPose,f as resetHands,i as setPose,p as update};
//# sourceMappingURL=handy-work.js.map
