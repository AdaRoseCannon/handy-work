{"version":3,"file":"handy-work.js","sources":["../../src/handy-work.js","../../comlink:/home/ada/gitWorkingDir/handy-work/src/handpose.js","../../omt:/home/ada/gitWorkingDir/handy-work/src/handpose.js?comlink"],"sourcesContent":["import {transfer} from 'comlink'; \nimport normalize from './normalize.js';\n\nimport {default as comlinkHandPose} from \"comlink:./handpose.js\";\nconst HandPose = comlinkHandPose.default;\n\nfunction loadPose(name, url) {\n\treturn HandPose.loadPose(name, url);\n}\n\nfunction getPose(name) {\n\treturn HandPose.getPose(name);\n}\n\nfunction setPose(name, pose) {\n\treturn HandPose.setPose(name, pose);\n}\n\n// Add event listeners\nlet listenersLoaded = false;\nwindow.addEventListener('enter-vr', resetHands);\nwindow.addEventListener('exit-vr', resetHands);\n\nconst handPoses = new EventTarget();\n\nclass HandInfo {\n\t#ready\n\n\tconstructor({\n\t\tsource, handPose\n\t}) {\n\t\tthis.handPose = handPose;\n\t\tthis.size = source.hand.size;\n\t\tthis.jointKeys = Array.from(source.hand.keys());\n\t\tthis.hand = source.hand;\n\t\tthis.jointMatrixArray = new Float32Array(source.hand.size * 16);\n\t\tthis.handedness = source.handedness;\n\n\t\tif (!listenersLoaded) {\n\t\t\tlistenersLoaded = true;\n\t\t}\n\t\tthis.#ready = true;\n\t}\n\n\tasync update(xrViewerPose, referenceSpace, frame) {\n\t\tif (!this.#ready) {\n\t\t\t// console.warn('Pose detection taking too long');\n\t\t\treturn [];\n\t\t}\n\n\t\t// transfer the pose array buffer to the thread, we now cannot do anything until it returns so mark it as not ready\n\t\tthis.#ready = false;\n\t\tframe.fillPoses( this.hand.values() , referenceSpace, this.jointMatrixArray );\n\t\tconst returnData = await this.handPose.update(\n\t\t\txrViewerPose.transform.matrix,\n\t\t\ttransfer(this.jointMatrixArray, [this.jointMatrixArray.buffer]),\n\t\t\tthis.handedness\n\t\t);\n\t\tthis.jointMatrixArray = returnData.usedHandArrayBuffer;\n\t\tthis.#ready = true;\n\t\treturn returnData.distances;\n\t}\n}\nconst hands = new Map();\n\nfunction resetHands() {\n\thands.clear();\n}\n\nlet __dumphands = false;\nfunction dumpHands() {\n\t__dumphands = true;\t\n}\n\nfunction handDataToFile(inputSources, referenceSpace, frame) {\n\tconst tempHands = {};\n\n\tfor (const source of inputSources) {\n\t\tif (!source.hand) continue;\n\t\ttempHands[source.handedness] = source.hand;\n\t}\n\tif (tempHands.left && tempHands.right) {\n\t\t__dumphands = false;\n\n\t\tconst size = tempHands.left.size;\n\t\tconst outData = new Float32Array(\n\t\t\t1 +         // store size\n\t\t\tsize * 16 + // left hand\n\t\t\tsize * 16 + // right hand\n\t\t\tsize +      // weighting for individual joints left hand\n\t\t\tsize        // weighting for individual joints right hand\n\t\t);\n\n\t\toutData[0] = size;\n\t\tconst leftHandAccessor = new Float32Array(outData.buffer, 4, size * 16);\n\t\tconst rightHandAccessor = new Float32Array(outData.buffer, 4 + (size * 16 * 4), size * 16);\n\t\tconst weights = new Float32Array(outData.buffer, 4 + 2 * (size * 16 * 4), size * 2);\n\t\tweights.fill(1);\n\n\t\tframe.fillPoses( tempHands.left.values() , referenceSpace, leftHandAccessor );\n\t\tframe.fillPoses( tempHands.right.values() , referenceSpace, rightHandAccessor );\n\n\t\tnormalize(leftHandAccessor);\n\t\tnormalize(rightHandAccessor);\n\n\t\tconsole.log(outData);\n\n\t\tconst a = window.document.createElement('a');\n\n\t\ta.href = window.URL.createObjectURL(\n\t\t\tnew Blob(\n\t\t\t\t[new Uint8Array(outData.buffer)],\n\t\t\t\t{ type: 'application/octet-stream' }\n\t\t\t)\n\t\t);\n\t\ta.download = 'untitled.handpose';\n\t\t\n\t\t// Append anchor to body.\n\t\tdocument.body.appendChild(a);\n\t\ta.click();\n\t\t\n\t\t// Remove anchor from body\n\t\tdocument.body.removeChild(a);\n\t}\n}\n\n\n// what to do once a pose is found\nfunction done(distances, handInfo, callback) {\n\n\tconst detail = {\n\t\thandedness: handInfo.handedness,\n\t\tdistances\n\t};\n\n\tconst handPoseEvent = new CustomEvent('pose', {\n\t\tdetail\n\t});\n\t\n\thandPoses.dispatchEvent(handPoseEvent);\n\tif (callback) {\n\t\tcallback(detail);\n\t}\n}\n\nlet session;\nfunction init(session) {\n\tsession.addEventListener('reset', resetHands);\n\tsession.addEventListener('end', resetHands);\n\tsession.addEventListener('visibilitychange', resetHands);\n\tsession.addEventListener('inputsourceschange', resetHands);\n}\n\nfunction update(inputSources, referenceSpace, frame, callback) {\n\n\tif (inputSources && frame) {\n\n\t\tif (frame.session !== session) {\n\t\t\tinit(frame.session);\n\t\t}\n\n\t\tif (__dumphands) {\n\t\t\thandDataToFile(inputSources, referenceSpace, frame);\n\t\t}\n\n\t\tconst xrViewerPose = frame.getViewerPose(referenceSpace);\n\t\tfor (const source of inputSources) {\t\t\t\n\t\t\tconst hand = source.handedness;\n\t\t\t\n\t\t\tif (!source.hand) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!hands.has(hand)) {\n\t\t\t\tconst handPosePromise = new HandPose();\n\t\t\t\thands.set(hand, handPosePromise);\n\t\t\t\thandPosePromise.then(handPose => {\n\t\t\t\t\tconst session = frame.session;\n\t\t\t\t\tconst handInfo = new HandInfo({session, source, handPose});\n\t\t\t\t\thands.set(hand, handInfo);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst handInfo = hands.get(hand);\n\t\t\t\tif (handInfo instanceof Promise) continue;\n\n\t\t\t\thandInfo.update(xrViewerPose, referenceSpace, frame)\n\t\t\t\t.then(distances => {\n\t\t\t\t\tif (distances.length) {\n\t\t\t\t\t\tdone(distances, handInfo, callback);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(function (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport {\n\tupdate,\n\tresetHands,\n\tdumpHands,\n\thandPoses,\n\tloadPose,\n\tnormalize,\n\thandDataToFile,\n\tgetPose,\n\tsetPose\n};\n","\n\t\timport workerPath from \"omt:/home/ada/gitWorkingDir/handy-work/src/handpose.js?comlink\";\n\t\timport {wrap} from \"comlink\";\n\n\t\texport default wrap(new Worker(new URL(workerPath, import.meta.url), {type: \"module\"}));\n\t","export default import.meta.ROLLUP_FILE_URL_2be1eb47;"],"names":["HandPose","wrap","Worker","URL","import","meta","url","type","default","loadPose","name","getPose","setPose","pose","window","addEventListener","resetHands","handPoses","EventTarget","HandInfo","ready","constructor","source","handPose","this","size","hand","jointKeys","Array","from","keys","jointMatrixArray","Float32Array","handedness","async","xrViewerPose","referenceSpace","frame","fillPoses","values","returnData","update","transform","matrix","transfer","buffer","usedHandArrayBuffer","distances","hands","Map","clear","__dumphands","dumpHands","handDataToFile","inputSources","tempHands","left","right","outData","leftHandAccessor","rightHandAccessor","fill","normalize","console","log","a","document","createElement","href","createObjectURL","Blob","Uint8Array","download","body","appendChild","click","removeChild","done","handInfo","callback","detail","handPoseEvent","CustomEvent","dispatchEvent","session","init","getViewerPose","has","get","Promise","then","length","catch","err","handPosePromise","set"],"mappings":"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"}