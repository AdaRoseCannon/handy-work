{"version":3,"file":"handpose-72ef0323.js","sources":["../src/handpose.js","../src/handpose.js?comlink"],"sourcesContent":["// this runs as a web worker\nimport {transfer} from 'comlink';\nimport normalize from './normalize.js';\n\nconsole.log('Worker started');\n\nconst poses = new Map();\n\nclass HandPose {\n\t#matches\n\tconstructor () {\n\t\tthis.#matches = [];\n\t}\n\tstatic async loadPose(name, path) {\n\t\tconst url = new URL(path, import.meta.url);\n\t\tconst buffer = await fetch(url).then(response => response.arrayBuffer());\n\t\tconst pose = new Float32Array(buffer);\n\t\tposes.set(name, pose);\n\t}\n\tupdate (headPose, handPose, handedness) {\n\n\t\tnormalize(handPose);\n\n\t\tconst distances = [];\n\t\tfor (const [name, poseData] of poses) {\n\t\t\tconst isRight = Number(handedness === \"right\");\n\t\t\tconst poseHandDataSize = poseData[0];\n\t\t\tconst poseHandData = new Float32Array(poseData.buffer, (\n\t\t\t\t1 + // poseHandDataSize offset\n\t\t\t\t(poseHandDataSize * 16) * isRight // offset for right hand\n\t\t\t)*4 , poseHandDataSize * 16);\n\t\t\tconst poseWeightData = new Float32Array(poseData.buffer, (\n\t\t\t\t1 + // poseHandDataSize offset\n\t\t\t\t(poseHandDataSize * 16) * 2 + // offset for after hand data\n\t\t\t\t(poseHandDataSize * isRight)      // offset for right hand\n\t\t\t)*4 , poseHandDataSize);\n\n\t\t\tconst range = Math.min(poseHandDataSize, handPose.length/16);\n\t\t\tlet dist = 0;\n\t\t\tfor (let i=0; i<range; i++) {\n\t\t\t\tconst o = i*16;\n\t\t\t\tdist += Math.pow(\n\t\t\t\t\t(poseHandData[o + 12] - handPose[o + 12]) ** 2 +\n\t\t\t\t\t(poseHandData[o + 13] - handPose[o + 13]) ** 2 +\n\t\t\t\t\t(poseHandData[o + 14] - handPose[o + 14]) ** 2\n\t\t\t\t, 0.5);\n\t\t\t}\n\n\t\t\tdistances.push([name, dist]);\n\t\t}\n\n\t\treturn transfer({\n\t\t\tusedHandArrayBuffer: handPose,\n\t\t\tdistances: distances.sort((a,b)=>a[1]-b[1])\n\t\t}, [handPose.buffer]);\n\t}\n\tgetMatchedPoses () {\n\t\treturn this.#matches;\n\t}\n}\n\nexport default HandPose;","\n\t\timport * as m from \"/home/ada/gitWorkingDir/handy-work/src/handpose.js\";\n\t\timport {expose} from \"comlink\";\n\n\t\texpose(m);\n\t"],"names":["console","log","poses","Map","expose","[object Object]","this","name","path","url","URL","import","meta","buffer","fetch","then","response","arrayBuffer","pose","Float32Array","set","headPose","handPose","handedness","normalize","distances","poseData","isRight","Number","poseHandDataSize","poseHandData","range","Math","min","length","dist","i","o","pow","push","transfer","usedHandArrayBuffer","sort","a","b"],"mappings":"uDAIAA,QAAQC,IAAI,kBAEZ,MAAMC,EAAQ,IAAIC,ICFhBC,wCDIF,MACCC,SACAA,cACCC,cAAgB,GAEjBD,sBAAsBE,EAAMC,GAC3B,MAAMC,EAAM,IAAIC,IAAIF,EAAMG,OAAOC,KAAKH,KAChCI,QAAeC,MAAML,GAAKM,MAAKC,GAAYA,EAASC,gBACpDC,EAAO,IAAIC,aAAaN,GAC9BX,EAAMkB,IAAIb,EAAMW,GAEjBb,OAAQgB,EAAUC,EAAUC,GAE3BC,EAAUF,GAEV,MAAMG,EAAY,GAClB,IAAK,MAAOlB,EAAMmB,KAAaxB,EAAO,CACrC,MAAMyB,EAAUC,OAAsB,UAAfL,GACjBM,EAAmBH,EAAS,GAC5BI,EAAe,IAAIX,aAAaO,EAASb,OAG7C,GAFD,EACoB,GAAnBgB,EAAyBF,GACF,GAAnBE,GACiB,IAAIV,aAAaO,EAASb,OAI/C,GAHD,EACoB,GAAnBgB,EAAyB,EACzBA,EAAmBF,GACfE,GAEN,MAAME,EAAQC,KAAKC,IAAIJ,EAAkBP,EAASY,OAAO,IACzD,IAAIC,EAAO,EACX,IAAK,IAAIC,EAAE,EAAGA,EAAEL,EAAOK,IAAK,CAC3B,MAAMC,EAAM,GAAFD,EACVD,GAAQH,KAAKM,KACXR,EAAaO,EAAI,IAAMf,EAASe,EAAI,MAAQ,GAC5CP,EAAaO,EAAI,IAAMf,EAASe,EAAI,MAAQ,GAC5CP,EAAaO,EAAI,IAAMf,EAASe,EAAI,MAAQ,EAC5C,IAGHZ,EAAUc,KAAK,CAAChC,EAAM4B,IAGvB,OAAOK,EAAS,CACfC,oBAAqBnB,EACrBG,UAAWA,EAAUiB,MAAK,CAACC,EAAEC,IAAID,EAAE,GAAGC,EAAE,MACtC,CAACtB,EAAST,SAEdR,kBACC,OAAOC"}