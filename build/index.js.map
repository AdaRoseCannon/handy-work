{"version":3,"file":"index.js","sources":["../src/index.js","../comlink:/home/ada/gitWorkingDir/handy-items/src/handpose.js","../omt:/home/ada/gitWorkingDir/handy-items/src/handpose.js?comlink"],"sourcesContent":["import {transfer} from 'comlink'; \nimport normalize from './normalize.js';\n\nimport {default as comlinkHandPose} from \"comlink:./handpose.js\";\nconst HandPose = comlinkHandPose.default;\n\nfunction loadPose(name, url) {\n\treturn HandPose.loadPose(name, url);\n}\n\nconst handPoses = new EventTarget();\n\nclass HandInfo {\n\t#ready\n\n\tconstructor({\n\t\tsource, handPose\n\t}) {\n\t\tthis.handPose = handPose;\n\t\tthis.size = source.hand.size;\n\t\tthis.jointKeys = Array.from(source.hand.keys());\n\t\tthis.hand = source.hand;\n\t\tthis.jointMatrixArray = new Float32Array(source.hand.size * 16);\n\t\tthis.handedness = source.handedness\n\n\t\tthis.#ready = true;\n\t}\n\n\tasync update(xrViewerPose, referenceSpace, frame) {\n\t\tif (!this.#ready) {\n\t\t\tconsole.warn('Pose detection taking too long');\n\t\t\treturn [];\n\t\t}\n\n\t\t// transfer the pose array buffer to the thread, we now cannot do anything until it returns so mark it as not ready\n\t\tthis.#ready = false;\n\t\tframe.fillPoses( this.hand.values() , referenceSpace, this.jointMatrixArray );\n\t\tconst returnData = await this.handPose.update(\n\t\t\txrViewerPose.transform.matrix,\n\t\t\ttransfer(this.jointMatrixArray, [this.jointMatrixArray.buffer]),\n\t\t\tthis.handedness\n\t\t);\n\t\tthis.jointMatrixArray = returnData.usedHandArrayBuffer;\n\t\tthis.#ready = true;\n\t\treturn returnData.distances;\n\t}\n}\nconst hands = new Map();\n\nfunction dumpHands() {\n\twindow.__dumpHands = true;\n}\n\nwindow.dumpHands = dumpHands;\n\nfunction update(xrSession, referenceSpace, frame) {\n\tlet i = 0;\n\tif (xrSession && frame) {\n\t\tconst xrViewerPose = frame.getViewerPose(referenceSpace);\n\n\t\tif (window.__dumpHands) {\n\t\t\tconst hands = {};\n\t\t\tfor (const source of xrSession.inputSources) {\n\t\t\t\tif (!source.hand) continue;\n\t\t\t\thands[source.handedness] = source.hand;\n\t\t\t}\n\t\t\tif (hands.left && hands.right) {\n\t\t\t\twindow.__dumpHands = false;\n\n\t\t\t\tconst size = hands.left.size;\n\t\t\t\tconst outData = new Float32Array(\n\t\t\t\t\t1 +         // store size\n\t\t\t\t\tsize * 16 + // left hand\n\t\t\t\t\tsize * 16 + // right hand\n\t\t\t\t\tsize +      // weighting for individual joints left hand\n\t\t\t\t\tsize        // weighting for individual joints right hand\n\t\t\t\t);\n\n\t\t\t\toutData[0] = size;\n\t\t\t\tconst leftHandAccessor = new Float32Array(outData.buffer, 4, size * 16);\n\t\t\t\tconst rightHandAccessor = new Float32Array(outData.buffer, 4 + (size * 16 * 4), size * 16);\n\t\t\t\tconst weights = new Float32Array(outData.buffer, 4 + 2 * (size * 16 * 4), size * 2);\n\t\t\t\tweights.fill(1);\n\n\t\t\t\tframe.fillPoses( hands.left.values() , referenceSpace, leftHandAccessor );\n\t\t\t\tframe.fillPoses( hands.right.values() , referenceSpace, rightHandAccessor );\n\n\t\t\t\tnormalize(leftHandAccessor);\n\t\t\t\tnormalize(rightHandAccessor);\n\n\t\t\t\tconsole.log(outData);\n\n\t\t\t\tconst a = window.document.createElement('a');\n\n\t\t\t\ta.href = window.URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[new Uint8Array(outData.buffer)],\n\t\t\t\t\t\t{ type: 'application/octet-stream' }\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\ta.download = 'untitled.handpose';\n\t\t\t\t\n\t\t\t\t// Append anchor to body.\n\t\t\t\tdocument.body.appendChild(a)\n\t\t\t\ta.click();\n\t\t\t\t\n\t\t\t\t// Remove anchor from body\n\t\t\t\tdocument.body.removeChild(a)\n\t\t\t}\n\t\t}\n\n\t\tfor (const source of xrSession.inputSources) {\n\t\t\tif (!source.hand) continue;\n\n\t\t\tif (!hands.has(i)) {\n\t\t\t\tconst handPosePromise = new HandPose();\n\t\t\t\thands.set(i, handPosePromise);\n\t\t\t\thandPosePromise.then(handPose => {\n\t\t\t\t\tconst handInfo = new HandInfo({source, handPose});\n\t\t\t\t\thands.set(i, handInfo)\n\t\t\t\t});\n\t\t\t} else {\n\n\t\t\t\tconst handInfo = hands.get(i);\n\t\t\t\tif (handInfo instanceof Promise) continue;\n\n\t\t\t\thandInfo.update(xrViewerPose, referenceSpace, frame)\n\t\t\t\t.then(function (distances) {\n\t\t\t\t\tconst handPoseEvent = new CustomEvent('pose', {\n\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\thandedness: handInfo.handedness,\n\t\t\t\t\t\t\tdistances\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\thandPoses.dispatchEvent(handPoseEvent);\n\t\t\t\t})\n\t\t\t\t.catch(function (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport {\n\tupdate,\n\tdumpHands,\n\thandPoses,\n\tloadPose\n}","\n\t\timport workerPath from \"omt:/home/ada/gitWorkingDir/handy-items/src/handpose.js?comlink\";\n\t\timport {wrap} from \"comlink\";\n\n\t\texport default wrap(new Worker(new URL(workerPath, import.meta.url), {type: \"module\"}));\n\t","export default import.meta.ROLLUP_FILE_URL_a25b40cb;"],"names":["HandPose","wrap","Worker","URL","import","meta","url","type","default","loadPose","name","handPoses","EventTarget","HandInfo","[object Object]","source","handPose","this","size","hand","jointKeys","Array","from","keys","jointMatrixArray","Float32Array","handedness","xrViewerPose","referenceSpace","frame","console","warn","fillPoses","values","returnData","update","transform","matrix","transfer","buffer","usedHandArrayBuffer","distances","hands","Map","dumpHands","window","__dumpHands","xrSession","getViewerPose","inputSources","left","right","outData","leftHandAccessor","rightHandAccessor","fill","normalize","log","a","document","createElement","href","createObjectURL","Blob","Uint8Array","download","body","appendChild","click","removeChild","has","handInfo","get","Promise","then","handPoseEvent","CustomEvent","detail","dispatchEvent","catch","err","handPosePromise","set"],"mappings":"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"}