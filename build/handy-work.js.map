{"version":3,"file":"handy-work.js","sources":["../src/handy-work.js","../comlink:C:/Users/Daniel/_Projects/WebXR/handy-work/src/handpose.js","../omt:C:/Users/Daniel/_Projects/WebXR/handy-work/src/handpose.js?comlink"],"sourcesContent":["import {transfer} from 'comlink'; \r\nimport normalize from './normalize.js';\r\n\r\nimport {default as comlinkHandPose} from \"comlink:./handpose.js\";\r\nconst HandPose = comlinkHandPose.default;\r\n\r\nfunction loadPose(name, url) {\r\n\treturn HandPose.loadPose(name, url);\r\n}\r\n\r\n// Add event listeners\r\nlet listenersLoaded = false;\r\nwindow.addEventListener('enter-vr', resetHands);\r\nwindow.addEventListener('exit-vr', resetHands);\r\n\r\nconst handPoses = new EventTarget();\r\n\r\nclass HandInfo {\r\n\t#ready\r\n\r\n\tconstructor({\r\n\t\tsession, source, handPose\r\n\t}) {\r\n\t\tthis.handPose = handPose;\r\n\t\tthis.size = source.hand.size;\r\n\t\tthis.jointKeys = Array.from(source.hand.keys());\r\n\t\tthis.hand = source.hand;\r\n\t\tthis.jointMatrixArray = new Float32Array(source.hand.size * 16);\r\n\t\tthis.handedness = source.handedness;\r\n\r\n\t\tif (!listenersLoaded) {\r\n\t\t\tsession.onvisibilitychange = resetHands;\r\n\t\t\tlistenersLoaded = true;\r\n\t\t}\r\n\t\tthis.#ready = true;\r\n\t}\r\n\r\n\tasync update(xrViewerPose, referenceSpace, frame) {\r\n\t\tif (!this.#ready) {\r\n\t\t\t// console.warn('Pose detection taking too long');\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\t// transfer the pose array buffer to the thread, we now cannot do anything until it returns so mark it as not ready\r\n\t\tthis.#ready = false;\r\n\t\tframe.fillPoses( this.hand.values() , referenceSpace, this.jointMatrixArray );\r\n\t\tconst returnData = await this.handPose.update(\r\n\t\t\txrViewerPose.transform.matrix,\r\n\t\t\ttransfer(this.jointMatrixArray, [this.jointMatrixArray.buffer]),\r\n\t\t\tthis.handedness\r\n\t\t);\r\n\t\tthis.jointMatrixArray = returnData.usedHandArrayBuffer;\r\n\t\tthis.#ready = true;\r\n\t\treturn returnData.distances;\r\n\t}\r\n}\r\nconst hands = new Map();\r\n\r\nfunction resetHands() {\r\n\thands.clear();\r\n}\r\n\r\nwindow.__dumpHands = false;\r\nfunction dumpHands() {\r\n\twindow.__dumpHands = true;\t\r\n}\r\n\r\nlet tempHands = {};\r\nfunction handDataToFile(inputSources, referenceSpace, frame) {\r\n\r\n\tfor (const source of inputSources) {\r\n\t\tif (!source.hand) continue;\r\n\t\ttempHands[source.handedness] = source.hand;\r\n\t}\r\n\tif (tempHands.left && tempHands.right) {\r\n\t\twindow.__dumpHands = false;\r\n\r\n\t\tconst size = tempHands.left.size;\r\n\t\tconst outData = new Float32Array(\r\n\t\t\t1 +         // store size\r\n\t\t\tsize * 16 + // left hand\r\n\t\t\tsize * 16 + // right hand\r\n\t\t\tsize +      // weighting for individual joints left hand\r\n\t\t\tsize        // weighting for individual joints right hand\r\n\t\t);\r\n\r\n\t\toutData[0] = size;\r\n\t\tconst leftHandAccessor = new Float32Array(outData.buffer, 4, size * 16);\r\n\t\tconst rightHandAccessor = new Float32Array(outData.buffer, 4 + (size * 16 * 4), size * 16);\r\n\t\tconst weights = new Float32Array(outData.buffer, 4 + 2 * (size * 16 * 4), size * 2);\r\n\t\tweights.fill(1);\r\n\r\n\t\tframe.fillPoses( tempHands.left.values() , referenceSpace, leftHandAccessor );\r\n\t\tframe.fillPoses( tempHands.right.values() , referenceSpace, rightHandAccessor );\r\n\r\n\t\tnormalize(leftHandAccessor);\r\n\t\tnormalize(rightHandAccessor);\r\n\r\n\t\tconsole.log(outData);\r\n\r\n\t\tconst a = window.document.createElement('a');\r\n\r\n\t\ta.href = window.URL.createObjectURL(\r\n\t\t\tnew Blob(\r\n\t\t\t\t[new Uint8Array(outData.buffer)],\r\n\t\t\t\t{ type: 'application/octet-stream' }\r\n\t\t\t)\r\n\t\t);\r\n\t\ta.download = 'untitled.handpose';\r\n\t\t\r\n\t\t// Append anchor to body.\r\n\t\tdocument.body.appendChild(a);\r\n\t\ta.click();\r\n\t\t\r\n\t\t// Remove anchor from body\r\n\t\tdocument.body.removeChild(a);\r\n\r\n\t\ttempHands = {};\r\n\t}\r\n}\r\n\r\n\r\n// what to do once a pose is found\r\nfunction done(distances, handInfo, callback) {\r\n\r\n\tconst detail = {\r\n\t\thandedness: handInfo.handedness,\r\n\t\tdistances\r\n\t};\r\n\r\n\tconst handPoseEvent = new CustomEvent('pose', {\r\n\t\tdetail\r\n\t});\r\n\t\r\n\thandPoses.dispatchEvent(handPoseEvent);\r\n\tif (callback) {\r\n\t\tcallback(detail);\r\n\t}\r\n}\r\n\r\nfunction update(inputSources, referenceSpace, frame, callback) {\r\n\r\n\tif (inputSources && frame) {\r\n\t\tconst xrViewerPose = frame.getViewerPose(referenceSpace);\r\n\r\n\t\tif (__dumpHands) {\r\n\t\t\thandDataToFile(inputSources, referenceSpace, frame);\r\n\t\t}\r\n\r\n\t\tfor (const source of inputSources) {\t\t\t\r\n\t\t\tconst hand = source.handedness;\r\n\t\t\t\r\n\t\t\tif (!source.hand) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (!hands.has(hand)) {\r\n\t\t\t\tconst handPosePromise = new HandPose();\r\n\t\t\t\thands.set(hand, handPosePromise);\r\n\t\t\t\thandPosePromise.then(handPose => {\r\n\t\t\t\t\tconst session = frame.session;\r\n\t\t\t\t\tconst handInfo = new HandInfo({session, source, handPose});\r\n\t\t\t\t\thands.set(hand, handInfo);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconst handInfo = hands.get(hand);\r\n\t\t\t\tif (handInfo instanceof Promise) continue;\r\n\r\n\t\t\t\thandInfo.update(xrViewerPose, referenceSpace, frame)\r\n\t\t\t\t.then(distances => {\r\n\t\t\t\t\tif (distances.length) {\r\n\t\t\t\t\t\tdone(distances, handInfo, callback);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport {\r\n\tupdate,\r\n\tresetHands,\r\n\tdumpHands,\r\n\thandPoses,\r\n\tloadPose,\r\n\tnormalize,\r\n\thandDataToFile\r\n};","\n\t\timport workerPath from \"omt:C:\\\\Users\\\\Daniel\\\\_Projects\\\\WebXR\\\\handy-work\\\\src\\\\handpose.js?comlink\";\n\t\timport {wrap} from \"comlink\";\n\n\t\texport default wrap(new Worker(new URL(workerPath, import.meta.url), {type: \"module\"}));\n\t","export default import.meta.ROLLUP_FILE_URL_0abbc018;"],"names":["HandPose","wrap","Worker","URL","import","meta","url","type","default","loadPose","name","listenersLoaded","window","addEventListener","resetHands","handPoses","EventTarget","HandInfo","[object Object]","session","source","handPose","this","size","hand","jointKeys","Array","from","keys","jointMatrixArray","Float32Array","handedness","onvisibilitychange","xrViewerPose","referenceSpace","frame","fillPoses","values","returnData","update","transform","matrix","transfer","buffer","usedHandArrayBuffer","distances","hands","Map","clear","dumpHands","__dumpHands","tempHands","handDataToFile","inputSources","left","right","outData","leftHandAccessor","rightHandAccessor","fill","normalize","console","log","a","document","createElement","href","createObjectURL","Blob","Uint8Array","download","body","appendChild","click","removeChild","done","handInfo","callback","detail","handPoseEvent","CustomEvent","dispatchEvent","getViewerPose","has","get","Promise","then","length","catch","err","handPosePromise","set"],"mappings":"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"}