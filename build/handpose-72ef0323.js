import{n as t,t as e,e as r}from"./shared-7a089489.js";console.log("Worker started");const a=new Map;r(Object.freeze({__proto__:null,default:class{#matches;constructor(){this.#matches=[]}static async loadPose(t,e){const r=new URL(e,import.meta.url),s=await fetch(r).then((t=>t.arrayBuffer())),o=new Float32Array(s);a.set(t,o)}update(r,s,o){t(s);const n=[];for(const[t,e]of a){const r=Number("right"===o),a=e[0],c=new Float32Array(e.buffer,4*(1+16*a*r),16*a);new Float32Array(e.buffer,4*(1+16*a*2+a*r),a);const f=Math.min(a,s.length/16);let u=0;for(let t=0;t<f;t++){const e=16*t;u+=Math.pow((c[e+12]-s[e+12])**2+(c[e+13]-s[e+13])**2+(c[e+14]-s[e+14])**2,.5)}n.push([t,u])}return e({usedHandArrayBuffer:s,distances:n.sort(((t,e)=>t[1]-e[1]))},[s.buffer])}getMatchedPoses(){return this.#matches}}}));
//# sourceMappingURL=handpose-72ef0323.js.map
