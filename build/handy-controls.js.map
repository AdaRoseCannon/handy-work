{"version":3,"file":"handy-controls.js","sources":["../node_modules/three/examples/jsm/libs/motion-controllers.module.js","../src/lib/XRControllerModelFactory.js","../src/handy-controls.js"],"sourcesContent":["/**\n * @webxr-input-profiles/motion-controllers 1.0.0 https://github.com/immersive-web/webxr-input-profiles\n */\n\nconst Constants = {\n  Handedness: Object.freeze({\n    NONE: 'none',\n    LEFT: 'left',\n    RIGHT: 'right'\n  }),\n\n  ComponentState: Object.freeze({\n    DEFAULT: 'default',\n    TOUCHED: 'touched',\n    PRESSED: 'pressed'\n  }),\n\n  ComponentProperty: Object.freeze({\n    BUTTON: 'button',\n    X_AXIS: 'xAxis',\n    Y_AXIS: 'yAxis',\n    STATE: 'state'\n  }),\n\n  ComponentType: Object.freeze({\n    TRIGGER: 'trigger',\n    SQUEEZE: 'squeeze',\n    TOUCHPAD: 'touchpad',\n    THUMBSTICK: 'thumbstick',\n    BUTTON: 'button'\n  }),\n\n  ButtonTouchThreshold: 0.05,\n\n  AxisTouchThreshold: 0.1,\n\n  VisualResponseProperty: Object.freeze({\n    TRANSFORM: 'transform',\n    VISIBILITY: 'visibility'\n  })\n};\n\n/**\n * @description Static helper function to fetch a JSON file and turn it into a JS object\n * @param {string} path - Path to JSON file to be fetched\n */\nasync function fetchJsonFile(path) {\n  const response = await fetch(path);\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  } else {\n    return response.json();\n  }\n}\n\nasync function fetchProfilesList(basePath) {\n  if (!basePath) {\n    throw new Error('No basePath supplied');\n  }\n\n  const profileListFileName = 'profilesList.json';\n  const profilesList = await fetchJsonFile(`${basePath}/${profileListFileName}`);\n  return profilesList;\n}\n\nasync function fetchProfile(xrInputSource, basePath, defaultProfile = null, getAssetPath = true) {\n  if (!xrInputSource) {\n    throw new Error('No xrInputSource supplied');\n  }\n\n  if (!basePath) {\n    throw new Error('No basePath supplied');\n  }\n\n  // Get the list of profiles\n  const supportedProfilesList = await fetchProfilesList(basePath);\n\n  // Find the relative path to the first requested profile that is recognized\n  let match;\n  xrInputSource.profiles.some((profileId) => {\n    const supportedProfile = supportedProfilesList[profileId];\n    if (supportedProfile) {\n      match = {\n        profileId,\n        profilePath: `${basePath}/${supportedProfile.path}`,\n        deprecated: !!supportedProfile.deprecated\n      };\n    }\n    return !!match;\n  });\n\n  if (!match) {\n    if (!defaultProfile) {\n      throw new Error('No matching profile name found');\n    }\n\n    const supportedProfile = supportedProfilesList[defaultProfile];\n    if (!supportedProfile) {\n      throw new Error(`No matching profile name found and default profile \"${defaultProfile}\" missing.`);\n    }\n\n    match = {\n      profileId: defaultProfile,\n      profilePath: `${basePath}/${supportedProfile.path}`,\n      deprecated: !!supportedProfile.deprecated\n    };\n  }\n\n  const profile = await fetchJsonFile(match.profilePath);\n\n  let assetPath;\n  if (getAssetPath) {\n    let layout;\n    if (xrInputSource.handedness === 'any') {\n      layout = profile.layouts[Object.keys(profile.layouts)[0]];\n    } else {\n      layout = profile.layouts[xrInputSource.handedness];\n    }\n    if (!layout) {\n      throw new Error(\n        `No matching handedness, ${xrInputSource.handedness}, in profile ${match.profileId}`\n      );\n    }\n\n    if (layout.assetPath) {\n      assetPath = match.profilePath.replace('profile.json', layout.assetPath);\n    }\n  }\n\n  return { profile, assetPath };\n}\n\n/** @constant {Object} */\nconst defaultComponentValues = {\n  xAxis: 0,\n  yAxis: 0,\n  button: 0,\n  state: Constants.ComponentState.DEFAULT\n};\n\n/**\n * @description Converts an X, Y coordinate from the range -1 to 1 (as reported by the Gamepad\n * API) to the range 0 to 1 (for interpolation). Also caps the X, Y values to be bounded within\n * a circle. This ensures that thumbsticks are not animated outside the bounds of their physical\n * range of motion and touchpads do not report touch locations off their physical bounds.\n * @param {number} x The original x coordinate in the range -1 to 1\n * @param {number} y The original y coordinate in the range -1 to 1\n */\nfunction normalizeAxes(x = 0, y = 0) {\n  let xAxis = x;\n  let yAxis = y;\n\n  // Determine if the point is outside the bounds of the circle\n  // and, if so, place it on the edge of the circle\n  const hypotenuse = Math.sqrt((x * x) + (y * y));\n  if (hypotenuse > 1) {\n    const theta = Math.atan2(y, x);\n    xAxis = Math.cos(theta);\n    yAxis = Math.sin(theta);\n  }\n\n  // Scale and move the circle so values are in the interpolation range.  The circle's origin moves\n  // from (0, 0) to (0.5, 0.5). The circle's radius scales from 1 to be 0.5.\n  const result = {\n    normalizedXAxis: (xAxis * 0.5) + 0.5,\n    normalizedYAxis: (yAxis * 0.5) + 0.5\n  };\n  return result;\n}\n\n/**\n * Contains the description of how the 3D model should visually respond to a specific user input.\n * This is accomplished by initializing the object with the name of a node in the 3D model and\n * property that need to be modified in response to user input, the name of the nodes representing\n * the allowable range of motion, and the name of the input which triggers the change. In response\n * to the named input changing, this object computes the appropriate weighting to use for\n * interpolating between the range of motion nodes.\n */\nclass VisualResponse {\n  constructor(visualResponseDescription) {\n    this.componentProperty = visualResponseDescription.componentProperty;\n    this.states = visualResponseDescription.states;\n    this.valueNodeName = visualResponseDescription.valueNodeName;\n    this.valueNodeProperty = visualResponseDescription.valueNodeProperty;\n\n    if (this.valueNodeProperty === Constants.VisualResponseProperty.TRANSFORM) {\n      this.minNodeName = visualResponseDescription.minNodeName;\n      this.maxNodeName = visualResponseDescription.maxNodeName;\n    }\n\n    // Initializes the response's current value based on default data\n    this.value = 0;\n    this.updateFromComponent(defaultComponentValues);\n  }\n\n  /**\n   * Computes the visual response's interpolation weight based on component state\n   * @param {Object} componentValues - The component from which to update\n   * @param {number} xAxis - The reported X axis value of the component\n   * @param {number} yAxis - The reported Y axis value of the component\n   * @param {number} button - The reported value of the component's button\n   * @param {string} state - The component's active state\n   */\n  updateFromComponent({\n    xAxis, yAxis, button, state\n  }) {\n    const { normalizedXAxis, normalizedYAxis } = normalizeAxes(xAxis, yAxis);\n    switch (this.componentProperty) {\n      case Constants.ComponentProperty.X_AXIS:\n        this.value = (this.states.includes(state)) ? normalizedXAxis : 0.5;\n        break;\n      case Constants.ComponentProperty.Y_AXIS:\n        this.value = (this.states.includes(state)) ? normalizedYAxis : 0.5;\n        break;\n      case Constants.ComponentProperty.BUTTON:\n        this.value = (this.states.includes(state)) ? button : 0;\n        break;\n      case Constants.ComponentProperty.STATE:\n        if (this.valueNodeProperty === Constants.VisualResponseProperty.VISIBILITY) {\n          this.value = (this.states.includes(state));\n        } else {\n          this.value = this.states.includes(state) ? 1.0 : 0.0;\n        }\n        break;\n      default:\n        throw new Error(`Unexpected visualResponse componentProperty ${this.componentProperty}`);\n    }\n  }\n}\n\nclass Component {\n  /**\n   * @param {Object} componentId - Id of the component\n   * @param {Object} componentDescription - Description of the component to be created\n   */\n  constructor(componentId, componentDescription) {\n    if (!componentId\n     || !componentDescription\n     || !componentDescription.visualResponses\n     || !componentDescription.gamepadIndices\n     || Object.keys(componentDescription.gamepadIndices).length === 0) {\n      throw new Error('Invalid arguments supplied');\n    }\n\n    this.id = componentId;\n    this.type = componentDescription.type;\n    this.rootNodeName = componentDescription.rootNodeName;\n    this.touchPointNodeName = componentDescription.touchPointNodeName;\n\n    // Build all the visual responses for this component\n    this.visualResponses = {};\n    Object.keys(componentDescription.visualResponses).forEach((responseName) => {\n      const visualResponse = new VisualResponse(componentDescription.visualResponses[responseName]);\n      this.visualResponses[responseName] = visualResponse;\n    });\n\n    // Set default values\n    this.gamepadIndices = Object.assign({}, componentDescription.gamepadIndices);\n\n    this.values = {\n      state: Constants.ComponentState.DEFAULT,\n      button: (this.gamepadIndices.button !== undefined) ? 0 : undefined,\n      xAxis: (this.gamepadIndices.xAxis !== undefined) ? 0 : undefined,\n      yAxis: (this.gamepadIndices.yAxis !== undefined) ? 0 : undefined\n    };\n  }\n\n  get data() {\n    const data = { id: this.id, ...this.values };\n    return data;\n  }\n\n  /**\n   * @description Poll for updated data based on current gamepad state\n   * @param {Object} gamepad - The gamepad object from which the component data should be polled\n   */\n  updateFromGamepad(gamepad) {\n    // Set the state to default before processing other data sources\n    this.values.state = Constants.ComponentState.DEFAULT;\n\n    // Get and normalize button\n    if (this.gamepadIndices.button !== undefined\n        && gamepad.buttons.length > this.gamepadIndices.button) {\n      const gamepadButton = gamepad.buttons[this.gamepadIndices.button];\n      this.values.button = gamepadButton.value;\n      this.values.button = (this.values.button < 0) ? 0 : this.values.button;\n      this.values.button = (this.values.button > 1) ? 1 : this.values.button;\n\n      // Set the state based on the button\n      if (gamepadButton.pressed || this.values.button === 1) {\n        this.values.state = Constants.ComponentState.PRESSED;\n      } else if (gamepadButton.touched || this.values.button > Constants.ButtonTouchThreshold) {\n        this.values.state = Constants.ComponentState.TOUCHED;\n      }\n    }\n\n    // Get and normalize x axis value\n    if (this.gamepadIndices.xAxis !== undefined\n        && gamepad.axes.length > this.gamepadIndices.xAxis) {\n      this.values.xAxis = gamepad.axes[this.gamepadIndices.xAxis];\n      this.values.xAxis = (this.values.xAxis < -1) ? -1 : this.values.xAxis;\n      this.values.xAxis = (this.values.xAxis > 1) ? 1 : this.values.xAxis;\n\n      // If the state is still default, check if the xAxis makes it touched\n      if (this.values.state === Constants.ComponentState.DEFAULT\n        && Math.abs(this.values.xAxis) > Constants.AxisTouchThreshold) {\n        this.values.state = Constants.ComponentState.TOUCHED;\n      }\n    }\n\n    // Get and normalize Y axis value\n    if (this.gamepadIndices.yAxis !== undefined\n        && gamepad.axes.length > this.gamepadIndices.yAxis) {\n      this.values.yAxis = gamepad.axes[this.gamepadIndices.yAxis];\n      this.values.yAxis = (this.values.yAxis < -1) ? -1 : this.values.yAxis;\n      this.values.yAxis = (this.values.yAxis > 1) ? 1 : this.values.yAxis;\n\n      // If the state is still default, check if the yAxis makes it touched\n      if (this.values.state === Constants.ComponentState.DEFAULT\n        && Math.abs(this.values.yAxis) > Constants.AxisTouchThreshold) {\n        this.values.state = Constants.ComponentState.TOUCHED;\n      }\n    }\n\n    // Update the visual response weights based on the current component data\n    Object.values(this.visualResponses).forEach((visualResponse) => {\n      visualResponse.updateFromComponent(this.values);\n    });\n  }\n}\n\n/**\n  * @description Builds a motion controller with components and visual responses based on the\n  * supplied profile description. Data is polled from the xrInputSource's gamepad.\n  * @author Nell Waliczek / https://github.com/NellWaliczek\n*/\nclass MotionController {\n  /**\n   * @param {Object} xrInputSource - The XRInputSource to build the MotionController around\n   * @param {Object} profile - The best matched profile description for the supplied xrInputSource\n   * @param {Object} assetUrl\n   */\n  constructor(xrInputSource, profile, assetUrl) {\n    if (!xrInputSource) {\n      throw new Error('No xrInputSource supplied');\n    }\n\n    if (!profile) {\n      throw new Error('No profile supplied');\n    }\n\n    this.xrInputSource = xrInputSource;\n    this.assetUrl = assetUrl;\n    this.id = profile.profileId;\n\n    // Build child components as described in the profile description\n    this.layoutDescription = profile.layouts[xrInputSource.handedness];\n    this.components = {};\n    Object.keys(this.layoutDescription.components).forEach((componentId) => {\n      const componentDescription = this.layoutDescription.components[componentId];\n      this.components[componentId] = new Component(componentId, componentDescription);\n    });\n\n    // Initialize components based on current gamepad state\n    this.updateFromGamepad();\n  }\n\n  get gripSpace() {\n    return this.xrInputSource.gripSpace;\n  }\n\n  get targetRaySpace() {\n    return this.xrInputSource.targetRaySpace;\n  }\n\n  /**\n   * @description Returns a subset of component data for simplified debugging\n   */\n  get data() {\n    const data = [];\n    Object.values(this.components).forEach((component) => {\n      data.push(component.data);\n    });\n    return data;\n  }\n\n  /**\n   * @description Poll for updated data based on current gamepad state\n   */\n  updateFromGamepad() {\n    Object.values(this.components).forEach((component) => {\n      component.updateFromGamepad(this.xrInputSource.gamepad);\n    });\n  }\n}\n\nexport { Constants, MotionController, fetchProfile, fetchProfilesList };\n","/* global THREE */\nconst {\n\tMesh,\n\tMeshBasicMaterial,\n\tObject3D,\n\tSphereGeometry,\n} = THREE;\n\nimport {\n\tConstants as MotionControllerConstants,\n\tfetchProfile,\n\tMotionController\n} from 'three/examples/jsm/libs/motion-controllers.module.js';\n\nconst DEFAULT_PROFILES_PATH = 'https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets/dist/profiles';\nconst DEFAULT_PROFILE = 'generic-trigger';\n\nclass XRControllerModel extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.motionController = null;\n\t\tthis.envMap = null;\n\n\t}\n\n\tsetEnvironmentMap( envMap ) {\n\n\t\tif ( this.envMap == envMap ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.envMap = envMap;\n\t\tthis.traverse( ( child ) => {\n\n\t\t\tif ( child.isMesh ) {\n\n\t\t\t\tchild.material.envMap = this.envMap;\n\t\t\t\tchild.material.needsUpdate = true;\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Polls data from the XRInputSource and updates the model's components to match\n\t * the real world data\n\t */\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( ! this.motionController ) return;\n\n\t\t// Cause the MotionController to poll the Gamepad for data\n\t\tthis.motionController.updateFromGamepad();\n\n\t\t// Update the 3D model to reflect the button, thumbstick, and touchpad state\n\t\tObject.values( this.motionController.components ).forEach( ( component ) => {\n\n\t\t\t// Update node data based on the visual responses' current states\n\t\t\tObject.values( component.visualResponses ).forEach( ( visualResponse ) => {\n\n\t\t\t\tconst { valueNode, minNode, maxNode, value, valueNodeProperty } = visualResponse;\n\n\t\t\t\t// Skip if the visual response node is not found. No error is needed,\n\t\t\t\t// because it will have been reported at load time.\n\t\t\t\tif ( ! valueNode ) return;\n\n\t\t\t\t// Calculate the new properties based on the weight supplied\n\t\t\t\tif ( valueNodeProperty === MotionControllerConstants.VisualResponseProperty.VISIBILITY ) {\n\n\t\t\t\t\tvalueNode.visible = value;\n\n\t\t\t\t} else if ( valueNodeProperty === MotionControllerConstants.VisualResponseProperty.TRANSFORM ) {\n\n\t\t\t\t\tvalueNode.quaternion.slerpQuaternions(\n\t\t\t\t\t\tminNode.quaternion,\n\t\t\t\t\t\tmaxNode.quaternion,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t);\n\n\t\t\t\t\tvalueNode.position.lerpVectors(\n\t\t\t\t\t\tminNode.position,\n\t\t\t\t\t\tmaxNode.position,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n}\n\n/**\n * Walks the model's tree to find the nodes needed to animate the components and\n * saves them to the motionContoller components for use in the frame loop. When\n * touchpads are found, attaches a touch dot to them.\n */\nfunction findNodes( motionController, scene ) {\n\n\t// Loop through the components and find the nodes needed for each components' visual responses\n\tObject.values( motionController.components ).forEach( ( component ) => {\n\n\t\tconst { type, touchPointNodeName, visualResponses } = component;\n\n\t\tif ( type === MotionControllerConstants.ComponentType.TOUCHPAD ) {\n\n\t\t\tcomponent.touchPointNode = scene.getObjectByName( touchPointNodeName );\n\t\t\tif ( component.touchPointNode ) {\n\n\t\t\t\t// Attach a touch dot to the touchpad.\n\t\t\t\tconst sphereGeometry = new SphereGeometry( 0.001 );\n\t\t\t\tconst material = new MeshBasicMaterial( { color: 0x0000FF } );\n\t\t\t\tconst sphere = new Mesh( sphereGeometry, material );\n\t\t\t\tcomponent.touchPointNode.add( sphere );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( `Could not find touch dot, ${component.touchPointNodeName}, in touchpad component ${component.id}` );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Loop through all the visual responses to be applied to this component\n\t\tObject.values( visualResponses ).forEach( ( visualResponse ) => {\n\n\t\t\tconst { valueNodeName, minNodeName, maxNodeName, valueNodeProperty } = visualResponse;\n\n\t\t\t// If animating a transform, find the two nodes to be interpolated between.\n\t\t\tif ( valueNodeProperty === MotionControllerConstants.VisualResponseProperty.TRANSFORM ) {\n\n\t\t\t\tvisualResponse.minNode = scene.getObjectByName( minNodeName );\n\t\t\t\tvisualResponse.maxNode = scene.getObjectByName( maxNodeName );\n\n\t\t\t\t// If the extents cannot be found, skip this animation\n\t\t\t\tif ( ! visualResponse.minNode ) {\n\n\t\t\t\t\tconsole.warn( `Could not find ${minNodeName} in the model` );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! visualResponse.maxNode ) {\n\n\t\t\t\t\tconsole.warn( `Could not find ${maxNodeName} in the model` );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// If the target node cannot be found, skip this animation\n\t\t\tvisualResponse.valueNode = scene.getObjectByName( valueNodeName );\n\t\t\tif ( ! visualResponse.valueNode ) {\n\n\t\t\t\tconsole.warn( `Could not find ${valueNodeName} in the model` );\n\n\t\t\t}\n\n\t\t} );\n\n\t} );\n\n}\n\nfunction addAssetSceneToControllerModel( controllerModel, scene ) {\n\n\t// Find the nodes needed for animation and cache them on the motionController.\n\tfindNodes( controllerModel.motionController, scene );\n\n\t// Apply any environment map that the mesh already has set.\n\tif ( controllerModel.envMap ) {\n\n\t\tscene.traverse( ( child ) => {\n\n\t\t\tif ( child.isMesh ) {\n\n\t\t\t\tchild.material.envMap = controllerModel.envMap;\n\t\t\t\tchild.material.needsUpdate = true;\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t// Add the glTF scene to the controllerModel.\n\tcontrollerModel.add( scene );\n\n}\n\nclass XRControllerModelFactory {\n\n\tconstructor( gltfLoader, path ) {\n\n\t\tthis.gltfLoader = gltfLoader;\n\t\tthis.path = path || DEFAULT_PROFILES_PATH;\n\t\tthis._assetCache = {};\n\n\t}\n\n\tcreateControllerModel( controller ) {\n\n\t\tconst controllerModel = new XRControllerModel();\n\t\tlet scene = null;\n\n\t\tcontroller.addEventListener( 'connected', ( event ) => {\n\n\t\t\tconst xrInputSource = event.data;\n\n\t\t\tif ( xrInputSource.targetRayMode !== 'tracked-pointer' || ! xrInputSource.gamepad ) return;\n\n\t\t\tfetchProfile( xrInputSource, this.path, DEFAULT_PROFILE ).then( ( { profile, assetPath } ) => {\n\n\t\t\t\tcontrollerModel.motionController = new MotionController(\n\t\t\t\t\txrInputSource,\n\t\t\t\t\tprofile,\n\t\t\t\t\tassetPath\n\t\t\t\t);\n\n\t\t\t\tconst buttons = [];\n\t\t\t\tconst axes = [];\n\t\t\t\tconst gamepadMappings = { buttons, axes };\n\t\t\t\tcontrollerModel.gamepadMappings = gamepadMappings;\n\n\t\t\t\tif (controllerModel.motionController.layoutDescription?.components) {\n\t\t\t\t\tfor (let [name, details] of Object.entries(controllerModel.motionController.layoutDescription.components)) {\n\t\t\t\t\t\tname = name.replace('xr-standard-', '');\n\t\t\t\t\t\tfor (const [type, index] of Object.entries(details.gamepadIndices)) {\n\t\t\t\t\t\t\tif (type === 'button') {\n\t\t\t\t\t\t\t\tbuttons[index] = name;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\taxes[index] = {name,type};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst cachedAsset = this._assetCache[ controllerModel.motionController.assetUrl ];\n\t\t\t\tif ( cachedAsset ) {\n\n\t\t\t\t\tscene = cachedAsset.scene.clone();\n\n\t\t\t\t\taddAssetSceneToControllerModel( controllerModel, scene );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! this.gltfLoader ) {\n\n\t\t\t\t\t\tthrow new Error( 'GLTFLoader not set.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.gltfLoader.setPath( '' );\n\t\t\t\t\tthis.gltfLoader.load( controllerModel.motionController.assetUrl, ( asset ) => {\n\n\t\t\t\t\t\tthis._assetCache[ controllerModel.motionController.assetUrl ] = asset;\n\n\t\t\t\t\t\tscene = asset.scene.clone();\n\n\t\t\t\t\t\taddAssetSceneToControllerModel( controllerModel, scene );\n\n\t\t\t\t\t},\n\t\t\t\t\tnull,\n\t\t\t\t\t() => {\n\n\t\t\t\t\t\tthrow new Error( `Asset ${controllerModel.motionController.assetUrl} missing or malformed.` );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} ).catch( ( err ) => {\n\n\t\t\t\tconsole.warn( err );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\tcontroller.addEventListener( 'disconnected', () => {\n\n\t\t\tcontrollerModel.motionController = null;\n\t\t\tcontrollerModel.remove( scene );\n\t\t\tscene = null;\n\n\t\t} );\n\n\t\treturn controllerModel;\n\n\t}\n\n}\n\nexport { XRControllerModelFactory };\n","/* global AFRAME, THREE */\nimport { XRControllerModelFactory } from './lib/XRControllerModelFactory.js';\nconst __version__ = __version__;\nconst DEFAULT_PROFILES_PATH = \"https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets/dist/profiles\";\nconst DEFAULT_HAND_PROFILE_PATH = DEFAULT_PROFILES_PATH + \"/generic-hand\";\nconst LIB_URL = \"https://cdn.jsdelivr.net/npm/handy-work\" + (__version__ ? '@' + __version__ : '');\nconst LIB = LIB_URL + \"/build/esm/handy-work.standalone.js\";\nconst POSE_FOLDER = LIB_URL + \"/poses/\";\nconst clamp = (a, min = 0, max = 1) => Math.min(max, Math.max(min, a));\nconst invlerp = (x, y, a) => clamp((a - x) / (y - x));\nconst prevGamePads = new Map();\nconst changedAxes = new Set();\n\nconst tempVector3_A = new THREE.Vector3();\nconst tempVector3_B = new THREE.Vector3();\nconst tempQuaternion_A = new THREE.Quaternion();\nconst tempQuaternion_B = new THREE.Quaternion();\nconst tempQuaternion_C = new THREE.Quaternion();\nconst handednesses = ['left', 'right', 'none'];\n\nconst joints = [\n  \"wrist\",\n  \"thumb-metacarpal\",\n  \"thumb-phalanx-proximal\",\n  \"thumb-phalanx-distal\",\n  \"thumb-tip\",\n  \"index-finger-metacarpal\",\n  \"index-finger-phalanx-proximal\",\n  \"index-finger-phalanx-intermediate\",\n  \"index-finger-phalanx-distal\",\n  \"index-finger-tip\",\n  \"middle-finger-metacarpal\",\n  \"middle-finger-phalanx-proximal\",\n  \"middle-finger-phalanx-intermediate\",\n  \"middle-finger-phalanx-distal\",\n  \"middle-finger-tip\",\n  \"ring-finger-metacarpal\",\n  \"ring-finger-phalanx-proximal\",\n  \"ring-finger-phalanx-intermediate\",\n  \"ring-finger-phalanx-distal\",\n  \"ring-finger-tip\",\n  \"pinky-finger-metacarpal\",\n  \"pinky-finger-phalanx-proximal\",\n  \"pinky-finger-phalanx-intermediate\",\n  \"pinky-finger-phalanx-distal\",\n  \"pinky-finger-tip\",\n];\n\nAFRAME.registerComponent(\"handy-controls\", {\n  schema: {\n    renderGamepad: {\n      oneOf: ['any', 'left', 'right', 'none', 'never'],\n      default: 'any',\n      description: `Whether to render a gamepad model when it's not doing hand tracking, right, none and left are the names of controller handedness, any is all of them, and never is to not draw gamepads`\n    },\n    left: {\n      description: 'URL for left controller',\n      type: 'model',\n      default: DEFAULT_HAND_PROFILE_PATH + \"/left.glb\",\n    },\n    right: {\n      description: 'URL for right controller',\n      type: 'model',\n      default: DEFAULT_HAND_PROFILE_PATH + \"/right.glb\",\n    },\n    materialOverride: {\n      description: 'Which hand to use the `material` component for',\n      oneOf: ['both', 'left', 'right', 'neither'],\n      default: 'both'\n    },\n    fuseVShort: {\n      description: 'Time for a pose to trigger a pose event (ms)',\n      default:48\n    },\n    fuseShort: {\n      description: 'Time for a pose to trigger a pose_fuseShort event (ms)',\n      default:480\n    },\n    fuseLong: {\n      description: 'Time for a pose to trigger a pose_fuseLong event (ms)',\n      default:1440\n    }\n  },\n  init() {\n    const sceneEl = this.el.sceneEl;\n    const webxrData = this.el.sceneEl.getAttribute('webxr');\n    const optionalFeaturesArray = webxrData.optionalFeatures;\n    if (!optionalFeaturesArray.includes('hand-tracking')) {\n      optionalFeaturesArray.push('hand-tracking');\n      this.el.sceneEl.setAttribute('webxr', webxrData);\n    }\n    \n    this.loader = new THREE.GLTFLoader();\n    const self = this;\n    const dracoLoader = this.el.sceneEl.systems['gltf-model'].getDRACOLoader();\n    const meshoptDecoder = this.el.sceneEl.systems['gltf-model'].getMeshoptDecoder();\n    this.controllerModelFactory = new XRControllerModelFactory(this.loader, DEFAULT_PROFILES_PATH);\n    this.model = null;\n    if (dracoLoader) {\n      this.loader.setDRACOLoader(dracoLoader);\n    }\n    if (meshoptDecoder) {\n      this.ready = meshoptDecoder.then(function (meshoptDecoder) {\n        self.loader.setMeshoptDecoder(meshoptDecoder);\n      });\n    } else {\n      this.ready = Promise.resolve();\n    }\n    \n    import(LIB)\n    .then(function ({\n\t\t\tupdate,\n\t\t\tloadPose,\n\t\t\tdumpHands,\n      setPose,\n      getPose\n    }) {\n      this.handyWorkUpdate = update;\n      this.dumpHands = dumpHands;\n      this.loadPose = loadPose;\n      this.setPose = setPose;\n      this.getPose = getPose;\n\n      loadPose('relax', POSE_FOLDER + 'relax.handpose');\n      loadPose('fist', POSE_FOLDER + 'fist.handpose');\n      loadPose('flat', POSE_FOLDER + 'flat.handpose');\n      loadPose('point', POSE_FOLDER + 'point.handpose');\n      loadPose('horns', POSE_FOLDER + 'horns.handpose');\n      loadPose('shaka', POSE_FOLDER + 'shaka.handpose');\n      loadPose('vulcan', POSE_FOLDER + 'vulcan.handpose');\n    }.bind(this));\n    \n    for (const handedness of handednesses) {\n      const els = Array.from(this.el.querySelectorAll(`[data-${handedness}]`));\n      for (const el of els) {\n        el.object3D.visible = false;\n      }\n    }\n\n    sceneEl.addEventListener(\"enter-vr\", () => {\n      for (const name of [\"select\", \"selectstart\", \"selectend\", \"squeeze\", \"squeezeend\", \"squeezestart\"])\n        sceneEl.xrSession.addEventListener(name, this.eventFactory(name, this));\n    });\n\n    this.elArrays = { left: [], right: [], none: [] };\n    this.elMaps = { left: new Map(), right: new Map(), none: new Map() };\n    this.magnetEls = new Map();\n    this.magnetTargets = new Map();\n\n    function reconstructElMaps() {\n      for (const handedness of handednesses) {\n        self.elArrays[handedness].splice(0);\n        self.elMaps[handedness].clear();\n        self.magnetEls.clear();\n        self.magnetTargets.clear();\n      }\n\n      const els = Array.from(self.el.children).filter(el=>el.dataset.left||el.dataset.right||el.dataset.none);\n      for (const el of els) {\n        for (const handedness of handednesses) {\n          if (el.dataset[handedness] !== undefined) {\n            self.elArrays[handedness].push(el);\n            const poseName = el.dataset[handedness];\n            const poseElArray = self.elMaps[handedness].get(poseName) || [];\n            poseElArray.push(el);\n            self.elMaps[handedness].set(poseName, poseElArray);\n\n            if (el.dataset.magnet) {\n              self.magnetEls.set(handedness, el);\n              self.magnetTargets.set(el, null);\n            }\n          }\n        }\n      }\n    }\n    reconstructElMaps();\n    // if the children of this element change then rebuild the lists\n    new MutationObserver(reconstructElMaps).observe(this.el, { childList: true });\n    // If any of the hands change position rebuild it\n    new MutationObserver(function (changes) {\n      if (changes.find(change => (\n        change.attributeName === 'data-none' ||\n        change.attributeName === 'data-left' ||\n        change.attributeName === 'data-right' ||\n        change.attributeName === 'data-magnet'\n      ))) reconstructElMaps();\n    }).observe(this.el, { attributes: true, subtree: true });\n  },\n\n  getMagnetTargets(el) {\n    const magnetTargets = this.magnetTargets.get(el);\n    if (magnetTargets === null) {\n      const magnetTargets = document.getElementsByClassName(el.dataset.magnet);\n      this.magnetTargets.set(el, magnetTargets);\n      return magnetTargets;\n    }\n    return magnetTargets;\n  },\n\n  async gltfToJoints(src, name) {\n    const el = this.el;\n    await this.ready;\n\n    const gltf = await new Promise(function (resolve, reject) {\n      this.loader.load(src, resolve, undefined, reject);\n    }.bind(this));\n\n    const object = gltf.scene.children[0];\n    const mesh = object.getObjectByProperty(\"type\", \"SkinnedMesh\");\n    \n    if (this.el.components.material) {\n      if (this.data.materialOverride === 'both' || this.data.materialOverride === name) {\n        mesh.material = this.el.components.material.material;\n      }\n    }\n    \n    mesh.visible = false;\n    mesh.frustumCulled = false;\n    mesh.castShadow = true;\n    mesh.receiveShadow = true;\n    mesh.skeleton.pose();\n    \n    const bones = [];\n    for (const jointName of joints) {\n      const bone = object.getObjectByName(jointName);\n      if (bone !== undefined) {\n        bone.jointName = jointName;\n        bones.push(bone);\n        bone.applyMatrix4(this.el.object3D.matrixWorld);\n        bone.updateMatrixWorld();\n      } else {\n        console.warn(`Couldn't find ${jointName} in ${src} hand mesh`);\n        bones.push(undefined); // add an empty slot\n      }\n    }\n    el.setObject3D('hand-mesh-' + name, mesh);\n    el.emit(\"model-loaded\", { format: \"gltf\", model: mesh });\n    return bones;\n  },\n\n  async update(oldData) {\n    const el = this.el;\n    const srcLeft = this.data.left;\n    const srcRight = this.data.right;\n\n    // Only reload models if they changed\n    if (\n      oldData.left !== this.data.left ||\n      oldData.right !== this.data.right ||\n      oldData.renderGamepad !== this.data.renderGamepad\n    ) {\n      this.remove();\n    }\n    if (oldData.left !== this.data.left || oldData.right !== this.data.right) {\n      try {\n        this.bonesRight = await this.gltfToJoints(srcRight, \"right\");\n        this.bonesLeft = await this.gltfToJoints(srcLeft, \"left\");\n      } catch (error) {\n        const message = error && error.message ? error.message : \"Failed to load glTF model\";\n        console.warn(message);\n        el.emit(\"hand-model-error\", { message });\n      }\n    }\n  },\n\n  eventFactory(eventName, bindTarget, event) {\n    function eventHandler(e) {\n      const session = this.el.sceneEl.xrSession;\n      const frame = e.frame;\n      const inputSource = e.inputSource;\n      const referenceSpace = this.el.sceneEl.renderer.xr.getReferenceSpace();\n      const pose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n      const handedness = e.inputSource.handedness;\n      const details = {\n        inputSource,\n        handedness,\n        frame\n      }\n      if (!pose) return;\n\n      const allEls = this.elArrays[handedness];\n      if (inputSource.targetRayMode === \"screen\") {\n        const name = `screen-${\n          Array.from(session.inputSources).filter(i=>i.targetRayMode === \"screen\").indexOf(inputSource)\n        }`;\n        for (const el of allEls) {\n          if (el.dataset[handedness] === name) {\n            el.object3D.position.copy(pose.transform.position);\n            el.object3D.quaternion.copy(pose.transform.orientation);\n            el.object3D.visible = (el.getDOMAttribute('visible') !== false);\n            el.emit(eventName, details);\n          }\n        }\n      } else if (inputSource.gamepad || inputSource.hand) {\n        for (const el of allEls) el.emit(eventName, details);\n      }\n    }\n    if (event) return eventHandler.call(bindTarget, event);\n    return eventHandler.bind(bindTarget);\n  },\n\n  getControllerModel(index, inputSource) {\n    const object = this.el.getObject3D('controller-model-' + inputSource.handedness);\n    if (object) {\n      return object;\n    } else {\n      const renderer = this.el.sceneEl.renderer;\n      const group = renderer.xr.getControllerGrip(index);\n      const model = this.controllerModelFactory.createControllerModel(group);\n\n      // This tells the controllerModel that a new inputSource was just added and a model should be generated\n      group.dispatchEvent({ type: 'connected', data: inputSource });\n      this.el.setObject3D('controller-model-' + inputSource.handedness, model);\n      return model;\n    }\n  },\n\n  tick() {\n    const self = this;\n    const session = this.el.sceneEl.xrSession;\n    if (!session) return;\n    const renderer = this.el.sceneEl.renderer;\n    const referenceSpace = renderer.xr.getReferenceSpace();\n    const toUpdate = [];\n    const frame = this.el.sceneEl.frame;\n    if (!frame) return;\n\n    let i=0;\n    let transientSourceIndex = 0;\n    inputSourceLoop:\n    for (const inputSource of session.inputSources) {\n      const inputSourceIndex = i++;\n      const magnetEl = this.magnetEls.get(inputSource.handedness);\n      let magnetTarget = null;\n      let fadeT = 1;\n      let bones = [];\n      const toMagnet = [];\n      let controllerModel;\n      let handMesh;\n      \n      const allEls = this.elArrays[inputSource.handedness];\n      const elMap = this.elMaps[inputSource.handedness];\n\n      handMesh = this.el.getObject3D(\"hand-mesh-\" + inputSource.handedness);\n      if (inputSource.hand) {\n        toUpdate.push(inputSource);\n        const controllerModel = this.el.getObject3D('controller-model-' + inputSource.handedness);\n        if (controllerModel) controllerModel.visible = false;\n  \n        bones =\n          (inputSource.handedness === \"right\" && this.bonesRight) ||\n          (inputSource.handedness === \"left\" && this.bonesLeft);\n        if (!bones.length) continue;\n        let hadAJointPose = false;\n        for (const bone of bones) {\n          const joint = inputSource.hand.get(bone.jointName);\n          toMagnet.push(bone);\n          if (joint) {\n\n            const pose = frame.getJointPose(joint, referenceSpace);\n            if (pose) {\n              hadAJointPose = true;\n\n              // if there are objects make them visible and set their position\n              if (elMap.has(bone.jointName)) {\n\n                if (handMesh.visible === false) {\n                  for (const el of elMap.get(bone.jointName)) {\n                    el.object3D.visible = (el.getDOMAttribute('visible') !== false);\n                  }\n                }\n\n                for (const el of elMap.get(bone.jointName)) {\n                  el.object3D.position.copy(pose.transform.position);\n                  el.object3D.quaternion.copy(pose.transform.orientation);\n                  if (el.dataset.noMagnet === undefined) toMagnet.push(el.object3D);\n                }\n              }\n              \n              bone.position.copy(pose.transform.position);\n              bone.quaternion.copy(pose.transform.orientation);\n            } else {\n              // Failed to get hand pose so continue looping over other inputSource\n              continue inputSourceLoop;\n            }\n          }\n        }\n        if (hadAJointPose) {\n          handMesh.visible = true;\n        }\n      } else if (handMesh)  {\n        handMesh.visible = false;\n\n        for (const el of allEls){\n          el.object3D.visible = false;\n        }\n      }\n\n      if (inputSource.targetRayMode === \"screen\") {\n        const name = `screen-${transientSourceIndex++}`;\n        if (elMap.has(name)) {\n          const pose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n          if (!pose) continue inputSourceLoop;\n          for (const el of elMap.get(name)) {\n            el.object3D.position.copy(pose.transform.position);\n            el.object3D.quaternion.copy(pose.transform.orientation);\n            el.object3D.visible = (el.getDOMAttribute('visible') !== false);\n          }\n        }\n\n        // Don't do the magnet behaviour and don't render any gamepads\n        continue inputSourceLoop;\n      }\n\n      // handle any tracked elements attached to the ray space of the input source this works for any types\n      for (const [name, inputSourcePose] of [\n        ['ray', inputSource.targetRaySpace],\n        ['grip', inputSource.gripSpace]\n      ]) {\n        if (elMap.has(name) && inputSourcePose) {\n          const pose = frame.getPose(inputSourcePose, referenceSpace);\n          if (pose) {\n            for (const el of elMap.get(name)) {\n              el.object3D.position.copy(pose.transform.position);\n              el.object3D.quaternion.copy(pose.transform.orientation);\n              const elShouldBeVisible = (el.getDOMAttribute('visible') !== false)\n              el.object3D.visible = elShouldBeVisible;\n              if (el.dataset.noMagnet === undefined) toMagnet.push(el.object3D);\n            }\n          }\n        }\n      }\n\n      // If we should draw gamepads then do, but don't draw gamepad and hand if btoh present\n      if (\n        (this.data.renderGamepad === \"any\" || this.data.renderGamepad === inputSource.handedness) &&\n        inputSource.gamepad && !inputSource.hand\n      ) {\n        controllerModel = this.getControllerModel(inputSourceIndex, inputSource);\n        controllerModel.visible = true;\n\n        if (inputSource.gripSpace) {\n          const pose = frame.getPose(inputSource.gripSpace, referenceSpace);\n          if (pose) {\n            controllerModel.position.copy(pose.transform.position);\n            controllerModel.quaternion.copy(pose.transform.orientation);\n            toMagnet.push(controllerModel);\n          }\n        }\n\n        // if it has a gamepad fire events for gamepad changes\n        const old = prevGamePads.get(inputSource);\n        const data = {\n          buttons: inputSource.gamepad.buttons.map(b => b.value),\n          axes: inputSource.gamepad.axes.slice(0)\n        };\n        if (old) {\n          const eventDetails = {handedness: inputSource.handedness, inputSource, data, frame}\n          data.buttons.forEach((value,i)=>{\n            if (value !== old.buttons[i]) {\n              let name = controllerModel.gamepadMappings?.buttons[i] || `button${i}`;\n              if (value === 1) {\n                this.emitGamepad(allEls, `${name}down`, Object.assign({value}, eventDetails));\n              } else {\n                this.emitGamepad(allEls, `${name}up`, Object.assign({value}, eventDetails));\n              }\n            }\n          });\n          const axesMapping = controllerModel.gamepadMappings?.axes;\n          if (axesMapping && axesMapping.length) {\n            // There are some named axis so try to combine them together\n            changedAxes.clear();\n            const details =  {};\n            axesMapping.forEach(({name}, i)=>{\n              if (name) {\n                const value = data.axes[i];\n                if (value !== old.axes[i]) {\n                  changedAxes.add(name);\n                }\n              }\n            });\n            if (changedAxes.size) {\n              axesMapping.forEach(({name, type}, i)=>{\n                if (name && changedAxes.has(name)) {\n                  const value = data.axes[i];\n                  details[name] =  details[name] || {};\n                  details[name][type.slice(0,1)] = value;\n                }\n              });\n              for (const [name, detail] of Object.entries(details)) {\n                this.emitGamepad(allEls, `${name}moved`, Object.assign(detail, eventDetails));\n              }\n            }\n          } else {\n            data.axes.forEach((value,i)=>{\n              let name = controllerModel.gamepadMappings?.axes[i] || `axes${i}`;\n              if (value !== old.axes[i]) {\n                this.emitGamepad(allEls, `${name}moved`, Object.assign({value}, eventDetails));\n              }\n            });\n          }\n        }\n        prevGamePads.set(inputSource, data);\n      }\n      \n      if (magnetEl) {\n        magnetEl.object3D.updateWorldMatrix(true, false);\n        this.el.object3D.getWorldQuaternion(tempQuaternion_C).invert();\n\n        magnetEl.object3D.getWorldPosition(tempVector3_A);\n        for (const el of this.getMagnetTargets(magnetEl)) {\n          let magnetRange,fadeEnd,angleRange,angleEnd;\n          const magnetRangeData = el.dataset.magnetRange;\n          if (magnetRangeData) [magnetRange,fadeEnd,angleRange,angleEnd] = magnetRangeData.split(',').map(n => Number(n));\n          magnetRange = magnetRange || 0.2;\n          fadeEnd = fadeEnd === undefined ? 0.1 : fadeEnd;\n          angleRange = angleRange || 120;\n          angleEnd = angleEnd === undefined ? 80 : angleEnd;\n          const d =  el.object3D.getWorldPosition(tempVector3_B).sub(tempVector3_A).length();\n          if (d < magnetRange) {\n            const Θ = (180/Math.PI) * el.object3D.getWorldQuaternion(tempQuaternion_A).premultiply(tempQuaternion_C).angleTo(magnetEl.object3D.quaternion);\n            if (Θ < angleRange) {\n              magnetTarget = el;\n              fadeT = invlerp(magnetRange,fadeEnd,d) * invlerp(angleRange,angleEnd,Θ);\n              break;\n            }\n          }\n        }\n\n        if (fadeT > 0.2 && magnetTarget && magnetTarget.id) {\n          magnetEl.dataset.magnetTarget = magnetTarget.id;\n        } else {\n          delete magnetEl.dataset.magnetTarget;\n        }\n      }\n      \n      if (magnetTarget) {\n\n        this.el.object3D.worldToLocal(magnetTarget.object3D.getWorldPosition(tempVector3_A));\n        tempVector3_B.copy(magnetEl.object3D.position);\n        tempVector3_A.lerp(tempVector3_B, 1-fadeT).sub(tempVector3_B);\n        \n        // tempQuaternion_A is populated already when calculating if it's a close enough angle\n        // magnetTarget.object3D.getWorldQuaternion(tempQuaternion_A);\n        // tempQuaternion_A.premultiply(tempQuaternion_C);\n        tempQuaternion_B.copy(magnetEl.object3D.quaternion);\n        tempQuaternion_A.slerp(tempQuaternion_B, 1-fadeT).multiply(tempQuaternion_B.invert());\n        \n        // Move elements to match the bones but skil elements which are marked data-no-magnet\n        for (const object3D of toMagnet) {\n          object3D.position.sub(tempVector3_B);\n          object3D.position.applyQuaternion(tempQuaternion_A);\n          object3D.position.add(tempVector3_B);\n          object3D.applyQuaternion(tempQuaternion_A);\n          object3D.position.add(tempVector3_A);\n        }\n      }\n      for (const bone of bones) {\n        bone.applyMatrix4(this.el.object3D.matrixWorld);\n        bone.updateMatrixWorld();\n      }\n    }\n\n    // perform hand pose detection\n    if (toUpdate.length && this.handyWorkUpdate) {\n      this.handyWorkUpdate(\n        toUpdate,\n        referenceSpace,\n        frame,\n        function ({\n          distances, handedness\n        }) {\n          self.emitHandpose(distances[0][0], handedness, {\n            pose: distances[0][0],\n            poses: distances,\n            handedness,\n            frame\n          });\n        }\n      );\n    }\n  },\n  emitGamepad (els, name, details) {\n    details.event = name;\n    for (const el of els) {\n      el.emit(name, details, false);\n      el.emit('gamepad', details, false);\n    }\n  },\n  emitHandpose(name, handedness, details) {\n    const oldPoseName = this[handedness + '_currentPose'];\n    if (name === oldPoseName) return;\n    const els = this.elArrays[handedness];\n    \n    clearTimeout(this[handedness + '_vshortTimeout']);\n    clearTimeout(this[handedness + '_shortTimeout']);\n    clearTimeout(this[handedness + '_longTimeout']);\n\n    // This just fires cancel if it's no longer at the top but maybe be smarter?\n    if (oldPoseName) {\n      const oldPoseDetails = Object.assign({}, details);\n      oldPoseDetails.pose = oldPoseName;\n      for (const el of els) {\n        el.emit('pose_cancel_' + oldPoseName, oldPoseDetails, false);\n        el.emit('pose_end', oldPoseDetails, false);\n      }\n    }\n    \n    this[handedness + '_currentPose'] = name;\n\n    this[handedness + '_vshortTimeout'] = setTimeout(() => {\n      for (const el of els) {\n        el.emit('pose_' + name, details, false);\n        el.emit('pose', details, false);\n      }\n    }, this.data.fuseVShort);\n    \n    this[handedness + '_shortTimeout'] = setTimeout(() => {\n      for (const el of els) el.emit('pose_' + name + '_fuseShort', details, false);\n    }, this.data.fuseShort);\n    \n    this[handedness + '_longTimeout'] = setTimeout(() => { \n      for (const el of els) el.emit('pose_' + name + '_fuseLong', details, false);\n    }, this.data.fuseLong);\n  },\n  remove() {\n    if (this.bonesLeft) {\n      this.bonesLeft = null;\n      this.el.removeObject3D(\"hand-mesh-left\");\n    }\n    if (this.bonesRight) {\n      this.bonesRight = null;\n      this.el.removeObject3D(\"hand-mesh-right\");\n    }\n    if (this.el.getObject3D('controller-model-left')) this.el.removeObject3D('controller-model-left');\n    if (this.el.getObject3D('controller-model-right')) this.el.removeObject3D('controller-model-right');\n    if (this.el.getObject3D('controller-model-none')) this.el.removeObject3D('controller-model-none');\n  },\n});\n"],"names":["DEFAULT_PROFILES_PATH","MotionControllerConstants"],"mappings":"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"}