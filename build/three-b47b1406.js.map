{"version":3,"file":"three-b47b1406.js","sources":["../node_modules/three/src/constants.js","../node_modules/three/src/core/EventDispatcher.js","../node_modules/three/src/math/MathUtils.js","../node_modules/three/src/math/Vector2.js","../node_modules/three/src/math/Matrix3.js","../node_modules/three/src/extras/ImageUtils.js","../node_modules/three/src/textures/Texture.js","../node_modules/three/src/math/Vector4.js","../node_modules/three/src/renderers/WebGLRenderTarget.js","../node_modules/three/src/math/Quaternion.js","../node_modules/three/src/math/Vector3.js","../node_modules/three/src/math/Box3.js","../node_modules/three/src/math/Sphere.js","../node_modules/three/src/math/Ray.js","../node_modules/three/src/math/Matrix4.js","../node_modules/three/src/math/Euler.js","../node_modules/three/src/core/Layers.js","../node_modules/three/src/core/Object3D.js","../node_modules/three/src/math/Plane.js","../node_modules/three/src/math/Triangle.js","../node_modules/three/src/materials/Material.js","../node_modules/three/src/math/Color.js","../node_modules/three/src/materials/MeshBasicMaterial.js","../node_modules/three/src/core/BufferAttribute.js","../node_modules/three/src/utils.js","../node_modules/three/src/core/BufferGeometry.js","../node_modules/three/src/objects/Mesh.js","../node_modules/three/src/geometries/BoxGeometry.js","../node_modules/three/src/renderers/shaders/UniformsUtils.js","../node_modules/three/src/materials/ShaderMaterial.js","../node_modules/three/src/renderers/shaders/ShaderChunk/default_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/default_fragment.glsl.js","../node_modules/three/src/cameras/Camera.js","../node_modules/three/src/cameras/PerspectiveCamera.js","../node_modules/three/src/cameras/CubeCamera.js","../node_modules/three/src/textures/CubeTexture.js","../node_modules/three/src/renderers/WebGLCubeRenderTarget.js","../node_modules/three/src/math/Frustum.js","../node_modules/three/src/renderers/webgl/WebGLAnimation.js","../node_modules/three/src/renderers/webgl/WebGLAttributes.js","../node_modules/three/src/geometries/PlaneGeometry.js","../node_modules/three/src/renderers/shaders/ShaderChunk.js","../node_modules/three/src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/aomap_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/begin_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/bsdfs.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/color_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/color_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/common.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/encodings_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_common_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_physical_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/fog_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/fog_pars_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/fog_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/gradientmap_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/lights_pars_begin.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/lights_toon_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/lights_toon_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_begin.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_maps.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_end.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/map_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/normal_fragment_begin.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/normal_fragment_maps.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_begin.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_maps.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/packing.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/project_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/dithering_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/dithering_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/skinning_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/transmission_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/transmission_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/uv_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/uv2_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/background_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/background_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/cube_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/cube_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/depth_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/depth_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/equirect_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/equirect_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/linedashed_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/linedashed_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/meshbasic_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/meshbasic_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/meshlambert_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/meshlambert_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/meshmatcap_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/meshmatcap_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/meshtoon_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/meshtoon_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/meshphong_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/meshphong_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/meshphysical_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/meshphysical_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/normal_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/normal_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/points_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/points_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/shadow_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/shadow_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/sprite_frag.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/sprite_vert.glsl.js","../node_modules/three/src/renderers/shaders/UniformsLib.js","../node_modules/three/src/renderers/shaders/ShaderLib.js","../node_modules/three/src/renderers/webgl/WebGLBackground.js","../node_modules/three/src/renderers/webgl/WebGLBindingStates.js","../node_modules/three/src/renderers/webgl/WebGLBufferRenderer.js","../node_modules/three/src/renderers/webgl/WebGLCapabilities.js","../node_modules/three/src/renderers/webgl/WebGLClipping.js","../node_modules/three/src/renderers/webgl/WebGLCubeMaps.js","../node_modules/three/src/renderers/webgl/WebGLExtensions.js","../node_modules/three/src/renderers/webgl/WebGLGeometries.js","../node_modules/three/src/renderers/webgl/WebGLIndexedBufferRenderer.js","../node_modules/three/src/renderers/webgl/WebGLInfo.js","../node_modules/three/src/renderers/webgl/WebGLMorphtargets.js","../node_modules/three/src/renderers/webgl/WebGLObjects.js","../node_modules/three/src/textures/DataTexture2DArray.js","../node_modules/three/src/textures/DataTexture3D.js","../node_modules/three/src/renderers/webgl/WebGLUniforms.js","../node_modules/three/src/renderers/webgl/WebGLShader.js","../node_modules/three/src/renderers/webgl/WebGLProgram.js","../node_modules/three/src/renderers/webgl/WebGLPrograms.js","../node_modules/three/src/renderers/webgl/WebGLProperties.js","../node_modules/three/src/renderers/webgl/WebGLRenderLists.js","../node_modules/three/src/renderers/webgl/WebGLLights.js","../node_modules/three/src/renderers/webgl/WebGLRenderStates.js","../node_modules/three/src/materials/MeshDepthMaterial.js","../node_modules/three/src/materials/MeshDistanceMaterial.js","../node_modules/three/src/renderers/webgl/WebGLShadowMap.js","../node_modules/three/src/renderers/shaders/ShaderLib/vsm_vert.glsl.js","../node_modules/three/src/renderers/shaders/ShaderLib/vsm_frag.glsl.js","../node_modules/three/src/renderers/webgl/WebGLState.js","../node_modules/three/src/renderers/webgl/WebGLTextures.js","../node_modules/three/src/renderers/webgl/WebGLUtils.js","../node_modules/three/src/cameras/ArrayCamera.js","../node_modules/three/src/objects/Group.js","../node_modules/three/src/renderers/webxr/WebXRController.js","../node_modules/three/src/renderers/webxr/WebXRManager.js","../node_modules/three/src/renderers/webgl/WebGLMaterials.js","../node_modules/three/src/renderers/WebGLRenderer.js","../node_modules/three/src/scenes/Scene.js","../node_modules/three/src/core/InterleavedBuffer.js","../node_modules/three/src/core/InterleavedBufferAttribute.js","../node_modules/three/src/objects/SkinnedMesh.js","../node_modules/three/src/objects/Bone.js","../node_modules/three/src/textures/DataTexture.js","../node_modules/three/src/objects/Skeleton.js","../node_modules/three/src/objects/InstancedMesh.js","../node_modules/three/src/materials/LineBasicMaterial.js","../node_modules/three/src/objects/Line.js","../node_modules/three/src/objects/LineSegments.js","../node_modules/three/src/objects/LineLoop.js","../node_modules/three/src/materials/PointsMaterial.js","../node_modules/three/src/objects/Points.js","../node_modules/three/src/textures/CanvasTexture.js","../node_modules/three/src/geometries/SphereGeometry.js","../node_modules/three/src/materials/MeshStandardMaterial.js","../node_modules/three/src/materials/MeshPhysicalMaterial.js","../node_modules/three/src/materials/MeshLambertMaterial.js","../node_modules/three/src/animation/AnimationUtils.js","../node_modules/three/src/math/Interpolant.js","../node_modules/three/src/math/interpolants/CubicInterpolant.js","../node_modules/three/src/math/interpolants/LinearInterpolant.js","../node_modules/three/src/math/interpolants/DiscreteInterpolant.js","../node_modules/three/src/animation/KeyframeTrack.js","../node_modules/three/src/animation/tracks/BooleanKeyframeTrack.js","../node_modules/three/src/animation/tracks/ColorKeyframeTrack.js","../node_modules/three/src/animation/tracks/NumberKeyframeTrack.js","../node_modules/three/src/math/interpolants/QuaternionLinearInterpolant.js","../node_modules/three/src/animation/tracks/QuaternionKeyframeTrack.js","../node_modules/three/src/animation/tracks/StringKeyframeTrack.js","../node_modules/three/src/animation/tracks/VectorKeyframeTrack.js","../node_modules/three/src/animation/AnimationClip.js","../node_modules/three/src/loaders/Cache.js","../node_modules/three/src/loaders/LoadingManager.js","../node_modules/three/src/loaders/Loader.js","../node_modules/three/src/loaders/FileLoader.js","../node_modules/three/src/loaders/ImageLoader.js","../node_modules/three/src/loaders/TextureLoader.js","../node_modules/three/src/lights/Light.js","../node_modules/three/src/lights/LightShadow.js","../node_modules/three/src/lights/SpotLightShadow.js","../node_modules/three/src/lights/SpotLight.js","../node_modules/three/src/lights/PointLightShadow.js","../node_modules/three/src/lights/PointLight.js","../node_modules/three/src/cameras/OrthographicCamera.js","../node_modules/three/src/lights/DirectionalLightShadow.js","../node_modules/three/src/lights/DirectionalLight.js","../node_modules/three/src/lights/AmbientLight.js","../node_modules/three/src/loaders/LoaderUtils.js","../node_modules/three/src/loaders/ImageBitmapLoader.js","../node_modules/three/src/animation/PropertyBinding.js","../node_modules/three/src/math/Spherical.js"],"sourcesContent":["export const REVISION = '129';\nexport const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nexport const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nexport const CullFaceNone = 0;\nexport const CullFaceBack = 1;\nexport const CullFaceFront = 2;\nexport const CullFaceFrontBack = 3;\nexport const BasicShadowMap = 0;\nexport const PCFShadowMap = 1;\nexport const PCFSoftShadowMap = 2;\nexport const VSMShadowMap = 3;\nexport const FrontSide = 0;\nexport const BackSide = 1;\nexport const DoubleSide = 2;\nexport const FlatShading = 1;\nexport const SmoothShading = 2;\nexport const NoBlending = 0;\nexport const NormalBlending = 1;\nexport const AdditiveBlending = 2;\nexport const SubtractiveBlending = 3;\nexport const MultiplyBlending = 4;\nexport const CustomBlending = 5;\nexport const AddEquation = 100;\nexport const SubtractEquation = 101;\nexport const ReverseSubtractEquation = 102;\nexport const MinEquation = 103;\nexport const MaxEquation = 104;\nexport const ZeroFactor = 200;\nexport const OneFactor = 201;\nexport const SrcColorFactor = 202;\nexport const OneMinusSrcColorFactor = 203;\nexport const SrcAlphaFactor = 204;\nexport const OneMinusSrcAlphaFactor = 205;\nexport const DstAlphaFactor = 206;\nexport const OneMinusDstAlphaFactor = 207;\nexport const DstColorFactor = 208;\nexport const OneMinusDstColorFactor = 209;\nexport const SrcAlphaSaturateFactor = 210;\nexport const NeverDepth = 0;\nexport const AlwaysDepth = 1;\nexport const LessDepth = 2;\nexport const LessEqualDepth = 3;\nexport const EqualDepth = 4;\nexport const GreaterEqualDepth = 5;\nexport const GreaterDepth = 6;\nexport const NotEqualDepth = 7;\nexport const MultiplyOperation = 0;\nexport const MixOperation = 1;\nexport const AddOperation = 2;\nexport const NoToneMapping = 0;\nexport const LinearToneMapping = 1;\nexport const ReinhardToneMapping = 2;\nexport const CineonToneMapping = 3;\nexport const ACESFilmicToneMapping = 4;\nexport const CustomToneMapping = 5;\n\nexport const UVMapping = 300;\nexport const CubeReflectionMapping = 301;\nexport const CubeRefractionMapping = 302;\nexport const EquirectangularReflectionMapping = 303;\nexport const EquirectangularRefractionMapping = 304;\nexport const CubeUVReflectionMapping = 306;\nexport const CubeUVRefractionMapping = 307;\nexport const RepeatWrapping = 1000;\nexport const ClampToEdgeWrapping = 1001;\nexport const MirroredRepeatWrapping = 1002;\nexport const NearestFilter = 1003;\nexport const NearestMipmapNearestFilter = 1004;\nexport const NearestMipMapNearestFilter = 1004;\nexport const NearestMipmapLinearFilter = 1005;\nexport const NearestMipMapLinearFilter = 1005;\nexport const LinearFilter = 1006;\nexport const LinearMipmapNearestFilter = 1007;\nexport const LinearMipMapNearestFilter = 1007;\nexport const LinearMipmapLinearFilter = 1008;\nexport const LinearMipMapLinearFilter = 1008;\nexport const UnsignedByteType = 1009;\nexport const ByteType = 1010;\nexport const ShortType = 1011;\nexport const UnsignedShortType = 1012;\nexport const IntType = 1013;\nexport const UnsignedIntType = 1014;\nexport const FloatType = 1015;\nexport const HalfFloatType = 1016;\nexport const UnsignedShort4444Type = 1017;\nexport const UnsignedShort5551Type = 1018;\nexport const UnsignedShort565Type = 1019;\nexport const UnsignedInt248Type = 1020;\nexport const AlphaFormat = 1021;\nexport const RGBFormat = 1022;\nexport const RGBAFormat = 1023;\nexport const LuminanceFormat = 1024;\nexport const LuminanceAlphaFormat = 1025;\nexport const RGBEFormat = RGBAFormat;\nexport const DepthFormat = 1026;\nexport const DepthStencilFormat = 1027;\nexport const RedFormat = 1028;\nexport const RedIntegerFormat = 1029;\nexport const RGFormat = 1030;\nexport const RGIntegerFormat = 1031;\nexport const RGBIntegerFormat = 1032;\nexport const RGBAIntegerFormat = 1033;\n\nexport const RGB_S3TC_DXT1_Format = 33776;\nexport const RGBA_S3TC_DXT1_Format = 33777;\nexport const RGBA_S3TC_DXT3_Format = 33778;\nexport const RGBA_S3TC_DXT5_Format = 33779;\nexport const RGB_PVRTC_4BPPV1_Format = 35840;\nexport const RGB_PVRTC_2BPPV1_Format = 35841;\nexport const RGBA_PVRTC_4BPPV1_Format = 35842;\nexport const RGBA_PVRTC_2BPPV1_Format = 35843;\nexport const RGB_ETC1_Format = 36196;\nexport const RGB_ETC2_Format = 37492;\nexport const RGBA_ETC2_EAC_Format = 37496;\nexport const RGBA_ASTC_4x4_Format = 37808;\nexport const RGBA_ASTC_5x4_Format = 37809;\nexport const RGBA_ASTC_5x5_Format = 37810;\nexport const RGBA_ASTC_6x5_Format = 37811;\nexport const RGBA_ASTC_6x6_Format = 37812;\nexport const RGBA_ASTC_8x5_Format = 37813;\nexport const RGBA_ASTC_8x6_Format = 37814;\nexport const RGBA_ASTC_8x8_Format = 37815;\nexport const RGBA_ASTC_10x5_Format = 37816;\nexport const RGBA_ASTC_10x6_Format = 37817;\nexport const RGBA_ASTC_10x8_Format = 37818;\nexport const RGBA_ASTC_10x10_Format = 37819;\nexport const RGBA_ASTC_12x10_Format = 37820;\nexport const RGBA_ASTC_12x12_Format = 37821;\nexport const RGBA_BPTC_Format = 36492;\nexport const SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\nexport const SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\nexport const SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\nexport const SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\nexport const SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\nexport const SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\nexport const SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\nexport const SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\nexport const SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\nexport const SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\nexport const SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\nexport const SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\nexport const SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\nexport const SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\nexport const LoopOnce = 2200;\nexport const LoopRepeat = 2201;\nexport const LoopPingPong = 2202;\nexport const InterpolateDiscrete = 2300;\nexport const InterpolateLinear = 2301;\nexport const InterpolateSmooth = 2302;\nexport const ZeroCurvatureEnding = 2400;\nexport const ZeroSlopeEnding = 2401;\nexport const WrapAroundEnding = 2402;\nexport const NormalAnimationBlendMode = 2500;\nexport const AdditiveAnimationBlendMode = 2501;\nexport const TrianglesDrawMode = 0;\nexport const TriangleStripDrawMode = 1;\nexport const TriangleFanDrawMode = 2;\nexport const LinearEncoding = 3000;\nexport const sRGBEncoding = 3001;\nexport const GammaEncoding = 3007;\nexport const RGBEEncoding = 3002;\nexport const LogLuvEncoding = 3003;\nexport const RGBM7Encoding = 3004;\nexport const RGBM16Encoding = 3005;\nexport const RGBDEncoding = 3006;\nexport const BasicDepthPacking = 3200;\nexport const RGBADepthPacking = 3201;\nexport const TangentSpaceNormalMap = 0;\nexport const ObjectSpaceNormalMap = 1;\n\nexport const ZeroStencilOp = 0;\nexport const KeepStencilOp = 7680;\nexport const ReplaceStencilOp = 7681;\nexport const IncrementStencilOp = 7682;\nexport const DecrementStencilOp = 7683;\nexport const IncrementWrapStencilOp = 34055;\nexport const DecrementWrapStencilOp = 34056;\nexport const InvertStencilOp = 5386;\n\nexport const NeverStencilFunc = 512;\nexport const LessStencilFunc = 513;\nexport const EqualStencilFunc = 514;\nexport const LessEqualStencilFunc = 515;\nexport const GreaterStencilFunc = 516;\nexport const NotEqualStencilFunc = 517;\nexport const GreaterEqualStencilFunc = 518;\nexport const AlwaysStencilFunc = 519;\n\nexport const StaticDrawUsage = 35044;\nexport const DynamicDrawUsage = 35048;\nexport const StreamDrawUsage = 35040;\nexport const StaticReadUsage = 35045;\nexport const DynamicReadUsage = 35049;\nexport const StreamReadUsage = 35041;\nexport const StaticCopyUsage = 35046;\nexport const DynamicCopyUsage = 35050;\nexport const StreamCopyUsage = 35042;\n\nexport const GLSL1 = '100';\nexport const GLSL3 = '300 es';\n","/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { EventDispatcher };\n","const _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toUpperCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t\t } else {\n\n\t\treturn 0;\n\n\t\t }\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s % 2147483647;\n\n\t// Park-Miller algorithm\n\n\t_seed = _seed * 16807 % 2147483647;\n\n\treturn ( _seed - 1 ) / 2147483646;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\n\n\n\nexport {\n\tDEG2RAD,\n\tRAD2DEG,\n\tgenerateUUID,\n\tclamp,\n\teuclideanModulo,\n\tmapLinear,\n\tinverseLerp,\n\tlerp,\n\tdamp,\n\tpingpong,\n\tsmoothstep,\n\tsmootherstep,\n\trandInt,\n\trandFloat,\n\trandFloatSpread,\n\tseededRandom,\n\tdegToRad,\n\tradToDeg,\n\tisPowerOfTwo,\n\tceilPowerOfTwo,\n\tfloorPowerOfTwo,\n\tsetQuaternionFromProperEuler,\n};\n","class Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector2.prototype.isVector2 = true;\n\nexport { Vector2 };\n","class Matrix3 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nMatrix3.prototype.isMatrix3 = true;\n\nexport { Matrix3 };\n","let _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n}\n\nexport { ImageUtils };\n","import { EventDispatcher } from '../core/EventDispatcher.js';\nimport {\n\tMirroredRepeatWrapping,\n\tClampToEdgeWrapping,\n\tRepeatWrapping,\n\tLinearEncoding,\n\tUnsignedByteType,\n\tRGBAFormat,\n\tLinearMipmapLinearFilter,\n\tLinearFilter,\n\tUVMapping\n} from '../constants.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { ImageUtils } from '../extras/ImageUtils.js';\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tconst image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = MathUtils.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tlet url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( let i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t// check cube texture with data textures\n\n\t\t\t\t\t\tif ( image[ i ].isDataTexture ) {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ].image ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = serializeImage( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nexport { Texture };\n","class Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector4.prototype.isVector4 = true;\n\nexport { Vector4 };\n","import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { Texture } from '../textures/Texture.js';\nimport { LinearFilter } from '../constants.js';\nimport { Vector4 } from '../math/Vector4.js';\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options ) {\n\n\t\tsuper();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.image = {};\n\t\tthis.texture.image.width = width;\n\t\tthis.texture.image.height = height;\n\t\tthis.texture.image.depth = 1;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tsetTexture( texture ) {\n\n\t\ttexture.image = {\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t\tdepth: this.depth\n\t\t};\n\n\t\tthis.texture = texture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.image = { ...this.texture.image }; // See #20328.\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\nexport { WebGLRenderTarget };\n","import * as MathUtils from './MathUtils.js';\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\treturn qm.slerpQuaternions( qa, qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\tthis.copy( qa ).slerp( qb, t );\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nQuaternion.prototype.isQuaternion = true;\n\nexport { Quaternion };\n","import * as MathUtils from './MathUtils.js';\nimport { Quaternion } from './Quaternion.js';\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nexport { Vector3 };\n","import { Vector3 } from './Vector3.js';\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box );\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0.subVectors( triangle.a, _center );\n\t\t_v1.subVectors( triangle.b, _center );\n\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1, _v0 );\n\t\t_f1.subVectors( _v2, _v1 );\n\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0, _v1, _v2, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox3.prototype.isBox3 = true;\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector = /*@__PURE__*/ new Vector3();\n\nconst _box = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nexport { Box3 };\n","import { Box3 } from './Box3.js';\nimport { Vector3 } from './Vector3.js';\n\nconst _box = /*@__PURE__*/ new Box3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\tthis.expandByPoint( _v1.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nexport { Sphere };\n","import { Vector3 } from './Vector3.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector.dot( this.direction );\n\t\tconst d2 = _vector.dot( _vector ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nexport { Ray };\n","import { Vector3 } from './Vector3.js';\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1.elements[ 0 ] *= invSX;\n\t\t_m1.elements[ 1 ] *= invSX;\n\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t_m1.elements[ 4 ] *= invSY;\n\t\t_m1.elements[ 5 ] *= invSY;\n\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nexport { Matrix4 };\n","import { Quaternion } from './Quaternion.js';\nimport { Vector3 } from './Vector3.js';\nimport { Matrix4 } from './Matrix4.js';\nimport { clamp } from './MathUtils.js';\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order, update ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\ttoVector3( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nEuler.prototype.isEuler = true;\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nexport { Euler };\n","class Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n}\n\n\nexport { Layers };\n","import { Quaternion } from '../math/Quaternion.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { Euler } from '../math/Euler.js';\nimport { Layers } from './Layers.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nlet _object3DId = 0;\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender() {}\n\tonAfterRender() {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1.lookAt( _position, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1.lookAt( _target, _position, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast() {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype.isObject3D = true;\n\nexport { Object3D };\n","import { Matrix3 } from './Matrix3.js';\nimport { Vector3 } from './Vector3.js';\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nPlane.prototype.isPlane = true;\n\nexport { Plane };\n","import { Vector3 } from './Vector3.js';\nimport { Plane } from './Plane.js';\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0.subVectors( a, b );\n\t\ttarget.cross( _v0 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0.subVectors( c, a );\n\t\t_v1.subVectors( b, a );\n\t\t_v2.subVectors( point, a );\n\n\t\tconst dot00 = _v0.dot( _v0 );\n\t\tconst dot01 = _v0.dot( _v1 );\n\t\tconst dot02 = _v0.dot( _v2 );\n\t\tconst dot11 = _v1.dot( _v1 );\n\t\tconst dot12 = _v1.dot( _v2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3 );\n\n\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0.subVectors( c, b );\n\t\t_v1.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0.cross( _v1 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0.subVectors( this.c, this.b );\n\t\t_v1.subVectors( this.a, this.b );\n\n\t\treturn _v0.cross( _v1 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Plane();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nexport { Triangle };\n","import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { FrontSide, FlatShading, NormalBlending, LessEqualDepth, AddEquation, OneMinusSrcAlphaFactor, SrcAlphaFactor, AlwaysStencilFunc, KeepStencilOp } from '../constants.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen && this.sheen.isColor ) data.sheen = this.sheen.getHex();\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.morphNormals === true ) data.morphNormals = true;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nMaterial.prototype.isMaterial = true;\n\nexport { Material };\n","import * as MathUtils from './MathUtils.js';\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = MathUtils.euclideanModulo( h, 1 );\n\t\ts = MathUtils.clamp( s, 0, 1 );\n\t\tl = MathUtils.clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopyGammaToLinear( color, gammaFactor = 2.0 ) {\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToGamma( color, gammaFactor = 2.0 ) {\n\n\t\tconst safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t}\n\n\tconvertGammaToLinear( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToGamma( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex() {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t}\n\n\tgetHexString() {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle() {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\nexport { Color };\n","import { Material } from './Material.js';\nimport { MultiplyOperation } from '../constants.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>\n * }\n */\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nexport { MeshBasicMaterial };\n","import { Vector4 } from '../math/Vector4.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Color } from '../math/Color.js';\nimport { StaticDrawUsage } from '../constants.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tcopyColorsArray( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector2sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector3sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector4sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2.fromBufferAttribute( this, i );\n\t\t\t\t_vector2.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2.x, _vector2.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( this, i );\n\t\t\t\t_vector.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\nBufferAttribute.prototype.isBufferAttribute = true;\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\n//\n\nexport {\n\tFloat64BufferAttribute,\n\tFloat32BufferAttribute,\n\tFloat16BufferAttribute,\n\tUint32BufferAttribute,\n\tInt32BufferAttribute,\n\tUint16BufferAttribute,\n\tInt16BufferAttribute,\n\tUint8ClampedBufferAttribute,\n\tUint8BufferAttribute,\n\tInt8BufferAttribute,\n\tBufferAttribute\n};\n","function arrayMin( array ) {\n\n\tif ( array.length === 0 ) return Infinity;\n\n\tlet min = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] < min ) min = array[ i ];\n\n\t}\n\n\treturn min;\n\n}\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tlet max = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nexport { arrayMin, arrayMax, getTypedArray };\n","import { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Box3 } from '../math/Box3.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { BufferAttribute, Float32BufferAttribute, Uint16BufferAttribute, Uint32BufferAttribute } from './BufferAttribute.js';\nimport { Sphere } from '../math/Sphere.js';\nimport { Object3D } from './Object3D.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { arrayMax } from '../utils.js';\n\nlet _id = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector.addVectors( this.boundingBox.min, _box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector );\n\n\t\t\t\t\t\t_vector.addVectors( this.boundingBox.max, _box.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector.addVectors( _box.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box.expandByPoint( _vector );\n\n\t\t\t\t\t\t_vector.addVectors( _box.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box.expandByPoint( _vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeFaceNormals() {\n\n\t\t// backwards compatibility\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( attributes.tangent === undefined ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = attributes.tangent.array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tmerge( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( normals, i );\n\n\t\t\t_vector.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t const parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t const values = [];\n\n\t\t for ( const key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nBufferGeometry.prototype.isBufferGeometry = true;\n\nexport { BufferGeometry };\n","import { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Sphere } from '../math/Sphere.js';\nimport { Ray } from '../math/Ray.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Triangle } from '../math/Triangle.js';\nimport { DoubleSide, BackSide } from '../constants.js';\nimport { MeshBasicMaterial } from '../materials/MeshBasicMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\tconst uv = geometry.attributes.uv;\n\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\tconst groups = geometry.groups;\n\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n}\n\nMesh.prototype.isMesh = true;\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA.fromBufferAttribute( position, a );\n\t_vB.fromBufferAttribute( position, b );\n\t_vC.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA.add( _morphA );\n\t\t_vB.add( _morphB );\n\t\t_vC.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA );\n\t\tobject.boneTransform( b, _vB );\n\t\tobject.boneTransform( c, _vC );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv2, a );\n\t\t\t_uvB.fromBufferAttribute( uv2, b );\n\t\t\t_uvC.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nexport { Mesh };\n","import { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { Vector3 } from '../math/Vector3.js';\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n}\n\nexport { BoxGeometry, BoxGeometry as BoxBufferGeometry };\n","/**\n * Uniform Utilities\n */\n\nexport function cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nexport function mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nexport { UniformsUtils };\n","import { Material } from './Material.js';\nimport { cloneUniforms } from '../renderers/shaders/UniformsUtils.js';\n\nimport default_vertex from '../renderers/shaders/ShaderChunk/default_vertex.glsl.js';\nimport default_fragment from '../renderers/shaders/ShaderChunk/default_fragment.glsl.js';\n\n/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nexport { ShaderMaterial };\n","export default /* glsl */`\nvoid main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n`;\n","export default /* glsl */`\nvoid main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n`;\n","import { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nCamera.prototype.isCamera = true;\n\nexport { Camera };\n","import { Camera } from './Camera.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = MathUtils.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn MathUtils.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\nexport { PerspectiveCamera };\n","import { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t}\n\n}\n\nexport { CubeCamera };\n","import { Texture } from './Texture.js';\nimport { CubeReflectionMapping, RGBFormat } from '../constants.js';\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\tformat = format !== undefined ? format : RGBFormat;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\t// Why CubeTexture._needsFlipEnvMap is necessary:\n\t\t//\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n\t\t// when using WebGLCubeRenderTarget.texture as a cube texture.\n\n\t\tthis._needsFlipEnvMap = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nCubeTexture.prototype.isCubeTexture = true;\n\nexport { CubeTexture };\n","import { BackSide, LinearFilter, LinearMipmapLinearFilter, NoBlending, RGBAFormat } from '../constants.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { BoxGeometry } from '../geometries/BoxGeometry.js';\nimport { ShaderMaterial } from '../materials/ShaderMaterial.js';\nimport { cloneUniforms } from './shaders/UniformsUtils.js';\nimport { WebGLRenderTarget } from './WebGLRenderTarget.js';\nimport { CubeCamera } from '../cameras/CubeCamera.js';\nimport { CubeTexture } from '../textures/CubeTexture.js';\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options, dummy ) {\n\n\t\tif ( Number.isInteger( options ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n\n\t\t\toptions = dummy;\n\n\t\t}\n\n\t\tsuper( size, size, options );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new CubeTexture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.texture._needsFlipEnvMap = false;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.format = RGBAFormat; // see #18859\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nexport { WebGLCubeRenderTarget };\n","import { Vector3 } from './Vector3.js';\nimport { Sphere } from './Sphere.js';\nimport { Plane } from './Plane.js';\n\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _vector = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n\nexport { Frustum };\n","function WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nexport { WebGLAnimation };\n","function WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLAttributes };\n","import { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nexport { PlaneGeometry, PlaneGeometry as PlaneBufferGeometry };\n","import alphamap_fragment from './ShaderChunk/alphamap_fragment.glsl.js';\nimport alphamap_pars_fragment from './ShaderChunk/alphamap_pars_fragment.glsl.js';\nimport alphatest_fragment from './ShaderChunk/alphatest_fragment.glsl.js';\nimport aomap_fragment from './ShaderChunk/aomap_fragment.glsl.js';\nimport aomap_pars_fragment from './ShaderChunk/aomap_pars_fragment.glsl.js';\nimport begin_vertex from './ShaderChunk/begin_vertex.glsl.js';\nimport beginnormal_vertex from './ShaderChunk/beginnormal_vertex.glsl.js';\nimport bsdfs from './ShaderChunk/bsdfs.glsl.js';\nimport bumpmap_pars_fragment from './ShaderChunk/bumpmap_pars_fragment.glsl.js';\nimport clipping_planes_fragment from './ShaderChunk/clipping_planes_fragment.glsl.js';\nimport clipping_planes_pars_fragment from './ShaderChunk/clipping_planes_pars_fragment.glsl.js';\nimport clipping_planes_pars_vertex from './ShaderChunk/clipping_planes_pars_vertex.glsl.js';\nimport clipping_planes_vertex from './ShaderChunk/clipping_planes_vertex.glsl.js';\nimport color_fragment from './ShaderChunk/color_fragment.glsl.js';\nimport color_pars_fragment from './ShaderChunk/color_pars_fragment.glsl.js';\nimport color_pars_vertex from './ShaderChunk/color_pars_vertex.glsl.js';\nimport color_vertex from './ShaderChunk/color_vertex.glsl.js';\nimport common from './ShaderChunk/common.glsl.js';\nimport cube_uv_reflection_fragment from './ShaderChunk/cube_uv_reflection_fragment.glsl.js';\nimport defaultnormal_vertex from './ShaderChunk/defaultnormal_vertex.glsl.js';\nimport displacementmap_pars_vertex from './ShaderChunk/displacementmap_pars_vertex.glsl.js';\nimport displacementmap_vertex from './ShaderChunk/displacementmap_vertex.glsl.js';\nimport emissivemap_fragment from './ShaderChunk/emissivemap_fragment.glsl.js';\nimport emissivemap_pars_fragment from './ShaderChunk/emissivemap_pars_fragment.glsl.js';\nimport encodings_fragment from './ShaderChunk/encodings_fragment.glsl.js';\nimport encodings_pars_fragment from './ShaderChunk/encodings_pars_fragment.glsl.js';\nimport envmap_fragment from './ShaderChunk/envmap_fragment.glsl.js';\nimport envmap_common_pars_fragment from './ShaderChunk/envmap_common_pars_fragment.glsl.js';\nimport envmap_pars_fragment from './ShaderChunk/envmap_pars_fragment.glsl.js';\nimport envmap_pars_vertex from './ShaderChunk/envmap_pars_vertex.glsl.js';\nimport envmap_vertex from './ShaderChunk/envmap_vertex.glsl.js';\nimport fog_vertex from './ShaderChunk/fog_vertex.glsl.js';\nimport fog_pars_vertex from './ShaderChunk/fog_pars_vertex.glsl.js';\nimport fog_fragment from './ShaderChunk/fog_fragment.glsl.js';\nimport fog_pars_fragment from './ShaderChunk/fog_pars_fragment.glsl.js';\nimport gradientmap_pars_fragment from './ShaderChunk/gradientmap_pars_fragment.glsl.js';\nimport lightmap_fragment from './ShaderChunk/lightmap_fragment.glsl.js';\nimport lightmap_pars_fragment from './ShaderChunk/lightmap_pars_fragment.glsl.js';\nimport lights_lambert_vertex from './ShaderChunk/lights_lambert_vertex.glsl.js';\nimport lights_pars_begin from './ShaderChunk/lights_pars_begin.glsl.js';\nimport envmap_physical_pars_fragment from './ShaderChunk/envmap_physical_pars_fragment.glsl.js';\nimport lights_toon_fragment from './ShaderChunk/lights_toon_fragment.glsl.js';\nimport lights_toon_pars_fragment from './ShaderChunk/lights_toon_pars_fragment.glsl.js';\nimport lights_phong_fragment from './ShaderChunk/lights_phong_fragment.glsl.js';\nimport lights_phong_pars_fragment from './ShaderChunk/lights_phong_pars_fragment.glsl.js';\nimport lights_physical_fragment from './ShaderChunk/lights_physical_fragment.glsl.js';\nimport lights_physical_pars_fragment from './ShaderChunk/lights_physical_pars_fragment.glsl.js';\nimport lights_fragment_begin from './ShaderChunk/lights_fragment_begin.glsl.js';\nimport lights_fragment_maps from './ShaderChunk/lights_fragment_maps.glsl.js';\nimport lights_fragment_end from './ShaderChunk/lights_fragment_end.glsl.js';\nimport logdepthbuf_fragment from './ShaderChunk/logdepthbuf_fragment.glsl.js';\nimport logdepthbuf_pars_fragment from './ShaderChunk/logdepthbuf_pars_fragment.glsl.js';\nimport logdepthbuf_pars_vertex from './ShaderChunk/logdepthbuf_pars_vertex.glsl.js';\nimport logdepthbuf_vertex from './ShaderChunk/logdepthbuf_vertex.glsl.js';\nimport map_fragment from './ShaderChunk/map_fragment.glsl.js';\nimport map_pars_fragment from './ShaderChunk/map_pars_fragment.glsl.js';\nimport map_particle_fragment from './ShaderChunk/map_particle_fragment.glsl.js';\nimport map_particle_pars_fragment from './ShaderChunk/map_particle_pars_fragment.glsl.js';\nimport metalnessmap_fragment from './ShaderChunk/metalnessmap_fragment.glsl.js';\nimport metalnessmap_pars_fragment from './ShaderChunk/metalnessmap_pars_fragment.glsl.js';\nimport morphnormal_vertex from './ShaderChunk/morphnormal_vertex.glsl.js';\nimport morphtarget_pars_vertex from './ShaderChunk/morphtarget_pars_vertex.glsl.js';\nimport morphtarget_vertex from './ShaderChunk/morphtarget_vertex.glsl.js';\nimport normal_fragment_begin from './ShaderChunk/normal_fragment_begin.glsl.js';\nimport normal_fragment_maps from './ShaderChunk/normal_fragment_maps.glsl.js';\nimport normalmap_pars_fragment from './ShaderChunk/normalmap_pars_fragment.glsl.js';\nimport clearcoat_normal_fragment_begin from './ShaderChunk/clearcoat_normal_fragment_begin.glsl.js';\nimport clearcoat_normal_fragment_maps from './ShaderChunk/clearcoat_normal_fragment_maps.glsl.js';\nimport clearcoat_pars_fragment from './ShaderChunk/clearcoat_pars_fragment.glsl.js';\nimport packing from './ShaderChunk/packing.glsl.js';\nimport premultiplied_alpha_fragment from './ShaderChunk/premultiplied_alpha_fragment.glsl.js';\nimport project_vertex from './ShaderChunk/project_vertex.glsl.js';\nimport dithering_fragment from './ShaderChunk/dithering_fragment.glsl.js';\nimport dithering_pars_fragment from './ShaderChunk/dithering_pars_fragment.glsl.js';\nimport roughnessmap_fragment from './ShaderChunk/roughnessmap_fragment.glsl.js';\nimport roughnessmap_pars_fragment from './ShaderChunk/roughnessmap_pars_fragment.glsl.js';\nimport shadowmap_pars_fragment from './ShaderChunk/shadowmap_pars_fragment.glsl.js';\nimport shadowmap_pars_vertex from './ShaderChunk/shadowmap_pars_vertex.glsl.js';\nimport shadowmap_vertex from './ShaderChunk/shadowmap_vertex.glsl.js';\nimport shadowmask_pars_fragment from './ShaderChunk/shadowmask_pars_fragment.glsl.js';\nimport skinbase_vertex from './ShaderChunk/skinbase_vertex.glsl.js';\nimport skinning_pars_vertex from './ShaderChunk/skinning_pars_vertex.glsl.js';\nimport skinning_vertex from './ShaderChunk/skinning_vertex.glsl.js';\nimport skinnormal_vertex from './ShaderChunk/skinnormal_vertex.glsl.js';\nimport specularmap_fragment from './ShaderChunk/specularmap_fragment.glsl.js';\nimport specularmap_pars_fragment from './ShaderChunk/specularmap_pars_fragment.glsl.js';\nimport tonemapping_fragment from './ShaderChunk/tonemapping_fragment.glsl.js';\nimport tonemapping_pars_fragment from './ShaderChunk/tonemapping_pars_fragment.glsl.js';\nimport transmission_fragment from './ShaderChunk/transmission_fragment.glsl.js';\nimport transmission_pars_fragment from './ShaderChunk/transmission_pars_fragment.glsl.js';\nimport uv_pars_fragment from './ShaderChunk/uv_pars_fragment.glsl.js';\nimport uv_pars_vertex from './ShaderChunk/uv_pars_vertex.glsl.js';\nimport uv_vertex from './ShaderChunk/uv_vertex.glsl.js';\nimport uv2_pars_fragment from './ShaderChunk/uv2_pars_fragment.glsl.js';\nimport uv2_pars_vertex from './ShaderChunk/uv2_pars_vertex.glsl.js';\nimport uv2_vertex from './ShaderChunk/uv2_vertex.glsl.js';\nimport worldpos_vertex from './ShaderChunk/worldpos_vertex.glsl.js';\n\nimport background_frag from './ShaderLib/background_frag.glsl.js';\nimport background_vert from './ShaderLib/background_vert.glsl.js';\nimport cube_frag from './ShaderLib/cube_frag.glsl.js';\nimport cube_vert from './ShaderLib/cube_vert.glsl.js';\nimport depth_frag from './ShaderLib/depth_frag.glsl.js';\nimport depth_vert from './ShaderLib/depth_vert.glsl.js';\nimport distanceRGBA_frag from './ShaderLib/distanceRGBA_frag.glsl.js';\nimport distanceRGBA_vert from './ShaderLib/distanceRGBA_vert.glsl.js';\nimport equirect_frag from './ShaderLib/equirect_frag.glsl.js';\nimport equirect_vert from './ShaderLib/equirect_vert.glsl.js';\nimport linedashed_frag from './ShaderLib/linedashed_frag.glsl.js';\nimport linedashed_vert from './ShaderLib/linedashed_vert.glsl.js';\nimport meshbasic_frag from './ShaderLib/meshbasic_frag.glsl.js';\nimport meshbasic_vert from './ShaderLib/meshbasic_vert.glsl.js';\nimport meshlambert_frag from './ShaderLib/meshlambert_frag.glsl.js';\nimport meshlambert_vert from './ShaderLib/meshlambert_vert.glsl.js';\nimport meshmatcap_frag from './ShaderLib/meshmatcap_frag.glsl.js';\nimport meshmatcap_vert from './ShaderLib/meshmatcap_vert.glsl.js';\nimport meshtoon_frag from './ShaderLib/meshtoon_frag.glsl.js';\nimport meshtoon_vert from './ShaderLib/meshtoon_vert.glsl.js';\nimport meshphong_frag from './ShaderLib/meshphong_frag.glsl.js';\nimport meshphong_vert from './ShaderLib/meshphong_vert.glsl.js';\nimport meshphysical_frag from './ShaderLib/meshphysical_frag.glsl.js';\nimport meshphysical_vert from './ShaderLib/meshphysical_vert.glsl.js';\nimport normal_frag from './ShaderLib/normal_frag.glsl.js';\nimport normal_vert from './ShaderLib/normal_vert.glsl.js';\nimport points_frag from './ShaderLib/points_frag.glsl.js';\nimport points_vert from './ShaderLib/points_vert.glsl.js';\nimport shadow_frag from './ShaderLib/shadow_frag.glsl.js';\nimport shadow_vert from './ShaderLib/shadow_vert.glsl.js';\nimport sprite_frag from './ShaderLib/sprite_frag.glsl.js';\nimport sprite_vert from './ShaderLib/sprite_vert.glsl.js';\n\nexport const ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshtoon_frag: meshtoon_frag,\n\tmeshtoon_vert: meshtoon_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n","export default /* glsl */`\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_AOMAP\n\n\t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 transformed = vec3( position );\n`;\n","export default /* glsl */`\nvec3 objectNormal = vec3( normal );\n\n#ifdef USE_TANGENT\n\n\tvec3 objectTangent = vec3( tangent.xyz );\n\n#endif\n`;\n","export default /* glsl */`\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n}\n\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t// page 32, equation 26: E[window1]\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t// this is intended to be used on spot and point lights who are represented as luminous intensity\n\t// but who must be converted to luminous irradiance for surface lighting calculation\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\n\tif( cutoffDistance > 0.0 ) {\n\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\n\t}\n\n\treturn distanceFalloff;\n\n#else\n\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n#endif\n\n}\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n\t// Original approximation by Christophe Schlick '94\n\t// float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\n\t// See F_Schlick\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\n\treturn Fr * fresnel + F0;\n\n}\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\t// geometry term (normalized) = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n\t// also see #12151\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\n\treturn 1.0 / ( gl * gv );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\tfloat a2 = pow2( alpha );\n\n\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n\treturn 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat alpha = pow2( roughness ); // UE4's roughness\n\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\n\tfloat dotNV = saturate( dot( N, V ) );\n\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\treturn uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\n\t// An approximation of the form factor of a horizon-clipped rectangle.\n\n\tfloat l = length( f );\n\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n\tfloat x = dot( v1, v2 );\n\n\tfloat y = abs( x );\n\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n\treturn cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n\t// bail if point is on back side of plane of light\n\t// assumes ccw winding order of light vertices\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n\t// construct orthonormal basis around N\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n\t// compute transform\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n\t// transform rect\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n\t// project rect onto sphere\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\n\t// calculate vector form factor\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n\t// adjust for horizon clipping\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n\t// alternate method of adjusting for horizon clipping (see referece)\n\t// refactoring required\n\tfloat len = length( vectorFormFactor );\n\tfloat z = vectorFormFactor.z / len;\n\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\n\t// tabulated horizon-clipped sphere, apparently...\n\tvec2 uv = vec2( z * 0.5 + 0.5, len );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\tfloat scale = texture2D( ltc_2, uv ).w;\n\n\tfloat result = len * scale;\n*/\n\n\treturn vec3( result );\n\n}\n\n// End Rect Area Light\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\n\treturn specularColor * brdf.x + brdf.y;\n\n} // validated\n\n// Fdez-Agüera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n// Approximates multiscattering in order to preserve energy.\n// http://www.jcgt.org/published/0008/01/03/\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619; // 1/21\n\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\n\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n\n#if defined( USE_SHEEN )\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L94\nfloat D_Charlie(float roughness, float NoH) {\n\t// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\"\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125); // 2^(-14/2), so sin2h^2 > 0 in fp16\n\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L136\nfloat V_Neubelt(float NoV, float NoL) {\n\t// Neubelt and Pettineo 2013, \"Crafting a Next-gen Material Pipeline for The Order: 1886\"\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\n\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n\n}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n\t// http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvec4 plane;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n\t\tbool clipped = true;\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t\tif ( clipped ) discard;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvClipPosition = - mvPosition.xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_COLOR_ALPHA )\n\n\tdiffuseColor *= vColor;\n\n#elif defined( USE_COLOR )\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_COLOR_ALPHA )\n\n\tvarying vec4 vColor;\n\n#elif defined( USE_COLOR )\n\n\tvarying vec3 vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_COLOR_ALPHA )\n\n\tvarying vec4 vColor;\n\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\n\tvarying vec3 vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_COLOR_ALPHA )\n\n\tvColor = vec4( 1.0 );\n\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\n\tvColor = vec3( 1.0 );\n\n#endif\n\n#ifdef USE_COLOR\n\n\tvColor *= color;\n\n#endif\n\n#ifdef USE_INSTANCING_COLOR\n\n\tvColor.xyz *= instanceColor.xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n\n#ifndef saturate\n// <tonemapping_pars_fragment> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t// dir can be either a direction vector or a normal vector\n\t// upper-left 3x3 of matrix is assumed to be orthogonal\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n\tmat3 tmp;\n\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n\treturn tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n\treturn dot( weights, color.rgb );\n\n}\n\nbool isPerspectiveMatrix( mat4 m ) {\n\n\treturn m[ 2 ][ 3 ] == - 1.0;\n\n}\n\nvec2 equirectUv( in vec3 dir ) {\n\n\t// dir is assumed to be unit length\n\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\treturn vec2( u, v );\n\n}\n`;\n","export default /* glsl */`\n#ifdef ENVMAP_TYPE_CUBE_UV\n\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\n\t// These shader functions convert between the UV coordinates of a single face of\n\t// a cubemap, the 0-5 integer index of a cube face, and the direction vector for\n\t// sampling a textureCube (not generally normalized ).\n\n\tfloat getFace( vec3 direction ) {\n\n\t\tvec3 absDirection = abs( direction );\n\n\t\tfloat face = - 1.0;\n\n\t\tif ( absDirection.x > absDirection.z ) {\n\n\t\t\tif ( absDirection.x > absDirection.y )\n\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\n\t\t\telse\n\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\n\t\t} else {\n\n\t\t\tif ( absDirection.z > absDirection.y )\n\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\n\t\t\telse\n\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\n\t\t}\n\n\t\treturn face;\n\n\t}\n\n\t// RH coordinate system; PMREM face-indexing convention\n\tvec2 getUV( vec3 direction, float face ) {\n\n\t\tvec2 uv;\n\n\t\tif ( face == 0.0 ) {\n\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x ); // pos x\n\n\t\t} else if ( face == 1.0 ) {\n\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y ); // pos y\n\n\t\t} else if ( face == 2.0 ) {\n\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z ); // pos z\n\n\t\t} else if ( face == 3.0 ) {\n\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x ); // neg x\n\n\t\t} else if ( face == 4.0 ) {\n\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y ); // neg y\n\n\t\t} else {\n\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z ); // neg z\n\n\t\t}\n\n\t\treturn 0.5 * ( uv + 1.0 );\n\n\t}\n\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\n\t\tfloat face = getFace( direction );\n\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\n\t\tfloat faceSize = exp2( mipInt );\n\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\n\t\tvec2 f = fract( uv );\n\n\t\tuv += 0.5 - f;\n\n\t\tif ( face > 2.0 ) {\n\n\t\t\tuv.y += faceSize;\n\n\t\t\tface -= 3.0;\n\n\t\t}\n\n\t\tuv.x += face * faceSize;\n\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\n\t\t}\n\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\n\t\tuv *= texelSize;\n\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.x += texelSize;\n\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.y += texelSize;\n\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.x -= texelSize;\n\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tvec3 tm = mix( tl, tr, f.x );\n\n\t\tvec3 bm = mix( bl, br, f.x );\n\n\t\treturn mix( tm, bm, f.y );\n\n\t}\n\n\t// These defines must match with PMREMGenerator\n\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\n\tfloat roughnessToMip( float roughness ) {\n\n\t\tfloat mip = 0.0;\n\n\t\tif ( roughness >= r1 ) {\n\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\n\t\t} else if ( roughness >= r4 ) {\n\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\n\t\t} else if ( roughness >= r5 ) {\n\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\n\t\t} else if ( roughness >= r6 ) {\n\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\n\t\t} else {\n\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness ); // 1.16 = 1.79^0.25\n\t\t}\n\n\t\treturn mip;\n\n\t}\n\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\n\t\tfloat mipF = fract( mip );\n\n\t\tfloat mipInt = floor( mip );\n\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\n\t\tif ( mipF == 0.0 ) {\n\n\t\t\treturn vec4( color0, 1.0 );\n\n\t\t} else {\n\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\n\t\t}\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nvec3 transformedNormal = objectNormal;\n\n#ifdef USE_INSTANCING\n\n\t// this is in lieu of a per-instance normal-matrix\n\t// shear transforms in the instance matrix are not supported\n\n\tmat3 m = mat3( instanceMatrix );\n\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\n\ttransformedNormal = m * transformedNormal;\n\n#endif\n\ntransformedNormal = normalMatrix * transformedNormal;\n\n#ifdef FLIP_SIDED\n\n\ttransformedNormal = - transformedNormal;\n\n#endif\n\n#ifdef USE_TANGENT\n\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#ifdef FLIP_SIDED\n\n\t\ttransformedTangent = - transformedTangent;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n`;\n","export default /* glsl */`\ngl_FragColor = linearToOutputTexel( gl_FragColor );\n`;\n","export default /* glsl */`\n// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\n\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\n\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\n\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\n\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\n\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\n\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\n\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n\t// return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\n\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\n\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\t// NOTE: The implementation with min causes the shader to not compile on\n\t// a common Alcatel A502DL in Chrome 78/Android 8.1. Some research suggests \n\t// that the chipset is Mediatek MT6739 w/ IMG PowerVR GE8100 GPU.\n\t// D = min( floor( D ) / 255.0, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\n\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\n\n// M matrix, for encoding\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\n\n// Inverse M matrix, for decoding\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvec3 cameraToFrag;\n\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\n\t\t}\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\n\t#else\n\n\t\tvec4 envColor = vec4( 0.0 );\n\n\t#endif\n\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\n\t\tenvColor = envMapTexelToLinear( envColor );\n\n\t#endif\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_ENVMAP )\n\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\n\tvec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#else\n\n\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\n\t\t#else\n\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\n\t\t#endif\n\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t}\n\n\t// Trowbridge-Reitz distribution to Mip level, following the logic of http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\n\t\t// clamp to allowable LOD ranges.\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n\t}\n\n\tvec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\n\t\t\t// Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\n\t\t#endif\n\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\n\t\t#endif\n\n\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvWorldPosition = worldPosition.xyz;\n\n\t#else\n\n\t\tvec3 cameraToVertex;\n\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t\t}\n\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tfogDepth = - mvPosition.z;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tvarying float fogDepth;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\n\t#endif\n\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n\n#ifdef USE_GRADIENTMAP\n\n\tuniform sampler2D gradientMap;\n\n#endif\n\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n\t// dotNL will be from -1.0 to 1.0\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n\t#ifdef USE_GRADIENTMAP\n\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\n\t#else\n\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n\t#endif\n\n}\n`;\n","export default /* glsl */`\n#ifdef USE_LIGHTMAP\n\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\n\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n\n#ifdef DOUBLE_SIDED\n\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n\n#endif\n\n#if NUM_POINT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n/*\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\t// TODO (abelnation): implement\n\n\t}\n\n#endif\n*/\n\n#if NUM_DIR_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n`;\n","export default /* glsl */`\nuniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\n\n// get the irradiance (radiance convolved with cosine lobe) at the point 'normal' on the unit sphere\n// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\n\t// normal is assumed to have unit length\n\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\n\t// band 0\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\n\t// band 1\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\n\t// band 2\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\n\treturn result;\n\n}\n\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\n\treturn irradiance;\n\n}\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\tvec3 irradiance = ambientLightColor;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI;\n\n\t#endif\n\n\treturn irradiance;\n\n}\n\n#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\n\t\tif ( angleCos > spotLight.coneCos ) {\n\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\t}\n\n#endif\n\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\n\t// Pre-computed values of LinearTransformedCosine approximation of BRDF\n\t// BRDF approximation Texture is 64x64\n\tuniform sampler2D ltc_1; // RGBA Float\n\tuniform sampler2D ltc_2; // RGBA Float\n\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tirradiance *= PI;\n\n\t\t#endif\n\n\t\treturn irradiance;\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\n`;\n","export default /* glsl */`\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct ToonMaterial {\n\n\tvec3 diffuseColor;\n\n};\n\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n\n#define Material_LightProbeLOD( material )\t(0)\n`;\n","export default /* glsl */`\nBlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n`;\n","export default /* glsl */`\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n`;\n","export default /* glsl */`\nPhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\n\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\n\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.\nmaterial.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n\n#ifdef REFLECTIVITY\n\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), rawDiffuseColor, metalnessFactor );\n\n#else\n\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), rawDiffuseColor, metalnessFactor );\n\n#endif\n\n#ifdef CLEARCOAT\n\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\n\t#ifdef USE_CLEARCOATMAP\n\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\n\t#endif\n\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\n\t#endif\n\n\tmaterial.clearcoat = saturate( material.clearcoat ); // Burley clearcoat model\n\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n\n#endif\n\n#ifdef USE_SHEEN\n\n\tmaterial.sheenColor = sheen;\n\n#endif\n`;\n","export default /* glsl */`\nstruct PhysicalMaterial {\n\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n\n};\n\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n// Clear coat directional hemishperical reflectance (this approximation should be improved)\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction\n\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\n\t\t// LTC Fresnel Approximation by Stephen Hill\n\t\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n\t}\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tccIrradiance *= PI; // punctual light\n\n\t\t#endif\n\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\n\t// Both indirect specular and indirect diffuse light accumulate here\n\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n`;\n","export default /* glsl */`\n/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( RE_IndirectDiffuse )\n\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tlightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\n\n\t\t#endif\n\n\t\tirradiance += lightMapIrradiance;\n\n\t#endif\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, maxMipLevel );\n\n\t#endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\tradiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\n\t#ifdef CLEARCOAT\n\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( RE_IndirectDiffuse )\n\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\t// Doing a strict comparison with == 1.0 can cause noise artifacts\n\t// on some platforms. See issue #17623.\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\n\t#else\n\n\t\tuniform float logDepthBufFC;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\n\t#else\n\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n\t\t\tgl_Position.z *= gl_Position.w;\n\n\t\t}\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\n#endif\n\n#ifdef USE_MAP\n\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tuniform mat3 uvTransform;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n`;\n","export default /* glsl */`\nfloat metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tmetalnessFactor *= texelMetalness.b;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHNORMALS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHTARGETS\n\n\tuniform float morphTargetBaseInfluence;\n\n\t#ifndef USE_MORPHNORMALS\n\n\t\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\t\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHTARGETS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in position = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\nfloat faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n\n#ifdef FLAT_SHADED\n\n\t// Workaround for Adreno GPUs not able to do dFdx( vViewPosition )\n\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * faceDirection;\n\n\t#endif\n\n\t#ifdef USE_TANGENT\n\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\n\t\t#endif\n\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n\n// non perturbed normal for clearcoat among others\n\nvec3 geometryNormal = normal;\n\n`;\n","export default /* glsl */`\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n\t#ifdef FLIP_SIDED\n\n\t\tnormal = - normal;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * faceDirection;\n\n\t#endif\n\n\tnormal = normalize( normalMatrix * normal );\n\n#elif defined( TANGENTSPACE_NORMALMAP )\n\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tnormal = normalize( vTBN * mapN );\n\n\t#else\n\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\n\t#endif\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n#endif\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tuniform mat3 normalMatrix;\n\n#endif\n\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\n\t// Normal Mapping Without Precomputed Tangents\n\t// http://www.thetenthplanet.de/archives/1180\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 N = surf_norm; // normalized\n\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef CLEARCOAT\n\n\tvec3 clearcoatNormal = geometryNormal;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\n\t#else\n\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n\n#ifdef USE_CLEARCOATMAP\n\n\tuniform sampler2D clearcoatMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\tuniform sampler2D clearcoatRoughnessMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\n\treturn r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\n\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\n\n// NOTE: https://twitter.com/gonnavis/status/1377183786949959682\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n`;\n","export default /* glsl */`\n#ifdef PREMULTIPLIED_ALPHA\n\n\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n\tgl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n`;\n","export default /* glsl */`\nvec4 mvPosition = vec4( transformed, 1.0 );\n\n#ifdef USE_INSTANCING\n\n\tmvPosition = instanceMatrix * mvPosition;\n\n#endif\n\nmvPosition = modelViewMatrix * mvPosition;\n\ngl_Position = projectionMatrix * mvPosition;\n`;\n","export default /* glsl */`\n#ifdef DITHERING\n\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef DITHERING\n\n\t// based on https://www.shadertoy.com/view/MslGR8\n\tvec3 dithering( vec3 color ) {\n\t\t//Calculate grid position\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n\t\t//modify shift acording to grid position.\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n\t\t//shift the color by dither_shift\n\t\treturn color + dither_shift_RGB;\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nfloat roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\troughnessFactor *= texelRoughness.g;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): create uniforms for area light shadows\n\n\t#endif\n\t*/\n\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n\t}\n\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\n\t}\n\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\n\t\tfloat occlusion = 1.0;\n\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\n\t\tfloat hard_shadow = step( compare , distribution.x ); // Hard Shadow\n\n\t\tif (hard_shadow != 1.0 ) {\n\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance ); // Chebeyshevs inequality\n\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 ); // 0.3 reduces light bleed\n\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\n\t\t}\n\t\treturn occlusion;\n\n\t}\n\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tfloat shadow = 1.0;\n\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#else // no percentage-closer filtering:\n\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#endif\n\n\t\t}\n\n\t\treturn shadow;\n\n\t}\n\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t// 2D texture:\n\t//\n\t// xzXZ\n\t//  y Y\n\t//\n\t// Y - Positive y direction\n\t// y - Negative y direction\n\t// X - Positive x direction\n\t// x - Negative x direction\n\t// Z - Positive z direction\n\t// z - Negative z direction\n\t//\n\t// Source and test bed:\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t// Number of texels to avoid at the edge of each square\n\n\t\tvec3 absV = abs( v );\n\n\t\t// Intersect unit cube\n\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\n\t\t// Apply scale to avoid seams\n\n\t\t// two texels less per square (one texel will do for NEAREST)\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t// Unwrap\n\n\t\t// space: -1 ... 1 range for each square\n\t\t//\n\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\tvec2 planar = v.xy;\n\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\tif ( absV.z >= almostOne ) {\n\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t}\n\n\t\t// Transform to UV space\n\n\t\t// scale := 0.5 / dim\n\t\t// translate := ( center + 0.5 ) / dim\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t}\n\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t// the vector from the light to the world-space position of the fragment.\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\n\t\t// dp = normalized distance from light to fragment position\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n\t\tdp += shadowBias;\n\n\t\t// bd3D = base direction 3D\n\t\tvec3 bd3D = normalize( lightToPosition );\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering\n\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n\t\t#endif\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): uniforms for area light shadows\n\n\t#endif\n\t*/\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\t// Offsetting the position used for querying occlusion along the world normal can be used to reduce shadow acne.\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\n\t#endif\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update vAreaShadowCoord with area light info\n\n\t#endif\n\t*/\n\n#endif\n`;\n","export default /* glsl */`\nfloat getShadowMask() {\n\n\tfloat shadow = 1.0;\n\n\t#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\tDirectionalLightShadow directionalLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\tSpotLightShadow spotLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\tPointLightShadow pointLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update shadow for Area light\n\n\t#endif\n\t*/\n\n\t#endif\n\n\treturn shadow;\n\n}\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n\t#ifdef USE_TANGENT\n\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\nfloat specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( TONE_MAPPING )\n\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n`;\n","export default /* glsl */`\n#ifndef saturate\n// <common> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n\treturn toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\nvec3 ReinhardToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\nvec3 RRTAndODTFit( vec3 v ) {\n\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n\n}\n\n// this implementation of ACES is modified to accommodate a brighter viewing environment.\n// the scale factor of 1/0.6 is subjective. see discussion in #19621.\n\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\n\t// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ), // transposed from source\n\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\n\t// ODT_SAT => XYZ => D60_2_D65 => sRGB\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ), // transposed from source\n\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\n\tcolor *= toneMappingExposure / 0.6;\n\n\tcolor = ACESInputMat * color;\n\n\t// Apply RRT and ODT\n\tcolor = RRTAndODTFit( color );\n\n\tcolor = ACESOutputMat * color;\n\n\t// Clamp to [0, 1]\n\treturn saturate( color );\n\n}\n\nvec3 CustomToneMapping( vec3 color ) { return color; }\n`;\n","export default /* glsl */`\n#ifdef USE_TRANSMISSION\n\n\t#ifdef USE_TRANSMISSIONMAP\n\n\t\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n\n\t#endif\n\n\t#ifdef USE_THICKNESSNMAP\n\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\n\t#endif\n\n\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\n\n\t// From https://google.github.io/filament/Filament.html#materialsystem/parameterization/remapping\n\tvec3 f0 = vec3( pow( ior - 1.0, 2.0 ) / pow( ior + 1.0, 2.0 ) );\n\tvec3 f90 = vec3( 1.0 );\n\n\tvec3 f_transmission = totalTransmission * getIBLVolumeRefraction(\n\t\tnormal, v, viewDir, roughnessFactor, diffuseColor.rgb, f0, f90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance);\n\n\tdiffuseColor.rgb = mix( diffuseColor.rgb, f_transmission, totalTransmission );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_TRANSMISSION\n\n\t// Transmission code is based on glTF-Sampler-Viewer\n\t// https://github.com/KhronosGroup/glTF-Sample-Viewer\n\n\t#ifdef USE_TRANSMISSIONMAP\n\n\t\tuniform sampler2D transmissionMap;\n\n\t#endif\n\n\t#ifdef USE_THICKNESSMAP\n\n\t\tuniform sampler2D thicknessMap;\n\n\t#endif\n\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\n\tvarying vec4 vWorldPosition;\n\n\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\n\t\t// Direction of refracted light.\n\t\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\n\n\t\t// Compute rotation-independant scaling of the model matrix.\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\n\t\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\n\t\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\n\n\t\t// The thickness is specified in local space.\n\t\treturn normalize(refractionVector) * thickness * modelScale;\n\t}\n\n\tfloat applyIorToRoughness(float roughness, float ior) {\n\t\t// Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and\n\t\t// an IOR of 1.5 results in the default amount of microfacet refraction.\n\t\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\n\t}\n\n\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\n\t\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\n\t\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\n\t}\n\n\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\n\t\tif (attenuationDistance == 0.0) {\n\t\t\t// Attenuation distance is +∞ (which we indicate by zero), i.e. the transmitted color is not attenuated at all.\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\t// Compute light attenuation using Beer's law.\n\t\t\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\n\t\t\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance); // Beer's law\n\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\n\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, vec3 viewDir, float perceptualRoughness, vec3 baseColor, vec3 f0, vec3 f90,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness, vec3 attenuationColor, float attenuationDistance) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\n\t\t// Project refracted vector on the framebuffer, while mapping to normalized device coordinates.\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\n\t\t// Sample framebuffer to get pixel the refracted ray hits.\n\t\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\n\n\t\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\n\n\t\tfloat NdotV = saturate(dot(n, viewDir));\n\t\tvec2 brdf = integrateSpecularBRDF(NdotV, perceptualRoughness);\n\t\tvec3 specularColor = f0 * brdf.x + f90 * brdf.y;\n\n\t\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\n\t}\n#endif\n`;\n","export default /* glsl */`\n#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\n\tvarying vec2 vUv;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_UV\n\n\t#ifdef UVS_VERTEX_ONLY\n\n\t\tvec2 vUv;\n\n\t#else\n\n\t\tvarying vec2 vUv;\n\n\t#endif\n\n\tuniform mat3 uvTransform;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_UV\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n\tuniform mat3 uv2Transform;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\n\t#ifdef USE_INSTANCING\n\n\t\tworldPosition = instanceMatrix * worldPosition;\n\n\t#endif\n\n\tworldPosition = modelMatrix * worldPosition;\n\n#endif\n`;\n","export default /* glsl */`\nuniform sampler2D t2D;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tvec4 texColor = texture2D( t2D, vUv );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export default /* glsl */`\nvarying vec2 vUv;\nuniform mat3 uvTransform;\n\nvoid main() {\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n\n}\n`;\n","export default /* glsl */`\n#include <envmap_common_pars_fragment>\nuniform float opacity;\n\nvarying vec3 vWorldDirection;\n\n#include <cube_uv_reflection_fragment>\n\nvoid main() {\n\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export default /* glsl */`\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n\tgl_Position.z = gl_Position.w; // set z to camera.far\n\n}\n`;\n","export default /* glsl */`\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t// Higher precision equivalent of gl_FragCoord.z. This assumes depthRange has been left to its default values.\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\n\t#endif\n\n}\n`;\n","export default /* glsl */`\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// This is used for computing an equivalent of gl_FragCoord.z that is as high precision as possible.\n// Some platforms compute gl_FragCoord at a lower precision which makes the manually computed value better for\n// depth-based postprocessing effects. Reproduced on iPad with A10 processor / iPadOS 13.3.1.\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvHighPrecisionZW = gl_Position.zw;\n\n}\n`;\n","export default /* glsl */`\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n`;\n","export default /* glsl */`\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition.xyz;\n\n}\n`;\n","export default /* glsl */`\nuniform sampler2D tEquirect;\n\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvec3 direction = normalize( vWorldDirection );\n\n\tvec2 sampleUV = equirectUv( direction );\n\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export default /* glsl */`\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\nuniform float dashSize;\nuniform float totalSize;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\n\t\tdiscard;\n\n\t}\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\n\toutgoingLight = diffuseColor.rgb; // simple shader\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n`;\n","export default /* glsl */`\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvLineDistance = scale * lineDistance;\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\n\t#endif\n\n\t#include <lightmap_fragment>\n\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n\t#else\n\n\t\treflectedLight.directDiffuse = vLightFront;\n\n\t#endif\n\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n\t// modulation\n\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n`;\n","export default /* glsl */`\n#define LAMBERT\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n`;\n","export default /* glsl */`\n#define MATCAP\n\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n\n\t#ifdef USE_MATCAP\n\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\n\t#else\n\n\t\tvec4 matcapColor = vec4( 1.0 );\n\n\t#endif\n\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define MATCAP\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\t\tvNormal = normalize( transformedNormal );\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n}\n`;\n","export default /* glsl */`\n#define TOON\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define TOON\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\n#define STANDARD\n\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform vec3 attenuationColor;\n\tuniform float attenuationDistance;\n#endif\n\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <transmission_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#ifdef USE_TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t\tfloat thicknessFactor = thickness;\n\t#endif\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\tvec3 rawDiffuseColor = diffuseColor.rgb;\n\n\t#include <transmission_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define STANDARD\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#ifdef USE_TRANSMISSION\n\n\tvarying vec4 vWorldPosition;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n#ifdef USE_TRANSMISSION\n\n\tvWorldPosition = worldPosition;\n\n#endif\n}\n`;\n","export default /* glsl */`\n#define NORMAL\n\nuniform float opacity;\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\n}\n`;\n","export default /* glsl */`\n#define NORMAL\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvViewPosition = - mvPosition.xyz;\n\n#endif\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n`;\n","export default /* glsl */`\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\n\tgl_PointSize = size;\n\n\t#ifdef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 color;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvoid main() {\n\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n`;\n","export default /* glsl */`\n#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n\nvoid main() {\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n`;\n","export default /* glsl */`\nuniform float rotation;\nuniform vec2 center;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n\t#ifndef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\n\t#endif\n\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n\tmvPosition.xy += rotatedPosition;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","import { Color } from '../../math/Color.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nexport { UniformsLib };\n","import { ShaderChunk } from './ShaderChunk.js';\nimport { mergeUniforms } from './UniformsUtils.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from './UniformsLib.js';\nimport { Color } from '../../math/Color.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: new Color( 0x000000 ) }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n\nexport { ShaderLib };\n","import { BackSide, FrontSide, CubeUVReflectionMapping } from '../../constants.js';\nimport { BoxGeometry } from '../../geometries/BoxGeometry.js';\nimport { PlaneGeometry } from '../../geometries/PlaneGeometry.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { Color } from '../../math/Color.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { cloneUniforms } from '../shaders/UniformsUtils.js';\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = 0;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n\nexport { WebGLBackground };\n","﻿function WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry, index );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( geometry, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in geometryAttributes ) {\n\n\t\t\tconst cachedAttribute = cachedAttributes[ key ];\n\t\t\tconst geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst data = {};\n\t\t\tdata.attribute = attribute;\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data = attribute.data;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tconst geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\n\t\t\t\t} else if ( name === 'instanceColor' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceColor );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute, 1 );\n\n\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute, 3, type, false, 12, 0 );\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\n\nexport { WebGLBindingStates };\n","function WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLBufferRenderer };\n","function WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n\nexport { WebGLCapabilities };\n","import { Matrix3 } from '../../math/Matrix3.js';\nimport { Plane } from '../../math/Plane.js';\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n\nexport { WebGLClipping };\n","import { CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping } from '../../constants.js';\nimport { WebGLCubeRenderTarget } from '../WebGLCubeRenderTarget.js';\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nexport { WebGLCubeMaps };\n","function WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n\nexport { WebGLExtensions };\n","import { Uint16BufferAttribute, Uint32BufferAttribute } from '../../core/BufferAttribute.js';\nimport { arrayMax } from '../../utils.js';\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n\nexport { WebGLGeometries };\n","function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLIndexedBufferRenderer };\n","function WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n\nexport { WebGLInfo };\n","function numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\tlet influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tworkInfluences.sort( numericalSort );\n\n\t\tconst morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tconst morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tconst influence = workInfluences[ i ];\n\t\t\tconst index = influence[ 0 ];\n\t\t\tconst value = influence[ 1 ];\n\n\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t} else {\n\n\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLMorphtargets };\n","function WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n\nexport { WebGLObjects };\n","import { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nclass DataTexture2DArray extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\nexport { DataTexture2DArray };\n","import { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nclass DataTexture3D extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture3D.prototype.isDataTexture3D = true;\n\nexport { DataTexture3D };\n","/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nimport { CubeTexture } from '../../textures/CubeTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { DataTexture2DArray } from '../../textures/DataTexture2DArray.js';\nimport { DataTexture3D } from '../../textures/DataTexture3D.js';\n\nconst emptyTexture = new Texture();\nconst emptyTexture2dArray = new DataTexture2DArray();\nconst emptyTexture3d = new DataTexture3D();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tconst cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nexport { WebGLUniforms };\n","function WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nexport { WebGLShader };\n","import { WebGLUniforms } from './WebGLUniforms.js';\nimport { WebGLShader } from './WebGLShader.js';\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, CubeRefractionMapping, CubeUVRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, ACESFilmicToneMapping, CineonToneMapping, CustomToneMapping, ReinhardToneMapping, LinearToneMapping, GammaEncoding, RGBDEncoding, RGBM16Encoding, RGBM7Encoding, RGBEEncoding, sRGBEncoding, LinearEncoding, LogLuvEncoding, GLSL3 } from '../../constants.js';\n\nlet programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tconst lines = string.split( '\\n' );\n\n\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tconst source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission > 0.0 ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tconst gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nexport { WebGLProgram };\n","import { BackSide, DoubleSide, CubeUVRefractionMapping, CubeUVReflectionMapping, LinearEncoding, ObjectSpaceNormalMap, TangentSpaceNormalMap, NoToneMapping } from '../../constants.js';\nimport { WebGLProgram } from './WebGLProgram.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { UniformsUtils } from '../shaders/UniformsUtils.js';\n\nfunction WebGLPrograms( renderer, cubemaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\tconst vertexTextures = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tconst parameterNames = [\n\t\t'precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor',\n\t\t'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV',\n\t\t'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap',\n\t\t'roughnessMap', 'metalnessMap', 'gradientMap',\n\t\t'alphaMap', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2',\n\t\t'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning',\n\t\t'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'premultipliedAlpha',\n\t\t'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights',\n\t\t'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows',\n\t\t'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights',\n\t\t'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering',\n\t\t'sheen', 'transmission', 'transmissionMap', 'thicknessMap'\n\t];\n\n\tfunction getMaxBones( object ) {\n\n\t\tconst skeleton = object.skeleton;\n\t\tconst bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\tconst nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tconst maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map ) {\n\n\t\tlet encoding;\n\n\t\tif ( map && map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map && map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t} else {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet vertexShader, fragmentShader;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\tclearcoatMap: !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: !! material.sheen,\n\n\t\t\ttransmission: !! material.transmission,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmission || !! material.transmissionMap || !! material.thicknessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.transmission || !! material.transmissionMap || !! material.thicknessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.fragmentShader );\n\t\t\tarray.push( parameters.vertexShader );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tfor ( let i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( renderer.outputEncoding );\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs\n\t};\n\n}\n\n\nexport { WebGLPrograms };\n","function WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLProperties };\n","function painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList( properties ) {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tconst defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.program = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists( properties ) {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList( properties );\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList( properties );\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderLists, WebGLRenderList };\n","import { Color } from '../../math/Color.js';\nimport { Matrix4 } from '../../math/Matrix4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from '../shaders/UniformsLib.js';\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\n\nexport { WebGLLights };\n","import { WebGLLights } from './WebGLLights.js';\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderStates };\n","import { Material } from './Material.js';\nimport { BasicDepthPacking } from '../constants.js';\n\n/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nexport { MeshDepthMaterial };\n","import { Material } from './Material.js';\nimport { Vector3 } from '../math/Vector3.js';\n\n/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nexport { MeshDistanceMaterial };\n","import { FrontSide, BackSide, DoubleSide, RGBAFormat, NearestFilter, LinearFilter, PCFShadowMap, VSMShadowMap, RGBADepthPacking, NoBlending } from '../../constants.js';\nimport { WebGLRenderTarget } from '../WebGLRenderTarget.js';\nimport { MeshDepthMaterial } from '../../materials/MeshDepthMaterial.js';\nimport { MeshDistanceMaterial } from '../../materials/MeshDistanceMaterial.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { BufferAttribute } from '../../core/BufferAttribute.js';\nimport { BufferGeometry } from '../../core/BufferGeometry.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Frustum } from '../../math/Frustum.js';\n\nimport vsm_frag from '../shaders/ShaderLib/vsm_frag.glsl.js';\nimport vsm_vert from '../shaders/ShaderLib/vsm_vert.glsl.js';\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterials = [],\n\t\t_distanceMaterials = [],\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\n\t\tdefines: {\n\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t},\n\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm_vert,\n\n\t\tfragmentShader: vsm_frag\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tconst pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterialVariant( useMorphing ) {\n\n\t\tconst index = useMorphing << 0;\n\n\t\tlet material = _depthMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDistanceMaterialVariant( useMorphing ) {\n\n\t\tconst index = useMorphing << 0;\n\n\t\tlet material = _distanceMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tlet getMaterialVariant = getDepthMaterialVariant;\n\t\tlet customMaterial = object.customDepthMaterial;\n\n\t\tif ( light.isPointLight === true ) {\n\n\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( customMaterial === undefined ) {\n\n\t\t\tlet useMorphing = false;\n\n\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t}\n\n\t\t\tresult = getMaterialVariant( useMorphing );\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { WebGLShadowMap };\n","export default /* glsl */`\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n`;\n","export default /* glsl */`\nuniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n\n#include <packing>\n\nvoid main() {\n\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\n\t// This seems totally useless but it's a crazy work around for a Adreno compiler bug\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\n\t\t#ifdef HORIZONTAL_PASS\n\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\n\t\t#else\n\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\n\t\t#endif\n\n\t}\n\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n\n}\n`;\n","import { NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessEqualDepth, LessDepth, AlwaysDepth, NeverDepth, CullFaceFront, CullFaceBack, CullFaceNone, DoubleSide, BackSide, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, NoBlending, NormalBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor } from '../../constants.js';\nimport { Vector4 } from '../../math/Vector4.js';\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet xrFramebuffer = null;\n\tlet currentBoundFramebuffers = {};\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindXRFramebuffer( framebuffer ) {\n\n\t\tif ( framebuffer !== xrFramebuffer ) {\n\n\t\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, framebuffer );\n\n\t\t\txrFramebuffer = framebuffer;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( framebuffer === null && xrFramebuffer !== null ) framebuffer = xrFramebuffer; // use active XR framebuffer if available\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\txrFramebuffer = null;\n\t\tcurrentBoundFramebuffers = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tbindXRFramebuffer: bindXRFramebuffer,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nexport { WebGLState };\n","import { LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, RGBFormat, RGBAFormat, DepthFormat, DepthStencilFormat, UnsignedShortType, UnsignedIntType, UnsignedInt248Type, FloatType, HalfFloatType, MirroredRepeatWrapping, ClampToEdgeWrapping, RepeatWrapping } from '../../constants.js';\nimport * as MathUtils from '../../math/MathUtils.js';\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\ttextureProperties.__maxMipLevel = Math.log2( Math.max( width, height ) );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGB32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGB16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGB8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGBA8;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isDataTexture3D ) textureType = _gl.TEXTURE_3D;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tconst image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\tconst supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format );\n\n\t\tlet glType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tlet mipmap;\n\t\tconst mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// validation checks for WebGL 1\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\tconst isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\tconst cubeImage = [];\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t} else {\n\n\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst image = cubeImage[ 0 ],\n\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\tlet mipmaps;\n\n\t\tif ( isCompressed ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t// We assume images for cube map have the same size.\n\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t} else {\n\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// Use the first texture for MRT so far\n\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[ 0 ] : renderTarget.texture;\n\n\t\t\tconst glFormat = utils.convert( texture.format );\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t// Handles WebGL2 RGBFormat fallback - #18858\n\n\t\tif ( isWebGL2 && texture.format === RGBFormat && ( texture.type === FloatType || texture.type === HalfFloatType ) ) {\n\n\t\t\ttexture.format = RGBAFormat;\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( isMultisample ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, attachment, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( isRenderTarget3D ) {\n\n\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\n\t\t\t\t\tglTextureType = isTexture3D ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tlet warnedTexture2D = false;\n\tlet warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\n\t\tsetTextureCube( texture, slot );\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\nexport { WebGLTextures };\n","import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBAFormat, RGBFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort565Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, SRGB8_ALPHA8_ASTC_4x4_Format, SRGB8_ALPHA8_ASTC_5x4_Format, SRGB8_ALPHA8_ASTC_5x5_Format, SRGB8_ALPHA8_ASTC_6x5_Format, SRGB8_ALPHA8_ASTC_6x6_Format, SRGB8_ALPHA8_ASTC_8x5_Format, SRGB8_ALPHA8_ASTC_8x6_Format, SRGB8_ALPHA8_ASTC_8x8_Format, SRGB8_ALPHA8_ASTC_10x5_Format, SRGB8_ALPHA8_ASTC_10x6_Format, SRGB8_ALPHA8_ASTC_10x8_Format, SRGB8_ALPHA8_ASTC_10x10_Format, SRGB8_ALPHA8_ASTC_12x10_Format, SRGB8_ALPHA8_ASTC_12x12_Format, RGBA_BPTC_Format } from '../../constants.js';\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\t\tif ( p === RedFormat ) return gl.RED;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBIntegerFormat ) return gl.RGB_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n\nexport { WebGLUtils };\n","import { PerspectiveCamera } from './PerspectiveCamera.js';\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nArrayCamera.prototype.isArrayCamera = true;\n\n\nexport { ArrayCamera };\n","import { Object3D } from '../core/Object3D.js';\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nGroup.prototype.isGroup = true;\n\nexport { Group };\n","import { Vector3 } from '../../math/Vector3.js';\nimport { Group } from '../../objects/Group.js';\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nexport { WebXRController };\n","import { ArrayCamera } from '../../cameras/ArrayCamera.js';\nimport { EventDispatcher } from '../../core/EventDispatcher.js';\nimport { PerspectiveCamera } from '../../cameras/PerspectiveCamera.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { WebGLAnimation } from '../webgl/WebGLAnimation.js';\nimport { WebXRController } from './WebXRController.js';\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\t\tconst state = renderer.state;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\n\t\tlet pose = null;\n\n\t\tconst controllers = [];\n\t\tconst inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\tstate.bindXRFramebuffer( null );\n\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() );\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn referenceSpace;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tconst layerInit = {\n\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t};\n\n\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\tconst baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t// Assign inputSources to available controllers\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\t\t\t\tconst baseLayer = session.renderState.baseLayer;\n\n\t\t\t\tstate.bindXRFramebuffer( baseLayer.framebuffer );\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\t\t\t\t\tconst viewport = baseLayer.getViewport( view );\n\n\t\t\t\t\tconst camera = cameras[ i ];\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst controller = controllers[ i ];\n\t\t\t\tconst inputSource = inputSources[ i ];\n\n\t\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nexport { WebXRManager };\n","import { BackSide } from '../../constants.js';\n\nfunction WebGLMaterials( properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t} else {\n\n\t\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tconst maxMipLevel = properties.get( envMap ).__maxMipLevel;\n\n\t\t\tif ( maxMipLevel !== undefined ) {\n\n\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\tif ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n\n\t\tif ( material.clearcoatMap ) {\n\n\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.transmission.value = material.transmission;\n\n\t\tif ( material.transmissionMap ) {\n\n\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t}\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t}\n\n\t\tuniforms.thickness.value = material.thickness;\n\n\t\tif ( material.thicknessMap ) {\n\n\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t}\n\n\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nexport { WebGLMaterials };\n","import {\n\tRGBAFormat,\n\tHalfFloatType,\n\tFloatType,\n\tUnsignedByteType,\n\tLinearEncoding,\n\tNoToneMapping,\n\tLinearMipmapLinearFilter,\n\tNearestFilter,\n\tClampToEdgeWrapping\n} from '../constants.js';\nimport { Frustum } from '../math/Frustum.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Color } from '../math/Color.js';\nimport { WebGLAnimation } from './webgl/WebGLAnimation.js';\nimport { WebGLAttributes } from './webgl/WebGLAttributes.js';\nimport { WebGLBackground } from './webgl/WebGLBackground.js';\nimport { WebGLBindingStates } from './webgl/WebGLBindingStates.js';\nimport { WebGLBufferRenderer } from './webgl/WebGLBufferRenderer.js';\nimport { WebGLCapabilities } from './webgl/WebGLCapabilities.js';\nimport { WebGLClipping } from './webgl/WebGLClipping.js';\nimport { WebGLCubeMaps } from './webgl/WebGLCubeMaps.js';\nimport { WebGLExtensions } from './webgl/WebGLExtensions.js';\nimport { WebGLGeometries } from './webgl/WebGLGeometries.js';\nimport { WebGLIndexedBufferRenderer } from './webgl/WebGLIndexedBufferRenderer.js';\nimport { WebGLInfo } from './webgl/WebGLInfo.js';\nimport { WebGLMorphtargets } from './webgl/WebGLMorphtargets.js';\nimport { WebGLObjects } from './webgl/WebGLObjects.js';\nimport { WebGLPrograms } from './webgl/WebGLPrograms.js';\nimport { WebGLProperties } from './webgl/WebGLProperties.js';\nimport { WebGLRenderLists } from './webgl/WebGLRenderLists.js';\nimport { WebGLRenderStates } from './webgl/WebGLRenderStates.js';\nimport { WebGLRenderTarget } from './WebGLRenderTarget.js';\nimport { WebGLShadowMap } from './webgl/WebGLShadowMap.js';\nimport { WebGLState } from './webgl/WebGLState.js';\nimport { WebGLTextures } from './webgl/WebGLTextures.js';\nimport { WebGLUniforms } from './webgl/WebGLUniforms.js';\nimport { WebGLUtils } from './webgl/WebGLUtils.js';\nimport { WebXRManager } from './webxr/WebXRManager.js';\nimport { WebGLMaterials } from './webgl/WebGLMaterials.js';\n\nfunction createCanvasElement() {\n\n\tconst canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters ) {\n\n\tparameters = parameters || {};\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t//\n\n\tconst _currentDrawBuffers = [];\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t_currentDrawBuffers[ 0 ] = _gl.BACK;\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( properties );\n\t\trenderLists = new WebGLRenderLists( properties );\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getClearColor() now requires a Color as an argument' );\n\n\t\t\ttarget = new Color();\n\n\t\t}\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tbindingStates.initAttributes();\n\n\t\tconst buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tbindingStates.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tgetProgram( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights();\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissiveObjects( opaqueObjects, transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderTransmissiveObjects( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1024, 1024, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\twrapS: ClampToEdgeWrapping,\n\t\t\t\twrapT: ClampToEdgeWrapping\n\t\t\t} );\n\n\t\t}\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\trenderObjects( transmissiveObjects, scene, camera );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\tcurrentRenderState.setupLightsView( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tbindingStates.reset();\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = cubemaps.get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\n\t}\n\n\tfunction setProgram( camera, scene, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isDataTexture3D || texture.isDataTexture2DArray ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tif ( _currentDrawBuffers.length !== textures.length || _currentDrawBuffers[ 0 ] !== _gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t_currentDrawBuffers[ i ] = _gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_currentDrawBuffers.length = textures.length;\n\n\t\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( _currentDrawBuffers.length !== 1 || _currentDrawBuffers[ 0 ] !== _gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\t\t_currentDrawBuffers[ 0 ] = _gl.COLOR_ATTACHMENT0;\n\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\n\t\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( _currentDrawBuffers.length !== 1 || _currentDrawBuffers[ 0 ] !== _gl.BACK ) {\n\n\t\t\t\t\t_currentDrawBuffers[ 0 ] = _gl.BACK;\n\t\t\t\t\t_currentDrawBuffers.length = 1;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t_gl.drawBuffers( _currentDrawBuffers );\n\n\t\t\t\t} else {\n\n\t\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( _currentDrawBuffers );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\tlet glFormat = utils.convert( texture.format );\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\n\n\t\t\tif ( glFormat === _gl.RGB ) glFormat = _gl.RGB8;\n\t\t\tif ( glFormat === _gl.RGBA ) glFormat = _gl.RGBA8;\n\n\t\t}\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst { width, height, data } = srcTexture.image;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isDataTexture3D ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t} else if ( dstTexture.isDataTexture2DArray ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, width );\n\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, height );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t_gl.texSubImage3D(\n\t\t\tglTarget,\n\t\t\tlevel,\n\t\t\tposition.x,\n\t\t\tposition.y,\n\t\t\tposition.z,\n\t\t\tsourceBox.max.x - sourceBox.min.x + 1,\n\t\t\tsourceBox.max.y - sourceBox.min.y + 1,\n\t\t\tsourceBox.max.z - sourceBox.min.z + 1,\n\t\t\tglFormat,\n\t\t\tglType,\n\t\t\tdata\n\t\t);\n\n\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nexport { WebGLRenderer };\n","import { Object3D } from '../core/Object3D.js';\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.environment !== null ) data.object.environment = this.environment.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nScene.prototype.isScene = true;\n\nexport { Scene };\n","import * as MathUtils from '../math/MathUtils.js';\nimport { StaticDrawUsage } from '../constants.js';\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\nexport { InterleavedBuffer };\n","import { Vector3 } from '../math/Vector3.js';\nimport { BufferAttribute } from './BufferAttribute.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interlaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\n\nexport { InterleavedBufferAttribute };\n","import { Mesh } from './Mesh.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.fromBufferAttribute( geometry.attributes.position, index ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nSkinnedMesh.prototype.isSkinnedMesh = true;\n\nexport { SkinnedMesh };\n","import { Object3D } from '../core/Object3D.js';\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nBone.prototype.isBone = true;\n\nexport { Bone };\n","import { Texture } from './Texture.js';\nimport { NearestFilter } from '../constants.js';\n\nclass DataTexture extends Texture {\n\n\tconstructor( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture.prototype.isDataTexture = true;\n\nexport { DataTexture };\n","import {\n\tRGBAFormat,\n\tFloatType\n} from '../constants.js';\nimport { Bone } from './Bone.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { DataTexture } from '../textures/DataTexture.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = MathUtils.ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nexport { Skeleton };\n","import { BufferAttribute } from '../core/BufferAttribute.js';\nimport { Mesh } from './Mesh.js';\nimport { Matrix4 } from '../math/Matrix4.js';\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new BufferAttribute( new Float32Array( this.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nInstancedMesh.prototype.isInstancedMesh = true;\n\nexport { InstancedMesh };\n","import { Material } from './Material.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nexport { LineBasicMaterial };\n","import { Sphere } from '../math/Sphere.js';\nimport { Ray } from '../math/Ray.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\t\tconst distSq = _ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tconst distSq = _ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nLine.prototype.isLine = true;\n\n\nexport { Line };\n","import { Line } from './Line.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [];\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineSegments.prototype.isLineSegments = true;\n\nexport { LineSegments };\n","import { Line } from './Line.js';\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nLineLoop.prototype.isLineLoop = true;\n\nexport { LineLoop };\n","import { Material } from './Material.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nexport { PointsMaterial };\n","import { Sphere } from '../math/Sphere.js';\nimport { Ray } from '../math/Ray.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { PointsMaterial } from '../materials/PointsMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t\t_position.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\t\ttestPoint( _position, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t\t_position.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\ttestPoint( _position, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nPoints.prototype.isPoints = true;\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nexport { Points };\n","import { Texture } from './Texture.js';\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nCanvasTexture.prototype.isCanvasTexture = true;\n\nexport { CanvasTexture };\n","import { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { Vector3 } from '../math/Vector3.js';\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 8, heightSegments = 6, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nexport { SphereGeometry, SphereGeometry as SphereBufferGeometry };\n","import { TangentSpaceNormalMap } from '../constants.js';\nimport { Material } from './Material.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.vertexTangents = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.vertexTangents = source.vertexTangents;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nexport { MeshStandardMaterial };\n","import { Vector2 } from '../math/Vector2.js';\nimport { MeshStandardMaterial } from './MeshStandardMaterial.js';\nimport { Color } from '../math/Color.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\n/**\n * parameters = {\n *  clearcoat: <float>,\n *  clearcoatMap: new THREE.Texture( <Image> ),\n *  clearcoatRoughness: <float>,\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n *\n *  reflectivity: <float>,\n *  ior: <float>,\n *\n *  sheen: <Color>,\n *\n *  transmission: <float>,\n *  transmissionMap: new THREE.Texture( <Image> ),\n *\n *  thickness: <float>,\n *  thicknessMap: new THREE.Texture( <Image> ),\n *  attenuationDistance: <float>,\n *  attenuationColor: <Color>\n * }\n */\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoat = 0.0;\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tObject.defineProperty( this, 'ior', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( 1 + 0.4 * this.reflectivity ) / ( 1 - 0.4 * this.reflectivity );\n\n\t\t\t},\n\t\t\tset: function ( ior ) {\n\n\t\t\t\tthis.reflectivity = MathUtils.clamp( 2.5 * ( ior - 1 ) / ( ior + 1 ), 0, 1 );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.sheen = null; // null will disable sheen bsdf\n\n\t\tthis.transmission = 0.0;\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0.01;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = 0.0;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tif ( source.sheen ) {\n\n\t\t\tthis.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n\n\t\t} else {\n\n\t\t\tthis.sheen = null;\n\n\t\t}\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nexport { MeshPhysicalMaterial };\n","import { Material } from './Material.js';\nimport { MultiplyOperation } from '../constants.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nexport { MeshLambertMaterial };\n","import { Quaternion } from '../math/Quaternion.js';\nimport { AdditiveAnimationBlendMode } from '../constants.js';\n\nconst AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tconst n = times.length;\n\t\tconst result = new Array( n );\n\t\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tconst nValues = values.length;\n\t\tconst result = new values.constructor( nValues );\n\n\t\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tconst srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tlet i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tlet value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\t\tconst clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tconst track = clip.tracks[ i ];\n\t\t\tconst valueSize = track.getValueSize();\n\n\t\t\tconst times = [];\n\t\t\tconst values = [];\n\n\t\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tlet minStartTime = Infinity;\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t},\n\n\tmakeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\t\tif ( fps <= 0 ) fps = 30;\n\n\t\tconst numTracks = referenceClip.tracks.length;\n\t\tconst referenceTime = referenceFrame / fps;\n\n\t\t// Make each track's values relative to the values at the reference frame\n\t\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t// Skip this track if it's non-numeric\n\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t} );\n\n\t\t\tif ( targetTrack === undefined ) continue;\n\n\t\t\tlet referenceOffset = 0;\n\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t\t}\n\n\t\t\tlet targetOffset = 0;\n\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t\t}\n\n\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\tlet referenceValue;\n\n\t\t\t// Find the value to subtract out of the track\n\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else {\n\n\t\t\t\t// Interpolate to the reference value\n\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t\t}\n\n\t\t\t// Conjugate the quaternion\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t}\n\n\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\tconst numTimes = targetTrack.times.length;\n\t\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\treturn targetClip;\n\n\t}\n\n};\n\nexport { AnimationUtils };\n","/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n// ALIAS DEFINITIONS\n\nInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\nInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\nexport { Interpolant };\n","import { ZeroCurvatureEnding } from '../../constants.js';\nimport { Interpolant } from '../Interpolant.js';\nimport { WrapAroundEnding, ZeroSlopeEnding } from '../../constants.js';\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nexport { CubicInterpolant };\n","import { Interpolant } from '../Interpolant.js';\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n\nexport { LinearInterpolant };\n","import { Interpolant } from '../Interpolant.js';\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\n\nexport { DiscreteInterpolant };\n","import {\n\tInterpolateLinear,\n\tInterpolateSmooth,\n\tInterpolateDiscrete\n} from '../constants.js';\nimport { CubicInterpolant } from '../math/interpolants/CubicInterpolant.js';\nimport { LinearInterpolant } from '../math/interpolants/LinearInterpolant.js';\nimport { DiscreteInterpolant } from '../math/interpolants/DiscreteInterpolant.js';\nimport { AnimationUtils } from './AnimationUtils.js';\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = AnimationUtils.arraySlice( this.times ),\n\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tconst values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\nexport { KeyframeTrack };\n","import { InterpolateDiscrete } from '../../constants.js';\nimport { KeyframeTrack } from '../KeyframeTrack.js';\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n// Note: Actually this track could have a optimized / compressed\n// representation of a single value and a custom interpolant that\n// computes \"firstValue ^ isOdd( index )\".\n\nexport { BooleanKeyframeTrack };\n","import { KeyframeTrack } from '../KeyframeTrack.js';\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited\n\n// Note: Very basic implementation and nothing special yet.\n// However, this is the place for color space parameterization.\n\nexport { ColorKeyframeTrack };\n","import { KeyframeTrack } from '../KeyframeTrack.js';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited\n\nexport { NumberKeyframeTrack };\n","import { Interpolant } from '../Interpolant.js';\nimport { Quaternion } from '../Quaternion.js';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n\nexport { QuaternionLinearInterpolant };\n","import { InterpolateLinear } from '../../constants.js';\nimport { KeyframeTrack } from '../KeyframeTrack.js';\nimport { QuaternionLinearInterpolant } from '../../math/interpolants/QuaternionLinearInterpolant.js';\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\nexport { QuaternionKeyframeTrack };\n","import { InterpolateDiscrete } from '../../constants.js';\nimport { KeyframeTrack } from '../KeyframeTrack.js';\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\nexport { StringKeyframeTrack };\n","import { KeyframeTrack } from '../KeyframeTrack.js';\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited\n\nexport { VectorKeyframeTrack };\n","import { AnimationUtils } from './AnimationUtils.js';\nimport { KeyframeTrack } from './KeyframeTrack.js';\nimport { BooleanKeyframeTrack } from './tracks/BooleanKeyframeTrack.js';\nimport { ColorKeyframeTrack } from './tracks/ColorKeyframeTrack.js';\nimport { NumberKeyframeTrack } from './tracks/NumberKeyframeTrack.js';\nimport { QuaternionKeyframeTrack } from './tracks/QuaternionKeyframeTrack.js';\nimport { StringKeyframeTrack } from './tracks/StringKeyframeTrack.js';\nimport { VectorKeyframeTrack } from './tracks/VectorKeyframeTrack.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { NormalAnimationBlendMode } from '../constants.js';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nexport { AnimationClip };\n","const Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n\nexport { Cache };\n","class LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = new LoadingManager();\n\nexport { DefaultLoadingManager, LoadingManager };\n","import { DefaultLoadingManager } from './LoadingManager.js';\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nexport { Loader };\n","import { Cache } from './Cache.js';\nimport { Loader } from './Loader.js';\n\nconst loading = {};\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tconst dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tconst dataUriRegexResult = url.match( dataUriRegex );\n\t\tlet request;\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tconst mimeType = dataUriRegexResult[ 1 ];\n\t\t\tconst isBase64 = !! dataUriRegexResult[ 2 ];\n\n\t\t\tlet data = dataUriRegexResult[ 3 ];\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tlet response;\n\t\t\t\tconst responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tconst view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\trequest = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tconst response = this.response;\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( const header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\n\nexport { FileLoader };\n","import { Cache } from './Cache.js';\nimport { Loader } from './Loader.js';\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\n\nexport { ImageLoader };\n","import { RGBAFormat, RGBFormat } from '../constants.js';\nimport { ImageLoader } from './ImageLoader.js';\nimport { Texture } from '../textures/Texture.js';\nimport { Loader } from './Loader.js';\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tconst isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\n\nexport { TextureLoader };\n","import { Object3D } from '../core/Object3D.js';\nimport { Color } from '../math/Color.js';\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLight.prototype.isLight = true;\n\nexport { Light };\n","import { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Frustum } from '../math/Frustum.js';\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nexport { LightShadow };\n","import { LightShadow } from './LightShadow.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = MathUtils.RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLightShadow.prototype.isSpotLightShadow = true;\n\nexport { SpotLightShadow };\n","import { Light } from './Light.js';\nimport { SpotLightShadow } from './SpotLightShadow.js';\nimport { Object3D } from '../core/Object3D.js';\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLight.prototype.isSpotLight = true;\n\nexport { SpotLight };\n","import { LightShadow } from './LightShadow.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nPointLightShadow.prototype.isPointLightShadow = true;\n\nexport { PointLightShadow };\n","import { Light } from './Light.js';\nimport { PointLightShadow } from './PointLightShadow.js';\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointLight.prototype.isPointLight = true;\n\nexport { PointLight };\n","import { Camera } from './Camera.js';\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nOrthographicCamera.prototype.isOrthographicCamera = true;\n\nexport { OrthographicCamera };\n","import { LightShadow } from './LightShadow.js';\nimport { OrthographicCamera } from '../cameras/OrthographicCamera.js';\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n}\n\nDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\nexport { DirectionalLightShadow };\n","import { Light } from './Light.js';\nimport { DirectionalLightShadow } from './DirectionalLightShadow.js';\nimport { Object3D } from '../core/Object3D.js';\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nDirectionalLight.prototype.isDirectionalLight = true;\n\nexport { DirectionalLight };\n","import { Light } from './Light.js';\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nAmbientLight.prototype.isAmbientLight = true;\n\nexport { AmbientLight };\n","class LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n}\n\nexport { LoaderUtils };\n","import { Cache } from './Cache.js';\nimport { Loader } from './Loader.js';\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\nexport { ImageBitmapLoader };\n","// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( ! matches ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n\nexport { PropertyBinding };\n","/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nimport * as MathUtils from './MathUtils.js';\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( MathUtils.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nexport { Spherical };\n"],"names":["MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","FrontSide","BackSide","DoubleSide","AdditiveBlending","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","RGBFormat","InterpolateDiscrete","InterpolateLinear","TriangleStripDrawMode","TriangleFanDrawMode","sRGBEncoding","TangentSpaceNormalMap","DynamicDrawUsage","EventDispatcher","[object Object]","type","listener","undefined","this","_listeners","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","_lut","toString","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toUpperCase","clamp","value","min","max","lerp","x","y","t","radToDeg","radians","isPowerOfTwo","floorPowerOfTwo","pow","floor","log","LN2","Vector2","width","height","scalar","Error","constructor","v","w","console","warn","addVectors","s","a","b","subVectors","multiplyScalar","m","e","elements","minVal","maxVal","divideScalar","ceil","round","sqrt","abs","atan2","distanceToSquared","dx","dy","normalize","alpha","v1","v2","offset","attribute","getX","getY","center","angle","c","cos","sin","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","set","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","theta","matrix","fromArray","_canvas","isMatrix3","textureId","Texture","image","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","super","Object","defineProperty","uuid","MathUtils.generateUUID","name","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","setUvTransform","copy","source","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","Array","isArray","isDataTexture","serializeImage","dispatchEvent","uv","applyMatrix3","needsUpdate","HTMLImageElement","HTMLCanvasElement","ImageBitmap","test","src","canvas","document","createElementNS","context","getContext","ImageData","putImageData","drawImage","toDataURL","getDataURL","data","isTexture","Vector4","z","q","acos","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","dispose","clone","isWebGLRenderTarget","Quaternion","_x","_y","_z","_w","qa","qb","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","_onChangeCallback","quaternion","euler","update","isEuler","order","_order","c1","c2","c3","s1","s2","s3","axis","halfAngle","trace","vFrom","vTo","dot","MathUtils.clamp","step","angleTo","slerp","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","callback","isQuaternion","Vector3","multiplyVectors","applyQuaternion","_quaternion","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","isVector3","Box3","Infinity","minX","minY","minZ","maxX","maxY","maxZ","count","points","makeEmpty","il","expandByPoint","size","halfSize","add","object","expandByObject","box","isEmpty","point","vector","addScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0","_v1","_v2","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","getSize","_points","setFromPoints","equals","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","missingRadiusHalf","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","b1","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","n","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","position","scale","x2","y2","z2","wx","wy","wz","determinant","_m1","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","isMatrix4","_matrix","Euler","DefaultOrder","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","optionalResult","RotationOrders","Layers","mask","channel","layers","_object3DId","_q1","_target","_position","_scale","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","updateMatrix","premultiply","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","isObject3D","remove","id","getObjectByProperty","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","serialize","library","element","toJSON","JSON","stringify","toArray","isInstancedMesh","instanceMatrix","instanceColor","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","parse","child","_vector1","_vector2","_normalMatrix","Plane","setFromNormalAndCoplanarPoint","inverseNormalLength","negate","line","delta","start","startSign","endSign","end","intersectsPlane","optionalNormalMatrix","getNormalMatrix","referencePoint","coplanarPoint","isPlane","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","targetLengthSq","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","getBarycoord","p3","uv1","uv2","uv3","addScaledVector","i0","i1","i2","getNormal","setFromCoplanarPoints","getUV","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","d5","d6","vb","va","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","alphaToCoverage","premultipliedAlpha","toneMapped","onBeforeCompile","newValue","flatShading","currentValue","isColor","isRoot","color","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","srcPlanes","dstPlanes","isMaterial","_colorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","charAt","setColorName","toLowerCase","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","hue","saturation","lightness","getHSL","color1","color2","MathUtils.lerp","normalized","NAMES","MeshBasicMaterial","setValues","isMeshBasicMaterial","BufferAttribute","itemSize","TypeError","usage","updateRange","index1","index2","colors","vectors","fromBufferAttribute","setXY","setXYZ","applyNormalMatrix","onUploadCallback","isBufferAttribute","Uint16BufferAttribute","Uint16Array","Uint32BufferAttribute","Uint32Array","isFloat16BufferAttribute","Float32BufferAttribute","Float32Array","arrayMax","_id","_obj","_offset","_boxMorphTargets","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","materialIndex","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","makeTranslation","makeScale","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","jl","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","positionAttribute","getAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","isBufferGeometry","attributeArray1","attribute2","attributeArray2","attributeOffset","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","addGroup","keys","hasMorphAttributes","attributeArray","setIndex","_inverseMatrix","_ray","_sphere","_vA","_vB","_vC","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA","_uvB","_uvC","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","assign","ml","String","raycaster","intersects","intersectsBox","intersection","morphPosition","groupMaterial","checkBufferGeometryIntersection","faceIndex","face","isGeometry","morphInfluences","influence","boneTransform","intersect","intersectTriangle","checkIntersection","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","merge","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","MathUtils.RAD2DEG","atan","MathUtils.DEG2RAD","fullWidth","fullHeight","enabled","offsetX","offsetY","skew","getFilmWidth","makePerspective","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","_needsFlipEnvMap","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","shader","tEquirect","mesh","currentMinFilter","stencil","clear","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","get","isInterleavedBufferAttribute","deleteBuffer","buffer","delete","bufferType","cached","bytesPerElement","elementSize","createBuffer","bindBuffer","bufferData","FLOAT","Float64Array","HALF_FLOAT","UNSIGNED_SHORT","Int16Array","SHORT","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","Uint8Array","Uint8ClampedArray","UNSIGNED_BYTE","BYTES_PER_ELEMENT","bufferSubData","subarray","updateBuffer","PlaneGeometry","width_half","height_half","segment_width","segment_height","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","background","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","cubemaps","state","objects","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","isScene","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","copyPosition","toneMapping","unshift","WebGLBindingStates","maxVertexAttributes","getParameter","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","stride","vertexAttribIPointer","reset","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","saveCache","ELEMENT_ARRAY_BUFFER","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","has","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","setState","useCache","materialProperties","nGlobal","lGlobal","clippingState","WebGLCubeMaps","mapTextureMapping","onTextureDispose","removeEventListener","cubemap","fromEquirectangularTexture","addEventListener","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","sort","MAX_SAFE_INTEGER","morphInfluencesSum","hasAttribute","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","onInstancedMeshDispose","instancedMesh","buffergeometry","hasEventListener","physical","transmissionSamplerSize","transmissionSamplerMap","DataTexture2DArray","wrapR","isDataTexture2DArray","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","safeSetTexture2D","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueT2DArray1","setTexture2DArray","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","trim","split","join","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","generateEnvMapBlendingDefine","gammaFactorDefine","customExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","cachedUniforms","deleteShader","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","getParameters","shadows","environment","isMeshStandardMaterial","bones","nVertexUniforms","nVertexMatrices","getMaxBones","isFogExp2","directional","spot","rectArea","hemi","shadowMap","customProgramCacheKey","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","transmissive","defaultProgram","getNextRenderItem","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","ShadowUniformsCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","WebGLShadowMap","_renderer","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","_maxTextureSize","0","1","2","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","renderObject","shadowCamera","intersectsObject","k","kl","depthMaterial","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","enable","DEPTH_TEST","disable","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","enabledCapabilities","xrFramebuffer","currentBoundFramebuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","equationToGL","100","FUNC_ADD","101","FUNC_SUBTRACT","102","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","200","ZERO","201","ONE","202","SRC_COLOR","204","SRC_ALPHA","210","SRC_ALPHA_SATURATE","208","DST_COLOR","206","DST_ALPHA","203","ONE_MINUS_SRC_COLOR","205","ONE_MINUS_SRC_ALPHA","209","ONE_MINUS_DST_COLOR","207","ONE_MINUS_DST_ALPHA","BLEND","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","factor","POLYGON_OFFSET_FILL","activeTexture","webglSlot","TEXTURE0","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","bindXRFramebuffer","useProgram","setMaterial","frontFaceCW","SAMPLE_ALPHA_TO_COVERAGE","setLineWidth","lineWidth","SCISSOR_TEST","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","MathUtils.floorPowerOfTwo","MathUtils.isPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","log2","getInternalFormat","internalFormatName","glFormat","glType","RED","R32F","R16F","R8","RGB","RGB32F","RGB16F","RGB8","RGBA32F","RGBA16F","RGBA8","filterFallback","LINEAR","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","isWebGLMultipleRenderTargets","attachmentProperties","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","isCompressed","isCompressedTexture","cubeImage","convert","glInternalFormat","setTextureParameters","mipmap","mipmapImage","uploadCubeTexture","wrappingToGL","1000","REPEAT","1001","CLAMP_TO_EDGE","1002","MIRRORED_REPEAT","filterToGL","1003","1004","NEAREST_MIPMAP_NEAREST","1005","NEAREST_MIPMAP_LINEAR","1006","1007","LINEAR_MIPMAP_NEAREST","1008","LINEAR_MIPMAP_LINEAR","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_3D","TEXTURE_2D_ARRAY","TEXTURE_WRAP_R","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","setupFrameBufferTexture","attachment","textureTarget","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","samples","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","isWebGLMultisampleRenderTarget","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","isMultipleRenderTargets","isRenderTarget3D","createFramebuffer","COLOR_ATTACHMENT0","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","WebGLUtils","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","RED_INTEGER","RG","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","onSessionEnd","forEach","disconnect","isPresenting","onInputSourcesChange","inputSources","removed","added","cameraAutoUpdate","getController","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","async","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","depthNear","depthFar","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","getCamera","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","WebGLMaterials","refreshUniformsCommon","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLRenderer","display","createCanvasElement","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_currentDrawBuffers","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","rangeMin","rangeMax","message","initGLContext","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","releaseMaterialProgramReferences","deallocateMaterial","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","DYNAMIC_DRAW","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","getProgram","projectObject","isLOD","intersectsSprite","isImmediateRenderObject","renderObjects","camera2","renderObjectImmediate","onAfterRender","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","computeBoneTexture","boneTextureSize","window","setFromProjectionMatrix","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissiveObjects","drawBuffersWEBGL","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","texSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","setUsage","isInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_basePosition","_skinIndex","_skinWeight","SkinnedMesh","bindMatrixInverse","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","weight","getComponent","boneIndex","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","json","boneInverse","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","raycastTimes","instanceId","getMatrixAt","raycast","linecap","linejoin","_start","_end","Line","lineDistances","params","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distanceSqToSegment","LineSegments","LineLoop","Points","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","CanvasTexture","isCanvasTexture","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","thetaEnd","grid","vertex","verticesRow","uOffset","STANDARD","PHYSICAL","ior","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","getInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","o","animationToMorphTargets","pattern","morphTarget","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","validate","optimize","typeName","getTrackTypeForValueTypeName","Cache","files","file","DefaultLoadingManager","onLoad","onProgress","onError","urlModifier","isLoading","itemsLoaded","itemsTotal","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","Promise","resolve","reject","load","loading","FileLoader","setTimeout","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","setRequestHeader","send","ImageLoader","onImageLoad","onImageError","substr","TextureLoader","setCrossOrigin","setPath","isJPEG","search","Light","_lightPositionWorld","_lookTarget","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","scaleW","scaleH","makeOrthographic","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","LoaderUtils","TextDecoder","decode","fromCharCode","escape","lastIndexOf","ImageBitmapLoader","createImageBitmap","fetch","fetchOptions","credentials","headers","then","res","blob","colorSpaceConversion","imageBitmap","catch","isImageBitmapLoader","_reservedRe","RegExp","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","PropertyBinding","rootNode","parsedPath","parseTrackName","node","findNode","nodeName","getValue","_getValue_unbound","_setValue_unbound","root","isAnimationObjectGroup","Composite","matches","results","objectName","objectIndex","propertyIndex","lastDot","substring","getBoneByName","searchNodeSubtree","childNode","subTreeNode","resolvedProperty","targetObject","dest","targetArray","bind","sourceArray","_getValue_unavailable","_setValue_unavailable","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","targetGroup","optionalParsedPath","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","binding","bindings","unbind","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","Spherical","other","EPS","setFromCartesianCoords"],"mappings":"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JwB,2ExB4JxBC,mByB5JwB,0DzB6JxBC,wB0B7JwB,0jH1B8JxBC,gB2B9JwB,4/C3B+JxBC,4B4B/JwB,iP5BgKxBC,qB6BhKwB,2U7BiKxBC,mB8BjKwB,mT9BkKxBC,8B+BlKwB,yrG/BmKxBC,cgCnKwB,krBhCoKxBC,WiCpKwB,+DjCqKxBC,gBkCrKwB,4DlCsKxBC,amCtKwB,0SnCuKxBC,kBoCvKwB,4NpCwKxBC,0BqCxKwB,gcrCyKxBC,kBsCzKwB,6QtC0KxBC,uBuC1KwB,yGvC2KxBC,sBwC3KwB,mgGxC4KxBC,kByC5KwB,6iKzC6KxBC,qB0C7KwB,wE1C8KxBC,0B2C9KwB,mhC3C+KxBC,sB4C/KwB,0M5CgLxBC,2B6ChLwB,m1C7CiLxBC,yB8CjLwB,u8C9CkLxBC,8B+ClLwB,wqM/CmLxBC,sBgDnLwB,ikJhDoLxBC,qBiDpLwB,4iCjDqLxBC,oBkDrLwB,yRlDsLxBC,qBmDtLwB,4SnDuLxBC,0BoDvLwB,iLpDwLxBC,wBqDxLwB,sMrDyLxBC,mBsDzLwB,qZtD0LxBC,auD1LwB,8JvD2LxBC,kBwD3LwB,2DxD4LxBC,sByD5LwB,sWzD6LxBC,2B0D7LwB,2N1D8LxBC,sB2D9LwB,8Q3D+LxBC,2B4D/LwB,6E5DgMxBC,mB6DhMwB,wrB7DiMxBC,wB8DjMwB,4O9DkMxBC,mB+DlMwB,69B/DmMxBC,sBgEnMwB,4gChEoMxBC,qBiEpMwB,+vBjEqMxBC,wBkErMwB,ksClEsMxBC,gCmEtMwB,6EnEuMxBC,+BoEvMwB,qYpEwMxBC,wBqExMwB,ySrEyMxBC,QsEzMwB,4zDtE0MxBC,6BuE1MwB,8MvE2MxBC,ewE3MwB,kOxE4MxBC,mByE5MwB,wFzE6MxBC,wB0E7MwB,2mB1E8MxBC,sB2E9MwB,8Q3E+MxBC,2B4E/MwB,6E5EgNxBC,wB6EhNwB,yqV7EiNxBC,sB8EjNwB,86C9EkNxBC,iB+ElNwB,slD/EmNxBC,yBgFnNwB,wjDhFoNxBC,gBiFpNwB,0OjFqNxBC,qBkFrNwB,wjClFsNxBC,gBmFtNwB,2YnFuNxBC,kBoFvNwB,qepFwNxBC,qBqFxNwB,wMrFyNxBC,0BsFzNwB,2EtF0NxBC,qBuF1NwB,qGvF2NxBC,0BwF3NwB,4hExF4NxBC,sByF5NwB,giCzF6NxBC,2B0F7NwB,u7G1F8NxBC,iB2F9NwB,iG3F+NxBC,e4F/NwB,0J5FgOxBC,U6FhOwB,6E7FiOxBC,kB8FjOwB,4F9FkOxBC,gB+FlOwB,mJ/FmOxBC,WgGnOwB,sHhGoOxBC,gBiGpOwB,kUjGsOxBC,gBkGtOwB,4OlGuOxBC,gBmGvOwB,0KnGwOxBC,UoGxOwB,4WpGyOxBC,UqGzOwB,wQrG0OxBC,WsG1OwB,s/BtG2OxBC,WuG3OwB,qjCvG4OxBC,kBwG5OwB,wuBxG6OxBC,kByG7OwB,4uBzG8OxBC,c0G9OwB,gY1G+OxBC,c2G/OwB,6M3GgPxBC,gB4GhPwB,o1B5GiPxBC,gB6GjPwB,+iB7GkPxBC,e8GlPwB,+wD9GmPxBC,e+GnPwB,y3B/GoPxBC,iBgHpPwB,66EhHqPxBC,iBiHrPwB,ipCjHsPxBC,gBkHtPwB,0nDlHuPxBC,gBmHvPwB,ojCnHwPxBC,coHxPwB,yzDpHyPxBC,cqHzPwB,gsCrH0PxBC,esH1PwB,omEtH2PxBC,euH3PwB,4vCvH4PxBC,kBwH5PwB,kpGxH6PxBC,kByH7PwB,ilDzH8PxBC,Y0H9PwB,qwB1H+PxBC,Y2H/PwB,44C3HgQxBC,Y4HhQwB,0wB5HiQxBC,Y6HjQwB,6sB7HkQxBC,Y8HlQwB,ib9HmQxBC,Y+HnQwB,ma/HoQxBC,YgIpQwB,gvBhIqQxBC,YiIrQwB,ypCCQnBC,GAAc,CAEnBhH,OAAQ,CAEPiH,QAAS,CAAEj5C,MAAO,IAAIi7B,GAAO,WAC7B5P,QAAS,CAAErrB,MAAO,GAElB2uB,IAAK,CAAE3uB,MAAO,MACdk5C,YAAa,CAAEl5C,MAAO,IAAI4D,GAC1Bu1C,aAAc,CAAEn5C,MAAO,IAAI4D,GAE3BirB,SAAU,CAAE7uB,MAAO,OAIpBo5C,YAAa,CAEZvpB,YAAa,CAAE7vB,MAAO,OAIvBq5C,OAAQ,CAEPvpB,OAAQ,CAAE9vB,MAAO,MACjBs5C,WAAY,CAAEt5C,OAAS,GACvBiwB,aAAc,CAAEjwB,MAAO,GACvBkwB,gBAAiB,CAAElwB,MAAO,KAC1B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"}