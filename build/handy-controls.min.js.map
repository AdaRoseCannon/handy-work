{"version":3,"file":"handy-controls.min.js","sources":["../src/handy-controls.js"],"sourcesContent":["/* global AFRAME, THREE */\n\nconst __version__ = __version__;\nconst DEFAULT_HAND_PROFILE_PATH = \"https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles/generic-hand/\";\nconst LIB_URL = \"https://cdn.jsdelivr.net/npm/handy-work@\" + __version__;\nconst LIB = LIB_URL + \"/build/esm/handy-work.standalone.js\";\nconst POSE_FOLDER = LIB_URL + \"/poses/\";\n\nconst joints = [\n  \"wrist\",\n  \"thumb-metacarpal\",\n  \"thumb-phalanx-proximal\",\n  \"thumb-phalanx-distal\",\n  \"thumb-tip\",\n  \"index-finger-metacarpal\",\n  \"index-finger-phalanx-proximal\",\n  \"index-finger-phalanx-intermediate\",\n  \"index-finger-phalanx-distal\",\n  \"index-finger-tip\",\n  \"middle-finger-metacarpal\",\n  \"middle-finger-phalanx-proximal\",\n  \"middle-finger-phalanx-intermediate\",\n  \"middle-finger-phalanx-distal\",\n  \"middle-finger-tip\",\n  \"ring-finger-metacarpal\",\n  \"ring-finger-phalanx-proximal\",\n  \"ring-finger-phalanx-intermediate\",\n  \"ring-finger-phalanx-distal\",\n  \"ring-finger-tip\",\n  \"pinky-finger-metacarpal\",\n  \"pinky-finger-phalanx-proximal\",\n  \"pinky-finger-phalanx-intermediate\",\n  \"pinky-finger-phalanx-distal\",\n  \"pinky-finger-tip\",\n];\n\nAFRAME.registerComponent(\"handy-controls\", {\n  schema: {\n    left: {\n      type: 'model',\n      default: DEFAULT_HAND_PROFILE_PATH + \"left.glb\",\n    },\n    right: {\n      type: 'model',\n      default: DEFAULT_HAND_PROFILE_PATH + \"right.glb\",\n    },\n    materialOverride: {\n      oneOf: ['both', 'left', 'right', 'none'],\n      default: 'both'\n    },\n    fuseVShort: {\n      default:48\n    },\n    fuseShort: {\n      default:480\n    },\n    fuseLong: {\n      default:1440\n    }\n  },\n  init() {\n    this.handyWorkCallback = this.handyWorkCallback.bind(this);\n    \n    const webxrData = this.el.sceneEl.getAttribute('webxr');\n    const optionalFeaturesArray = webxrData.optionalFeatures;\n    if (!optionalFeaturesArray.includes('hand-tracking')) {\n      optionalFeaturesArray.push('hand-tracking');\n      this.el.sceneEl.setAttribute('webxr', webxrData);\n    }\n    \n    const self = this;\n    const dracoLoader = this.el.sceneEl.systems['gltf-model'].getDRACOLoader();\n    const meshoptDecoder = this.el.sceneEl.systems['gltf-model'].getMeshoptDecoder();\n    this.model = null;\n    this.loader = new THREE.GLTFLoader();\n    if (dracoLoader) {\n      this.loader.setDRACOLoader(dracoLoader);\n    }\n    if (meshoptDecoder) {\n      this.ready = meshoptDecoder.then(function (meshoptDecoder) {\n        self.loader.setMeshoptDecoder(meshoptDecoder);\n      });\n    } else {\n      this.ready = Promise.resolve();\n    }\n    \n    import(LIB)\n    .then(function ({\n\t\t\tupdate,\n\t\t\tloadPose,\n\t\t\tdumpHands\n    }) {\n      this.handyWorkUpdate = update;\n      this.dumpHands = dumpHands;\n      this.loadPose = loadPose;\n\n      loadPose('relax', POSE_FOLDER + 'relax.handpose');\n      loadPose('fist', POSE_FOLDER + 'fist.handpose');\n      loadPose('flat', POSE_FOLDER + 'flat.handpose');\n      loadPose('point', POSE_FOLDER + 'point.handpose');\n      loadPose('horns', POSE_FOLDER + 'horns.handpose');\n      loadPose('shaka', POSE_FOLDER + 'shaka.handpose');\n      loadPose('vulcan', POSE_FOLDER + 'vulcan.handpose');\n    }.bind(this));\n    \n    for (const handedness of ['left', 'right']) {\n      const els = Array.from(this.el.querySelectorAll(`[data-${handedness}]`));\n      for (const el of els) {\n        el.object3D.visible = false;\n      }\n    }\n    \n    this.gripOffset = new THREE.Vector3(-0.005, -0.03, 0);\n    this.gripQuaternions = [new THREE.Quaternion().setFromUnitVectors(\n      new THREE.Vector3(0,0,-1),\n      new THREE.Vector3(-3,0,-1).normalize()\n    ),new THREE.Quaternion().setFromUnitVectors(\n      new THREE.Vector3(0,1,0),\n      new THREE.Vector3(-1,0,0)\n    )];\n    \n  },\n\n  async gltfToJoints(src, name) {\n    const el = this.el;\n    await this.ready;\n\n    const gltf = await new Promise(function (resolve, reject) {\n      this.loader.load(src, resolve, undefined, reject);\n    }.bind(this));\n\n    const object = gltf.scene.children[0];\n    const mesh = object.getObjectByProperty(\"type\", \"SkinnedMesh\");\n    \n    if (this.el.components.material) {\n      if (this.data.materialOverride === 'both' || this.data.materialOverride === name) {\n        mesh.material = this.el.components.material.material;\n      }\n    }\n    \n    mesh.visible = false;\n    mesh.frustumCulled = false;\n    mesh.castShadow = true;\n    mesh.receiveShadow = true;\n    mesh.skeleton.pose();\n    \n    const bones = [];\n    for (const jointName of joints) {\n      const bone = object.getObjectByName(jointName);\n      if (bone !== undefined) {\n        bone.jointName = jointName;\n        bones.push(bone);\n        bone.applyMatrix4(this.el.object3D.matrixWorld);\n        bone.updateMatrixWorld();\n      } else {\n        console.warn(`Couldn't find ${jointName} in ${src} hand mesh`);\n        bones.push(undefined); // add an empty slot\n      }\n    }\n    el.setObject3D('hand-mesh-' + name, mesh);\n    el.emit(\"model-loaded\", { format: \"gltf\", model: mesh });\n    return bones;\n  },\n\n  async update() {\n    const el = this.el;\n    const srcLeft = this.data.left;\n    const srcRight = this.data.right;\n\n    this.remove();\n    try {\n      this.bonesRight = await this.gltfToJoints(srcRight, \"right\");\n      this.bonesLeft = await this.gltfToJoints(srcLeft, \"left\");\n    } catch (error) {\n      const message = error && error.message ? error.message : \"Failed to load glTF model\";\n      console.warn(message);\n      el.emit(\"hand-model-error\", { message });\n    }\n  },\n  tick() {\n    const session = this.el.sceneEl.xrSession;\n    if (!session) return;\n    const referenceSpace = this.el.sceneEl.renderer.xr.getReferenceSpace();\n    \n    const toUpdate = [];\n    const frame = this.el.sceneEl.frame;\n    for (const inputSource of session.inputSources) {\n      \n      const currentMesh = this.el.getObject3D(\"hand-mesh-\" + inputSource.handedness);\n      if (!currentMesh) return;\n      \n      const els = Array.from(this.el.querySelectorAll(`[data-${inputSource.handedness}]`));\n      const elMap = new Map();\n      for (const el of els) {\n        const poseName = el.dataset[inputSource.handedness];\n        const elArray = elMap.get(poseName) || [];\n        elArray.push(el);\n        elMap.set(poseName, elArray);\n      }\n\n      if (!inputSource.hand) {\n        for (const el of els) {\n          el.object3D.visible = false;\n        }\n        currentMesh.visible = false;\n        continue;\n      }\n      toUpdate.push(inputSource);\n\n      const bones =\n        (inputSource.handedness === \"right\" && this.bonesRight) ||\n        (inputSource.handedness === \"left\" && this.bonesLeft);\n      if (!bones) continue;\n      for (const bone of bones) {\n        const joint = inputSource.hand.get(bone.jointName);\n        if (joint) {\n          const pose = frame.getJointPose(joint, referenceSpace);\n          if (pose) {\n            currentMesh.visible = true;\n            if (elMap.has(bone.jointName)) {\n              for (const el of elMap.get(bone.jointName)) {\n                el.object3D.position.copy(pose.transform.position);\n                el.object3D.quaternion.copy(pose.transform.orientation);\n                el.object3D.visible = (el.getDOMAttribute('visible') !== false);\n              }\n            }\n            \n            if (bone.jointName === \"middle-finger-metacarpal\") {\n              if (elMap.has('grip')) {\n                for (const el of elMap.get('grip')) {\n                  el.object3D.quaternion.copy(pose.transform.orientation);\n                  this.gripQuaternions.forEach(q => el.object3D.quaternion.multiply(q));\n                  el.object3D.position.copy(this.gripOffset);\n                  el.object3D.position.applyQuaternion(el.object3D.quaternion);\n                  el.object3D.position.add(pose.transform.position);\n                  el.object3D.visible = (el.getDOMAttribute('visible') !== false);\n                }\n              }\n            }\n            \n            bone.position.copy(pose.transform.position);\n            bone.quaternion.copy(pose.transform.orientation);\n            bone.applyMatrix4(this.el.object3D.matrixWorld);\n            bone.updateMatrixWorld();\n          }\n        }\n      }\n      // Ideally we would do this but the grip space doesn't actually line up with where you hold something so I map it to the middle finger metacarpal isntead\n      // if (elMap.has('grip') && inputSource.gripSpace) {\n      //   const pose = frame.getPose(inputSource.gripSpace, referenceSpace);\n      //   if (pose) {\n      //     for (const el of elMap.get('grip')) {\n      //       el.object3D.position.copy(pose.transform.position);\n      //       el.object3D.quaternion.copy(pose.transform.orientation);\n      //       el.object3D.visible = (el.getDOMAttribute('visible') !== false);\n      //     }\n      //   }\n      // }\n      if (elMap.has('ray') && inputSource.targetRaySpace) {\n        const pose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n        if (pose) {\n          for (const el of elMap.get('ray')) {\n            el.object3D.position.copy(pose.transform.position);\n            el.object3D.quaternion.copy(pose.transform.orientation);\n            el.object3D.visible = (el.getDOMAttribute('visible') !== false);\n          }\n        }\n      }\n    }\n\n    // perform hand tracking\n    if (toUpdate.length && this.handyWorkUpdate) {\n      this.handyWorkUpdate(\n        toUpdate,\n        referenceSpace,\n        frame,\n        this.handyWorkCallback\n      );\n    }\n  },\n  handyWorkCallback: function ({\n\t\tdistances, handedness\n\t}) {\n\t\tthis.emit(distances[0][0], handedness, {\n      pose: distances[0][0],\n      poses: distances,\n      handedness\n    });\n\t},\n  emit(name, handedness, details) {\n    if (name === this[handedness + '_currentPose']) return;\n    \n    // console.log(`Old pose was ${this[handedness + '_currentPose']} current pose is ${name}, so resetting events`);\n    \n    const els = Array.from(this.el.querySelectorAll(`[data-${handedness}]`));\n    \n    clearTimeout(this[handedness + '_vshortTimeout']);\n    clearTimeout(this[handedness + '_shortTimeout']);\n    clearTimeout(this[handedness + '_longTimeout']);\n    \n    this[handedness + '_currentPose'] = name;\n\n    this[handedness + '_vshortTimeout'] = setTimeout(() => {\n      this.el.emit('pose_' + name, details);\n      this.el.emit('pose', details);\n\n      for (const el of els) {\n        el.emit('pose_' + name, details, false);\n        el.emit('pose', details, false);\n      }\n    }, this.data.fuseVShort);\n    \n    this[handedness + '_shortTimeout'] = setTimeout(() => {\n      // console.log('Emiting ', name + '_fuseShort');\n      this.el.emit('pose_' + name + '_fuseShort', details);\n      for (const el of els) el.emit('pose_' + name + '_fuseShort', details, false);\n    }, this.data.fuseShort);\n    \n    this[handedness + '_longTimeout'] = setTimeout(() => {\n      // console.log('Emiting ', name + '_fuseLong');\n      this.el.emit('pose_' + name + '_fuseLong', details);    \n      for (const el of els) el.emit('pose_' + name + '_fuseLong', details, false);\n    }, this.data.fuseLong);\n  },\n  remove() {\n    if (this.bonesLeft) {\n      this.bonesLeft = null;\n      this.el.removeObject3D(\"hand-mesh-left\");\n    }\n    if (this.bonesRight) {\n      this.bonesRight = null;\n      this.el.removeObject3D(\"hand-mesh-right\")\n    }\n  },\n});\n"],"names":["DEFAULT_HAND_PROFILE_PATH","LIB_URL","POSE_FOLDER","joints","AFRAME","registerComponent","schema","left","type","default","right","materialOverride","oneOf","fuseVShort","fuseShort","fuseLong","init","this","handyWorkCallback","bind","webxrData","el","sceneEl","getAttribute","optionalFeaturesArray","optionalFeatures","includes","push","setAttribute","self","dracoLoader","systems","getDRACOLoader","meshoptDecoder","getMeshoptDecoder","model","loader","THREE","GLTFLoader","setDRACOLoader","ready","then","setMeshoptDecoder","Promise","resolve","import","update","loadPose","dumpHands","handyWorkUpdate","handedness","els","Array","from","querySelectorAll","object3D","visible","gripOffset","Vector3","gripQuaternions","Quaternion","setFromUnitVectors","normalize","async","src","name","object","reject","load","undefined","scene","children","mesh","getObjectByProperty","components","material","data","frustumCulled","castShadow","receiveShadow","skeleton","pose","bones","jointName","bone","getObjectByName","applyMatrix4","matrixWorld","updateMatrixWorld","console","warn","setObject3D","emit","format","srcLeft","srcRight","remove","bonesRight","gltfToJoints","bonesLeft","error","message","tick","session","xrSession","referenceSpace","renderer","xr","getReferenceSpace","toUpdate","frame","inputSource","inputSources","currentMesh","getObject3D","elMap","Map","poseName","dataset","elArray","get","set","hand","joint","getJointPose","has","position","copy","transform","quaternion","orientation","getDOMAttribute","forEach","q","multiply","applyQuaternion","add","targetRaySpace","getPose","length","distances","poses","details","clearTimeout","setTimeout","removeObject3D"],"mappings":"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"}