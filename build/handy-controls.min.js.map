{"version":3,"file":"handy-controls.min.js","sources":["../src/handy-controls.js"],"sourcesContent":["/* global AFRAME, THREE */\n\nconst __version__ = __version__;\nconst DEFAULT_HAND_PROFILE_PATH = \"https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles/generic-hand/\";\nconst LIB_URL = \"https://cdn.jsdelivr.net/npm/handy-work\" + (__version__ ? '@' + __version__ : '');\nconst LIB = LIB_URL + \"/build/esm/handy-work.standalone.js\";\nconst POSE_FOLDER = LIB_URL + \"/poses/\";\nconst clamp = (a, min = 0, max = 1) => Math.min(max, Math.max(min, a));\nconst invlerp = (x, y, a) => clamp((a - x) / (y - x));\nconst joints = [\n  \"wrist\",\n  \"thumb-metacarpal\",\n  \"thumb-phalanx-proximal\",\n  \"thumb-phalanx-distal\",\n  \"thumb-tip\",\n  \"index-finger-metacarpal\",\n  \"index-finger-phalanx-proximal\",\n  \"index-finger-phalanx-intermediate\",\n  \"index-finger-phalanx-distal\",\n  \"index-finger-tip\",\n  \"middle-finger-metacarpal\",\n  \"middle-finger-phalanx-proximal\",\n  \"middle-finger-phalanx-intermediate\",\n  \"middle-finger-phalanx-distal\",\n  \"middle-finger-tip\",\n  \"ring-finger-metacarpal\",\n  \"ring-finger-phalanx-proximal\",\n  \"ring-finger-phalanx-intermediate\",\n  \"ring-finger-phalanx-distal\",\n  \"ring-finger-tip\",\n  \"pinky-finger-metacarpal\",\n  \"pinky-finger-phalanx-proximal\",\n  \"pinky-finger-phalanx-intermediate\",\n  \"pinky-finger-phalanx-distal\",\n  \"pinky-finger-tip\",\n];\n\nAFRAME.registerComponent(\"handy-controls\", {\n  schema: {\n    left: {\n      description: 'URL for left controller',\n      type: 'model',\n      default: DEFAULT_HAND_PROFILE_PATH + \"left.glb\",\n    },\n    right: {\n      description: 'URL for right controller',\n      type: 'model',\n      default: DEFAULT_HAND_PROFILE_PATH + \"right.glb\",\n    },\n    materialOverride: {\n      description: 'Which hand to use the `material` component for',\n      oneOf: ['both', 'left', 'right', 'none'],\n      default: 'both'\n    },\n    fuseVShort: {\n      description: 'Time for a pose to trigger a pose event (ms)',\n      default:48\n    },\n    fuseShort: {\n      description: 'Time for a pose to trigger a pose_fuseShort event (ms)',\n      default:480\n    },\n    fuseLong: {\n      description: 'Time for a pose to trigger a pose_fuseLong event (ms)',\n      default:1440\n    }\n  },\n  init() {\n    this.handyWorkCallback = this.handyWorkCallback.bind(this);\n    \n    const webxrData = this.el.sceneEl.getAttribute('webxr');\n    const optionalFeaturesArray = webxrData.optionalFeatures;\n    if (!optionalFeaturesArray.includes('hand-tracking')) {\n      optionalFeaturesArray.push('hand-tracking');\n      this.el.sceneEl.setAttribute('webxr', webxrData);\n    }\n    \n    const self = this;\n    const dracoLoader = this.el.sceneEl.systems['gltf-model'].getDRACOLoader();\n    const meshoptDecoder = this.el.sceneEl.systems['gltf-model'].getMeshoptDecoder();\n    this.model = null;\n    this.loader = new THREE.GLTFLoader();\n    if (dracoLoader) {\n      this.loader.setDRACOLoader(dracoLoader);\n    }\n    if (meshoptDecoder) {\n      this.ready = meshoptDecoder.then(function (meshoptDecoder) {\n        self.loader.setMeshoptDecoder(meshoptDecoder);\n      });\n    } else {\n      this.ready = Promise.resolve();\n    }\n    \n    import(LIB)\n    .then(function ({\n\t\t\tupdate,\n\t\t\tloadPose,\n\t\t\tdumpHands,\n      setPose,\n      getPose\n    }) {\n      this.handyWorkUpdate = update;\n      this.dumpHands = dumpHands;\n      this.loadPose = loadPose;\n      this.setPose = setPose;\n      this.getPose = getPose;\n\n      loadPose('relax', POSE_FOLDER + 'relax.handpose');\n      loadPose('fist', POSE_FOLDER + 'fist.handpose');\n      loadPose('flat', POSE_FOLDER + 'flat.handpose');\n      loadPose('point', POSE_FOLDER + 'point.handpose');\n      loadPose('horns', POSE_FOLDER + 'horns.handpose');\n      loadPose('shaka', POSE_FOLDER + 'shaka.handpose');\n      loadPose('vulcan', POSE_FOLDER + 'vulcan.handpose');\n    }.bind(this));\n    \n    for (const handedness of ['left', 'right']) {\n      const els = Array.from(this.el.querySelectorAll(`[data-${handedness}]`));\n      for (const el of els) {\n        el.object3D.visible = false;\n      }\n    }\n    \n    this.gripOffset = {\n      right: new THREE.Vector3(-0.005, -0.03, 0),\n      left: new THREE.Vector3(0.005, -0.03, 0)\n    };\n    this.gripQuaternions = {\n      right: [new THREE.Quaternion().setFromUnitVectors(\n        new THREE.Vector3(0,0,-1),\n        new THREE.Vector3(-1,0,0).normalize()\n      ),new THREE.Quaternion().setFromUnitVectors(\n        new THREE.Vector3(0,1,0),\n        new THREE.Vector3(-1,0,0)\n      )],\n      left: [new THREE.Quaternion().setFromUnitVectors(\n        new THREE.Vector3(0,0,1),\n        new THREE.Vector3(1,0,0).normalize()\n      ),new THREE.Quaternion().setFromUnitVectors(\n        new THREE.Vector3(1,1,0),\n        new THREE.Vector3(-1,0,-1)\n      )]\n    };\n\n    this.tempVector3 = new THREE.Vector3();\n    this.tempVector3_A = new THREE.Vector3();\n    this.tempVector3_B = new THREE.Vector3();\n    this.tempQuaternion_A = new THREE.Quaternion();\n    this.tempQuaternion_B = new THREE.Quaternion();\n\n  },\n\n  async gltfToJoints(src, name) {\n    const el = this.el;\n    await this.ready;\n\n    const gltf = await new Promise(function (resolve, reject) {\n      this.loader.load(src, resolve, undefined, reject);\n    }.bind(this));\n\n    const object = gltf.scene.children[0];\n    const mesh = object.getObjectByProperty(\"type\", \"SkinnedMesh\");\n    \n    if (this.el.components.material) {\n      if (this.data.materialOverride === 'both' || this.data.materialOverride === name) {\n        mesh.material = this.el.components.material.material;\n      }\n    }\n    \n    mesh.visible = false;\n    mesh.frustumCulled = false;\n    mesh.castShadow = true;\n    mesh.receiveShadow = true;\n    mesh.skeleton.pose();\n    \n    const bones = [];\n    for (const jointName of joints) {\n      const bone = object.getObjectByName(jointName);\n      if (bone !== undefined) {\n        bone.jointName = jointName;\n        bones.push(bone);\n        bone.applyMatrix4(this.el.object3D.matrixWorld);\n        bone.updateMatrixWorld();\n      } else {\n        console.warn(`Couldn't find ${jointName} in ${src} hand mesh`);\n        bones.push(undefined); // add an empty slot\n      }\n    }\n    el.setObject3D('hand-mesh-' + name, mesh);\n    el.emit(\"model-loaded\", { format: \"gltf\", model: mesh });\n    return bones;\n  },\n\n  async update() {\n    const el = this.el;\n    const srcLeft = this.data.left;\n    const srcRight = this.data.right;\n\n    this.remove();\n    try {\n      this.bonesRight = await this.gltfToJoints(srcRight, \"right\");\n      this.bonesLeft = await this.gltfToJoints(srcLeft, \"left\");\n    } catch (error) {\n      const message = error && error.message ? error.message : \"Failed to load glTF model\";\n      console.warn(message);\n      el.emit(\"hand-model-error\", { message });\n    }\n  },\n  tick() {\n    const session = this.el.sceneEl.xrSession;\n    if (!session) return;\n    const referenceSpace = this.el.sceneEl.renderer.xr.getReferenceSpace();\n    const toUpdate = [];\n    const frame = this.el.sceneEl.frame;\n    \n    inputSourceLoop:\n    for (const inputSource of session.inputSources) {\n      \n      const currentMesh = this.el.getObject3D(\"hand-mesh-\" + inputSource.handedness);\n      if (!currentMesh) return;\n      \n      const els = Array.from(this.el.querySelectorAll(`[data-${inputSource.handedness}]`));\n      const elMap = new Map();\n      for (const el of els) {\n        const poseName = el.dataset[inputSource.handedness];\n        const elArray = elMap.get(poseName) || [];\n        elArray.push(el);\n        elMap.set(poseName, elArray);\n      }\n\n      if (!inputSource.hand) {\n        for (const el of els) {\n          el.object3D.visible = false;\n        }\n        currentMesh.visible = false;\n        continue;\n      }\n      toUpdate.push(inputSource);\n\n      const bones =\n        (inputSource.handedness === \"right\" && this.bonesRight) ||\n        (inputSource.handedness === \"left\" && this.bonesLeft);\n      if (!bones) continue;\n      for (const bone of bones) {\n        const joint = inputSource.hand.get(bone.jointName);\n        if (joint) {\n          const pose = frame.getJointPose(joint, referenceSpace);\n          if (pose) {\n            currentMesh.visible = true;\n            if (elMap.has(bone.jointName)) {\n              for (const el of elMap.get(bone.jointName)) {\n                el.object3D.position.copy(pose.transform.position);\n                el.object3D.quaternion.copy(pose.transform.orientation);\n                el.object3D.visible = (el.getDOMAttribute('visible') !== false);\n              }\n            }\n            \n            if (bone.jointName === \"middle-finger-metacarpal\") {\n              if (elMap.has('grip')) {\n                for (const el of elMap.get('grip')) {\n                  el.object3D.quaternion.copy(pose.transform.orientation);\n                  this.gripQuaternions[inputSource.handedness].forEach(q => el.object3D.quaternion.multiply(q));\n                  el.object3D.position.copy(this.gripOffset[inputSource.handedness]);\n                  el.object3D.position.applyQuaternion(el.object3D.quaternion);\n                  el.object3D.position.add(pose.transform.position);\n                  el.object3D.visible = (el.getDOMAttribute('visible') !== false);\n                }\n              }\n            }\n            \n            bone.position.copy(pose.transform.position);\n            bone.quaternion.copy(pose.transform.orientation);\n          } else {\n            // Failed to get hand pose so continue looping over elements\n            continue inputSourceLoop;\n          }\n        }\n      }\n      if (elMap.has('ray') && inputSource.targetRaySpace) {\n        const pose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n        if (pose) {\n          for (const el of elMap.get('ray')) {\n            el.object3D.position.copy(pose.transform.position);\n            el.object3D.quaternion.copy(pose.transform.orientation);\n            el.object3D.visible = (el.getDOMAttribute('visible') !== false);\n          }\n        }\n      }\n      \n      let magnetEl = this.el.querySelector(`[data-magnet][data-${inputSource.handedness}]`);\n      let magnetTarget = null;\n      let fadeT = 1;\n      \n      if (magnetEl) {\n        magnetEl.object3D.updateWorldMatrix(true, false);\n        const magnetTargets = Array.from(document.querySelectorAll(magnetEl.dataset.magnet));\n        for (const el of magnetTargets) {\n          const [magnetRange,fadeEnd] = (el.dataset.magnetRange || \"0.2,0.1\").split(',').map(n => Number(n));\n          el.object3D.getWorldPosition(this.tempVector3);\n          magnetEl.object3D.worldToLocal(this.tempVector3);\n          // console.log(this.tempVector3.length().toFixed(2));\n          \n          const d = this.tempVector3.length();\n          if (d < magnetRange) {\n            magnetTarget = el;\n            \n            if (fadeEnd) {\n              fadeT = invlerp(magnetRange,fadeEnd,d);\n            } else {\n              fadeT = 1;\n            }\n            \n            break;\n          }\n        }\n      }\n      \n      if (magnetTarget) {\n        \n        //TODO: Handle fadeT\n        \n        magnetTarget.object3D.getWorldPosition(this.tempVector3_A);\n        magnetEl.object3D.getWorldPosition(this.tempVector3_B);\n        this.tempVector3_A.lerp(this.tempVector3_B, 1-fadeT).sub(this.tempVector3_B);\n        \n        magnetTarget.object3D.getWorldQuaternion(this.tempQuaternion_A);\n        magnetEl.object3D.getWorldQuaternion(this.tempQuaternion_B);\n        this.tempQuaternion_A.slerp(this.tempQuaternion_B, 1-fadeT).multiply(this.tempQuaternion_B.invert());\n        \n        for (const bone of bones) {\n          bone.position.sub(magnetEl.object3D.position);\n          bone.position.applyQuaternion(this.tempQuaternion_A);\n          bone.position.add(magnetEl.object3D.position);\n          bone.applyQuaternion(this.tempQuaternion_A);\n          bone.position.add(this.tempVector3_A);\n          bone.applyMatrix4(this.el.object3D.matrixWorld);\n          bone.updateMatrixWorld();\n        }\n        for (const el of els) {\n          el.object3D.position.sub(magnetEl.object3D.position);\n          el.object3D.position.applyQuaternion(this.tempQuaternion_A);\n          el.object3D.position.add(magnetEl.object3D.position);\n          el.object3D.applyQuaternion(this.tempQuaternion_A);\n          el.object3D.position.add(this.tempVector3_A);\n        }\n      } else {\n        for (const bone of bones) {\n          bone.applyMatrix4(this.el.object3D.matrixWorld);\n          bone.updateMatrixWorld();\n        }\n      }\n    }\n\n    // perform hand tracking\n    if (toUpdate.length && this.handyWorkUpdate) {\n      this.handyWorkUpdate(\n        toUpdate,\n        referenceSpace,\n        frame,\n        this.handyWorkCallback\n      );\n    }\n  },\n  handyWorkCallback: function ({\n\t\tdistances, handedness\n\t}) {\n\t\tthis.emit(distances[0][0], handedness, {\n      pose: distances[0][0],\n      poses: distances,\n      handedness\n    });\n\t},\n  emit(name, handedness, details) {\n    if (name === this[handedness + '_currentPose']) return;\n    \n    // console.log(`Old pose was ${this[handedness + '_currentPose']} current pose is ${name}, so resetting events`);\n    \n    const els = Array.from(this.el.querySelectorAll(`[data-${handedness}]`));\n    \n    clearTimeout(this[handedness + '_vshortTimeout']);\n    clearTimeout(this[handedness + '_shortTimeout']);\n    clearTimeout(this[handedness + '_longTimeout']);\n    \n    this[handedness + '_currentPose'] = name;\n\n    this[handedness + '_vshortTimeout'] = setTimeout(() => {\n      this.el.emit('pose_' + name, details);\n      this.el.emit('pose', details);\n\n      for (const el of els) {\n        el.emit('pose_' + name, details, false);\n        el.emit('pose', details, false);\n      }\n    }, this.data.fuseVShort);\n    \n    this[handedness + '_shortTimeout'] = setTimeout(() => {\n      // console.log('Emiting ', name + '_fuseShort');\n      this.el.emit('pose_' + name + '_fuseShort', details);\n      for (const el of els) el.emit('pose_' + name + '_fuseShort', details, false);\n    }, this.data.fuseShort);\n    \n    this[handedness + '_longTimeout'] = setTimeout(() => {\n      // console.log('Emiting ', name + '_fuseLong');\n      this.el.emit('pose_' + name + '_fuseLong', details);    \n      for (const el of els) el.emit('pose_' + name + '_fuseLong', details, false);\n    }, this.data.fuseLong);\n  },\n  remove() {\n    if (this.bonesLeft) {\n      this.bonesLeft = null;\n      this.el.removeObject3D(\"hand-mesh-left\");\n    }\n    if (this.bonesRight) {\n      this.bonesRight = null;\n      this.el.removeObject3D(\"hand-mesh-right\")\n    }\n  },\n});\n"],"names":["DEFAULT_HAND_PROFILE_PATH","LIB_URL","POSE_FOLDER","invlerp","x","y","a","min","max","Math","clamp","joints","AFRAME","registerComponent","schema","left","description","type","default","right","materialOverride","oneOf","fuseVShort","fuseShort","fuseLong","init","this","handyWorkCallback","bind","webxrData","el","sceneEl","getAttribute","optionalFeaturesArray","optionalFeatures","includes","push","setAttribute","self","dracoLoader","systems","getDRACOLoader","meshoptDecoder","getMeshoptDecoder","model","loader","THREE","GLTFLoader","setDRACOLoader","ready","then","setMeshoptDecoder","Promise","resolve","import","update","loadPose","dumpHands","setPose","getPose","handyWorkUpdate","handedness","els","Array","from","querySelectorAll","object3D","visible","gripOffset","Vector3","gripQuaternions","Quaternion","setFromUnitVectors","normalize","tempVector3","tempVector3_A","tempVector3_B","tempQuaternion_A","tempQuaternion_B","async","src","name","object","reject","load","undefined","scene","children","mesh","getObjectByProperty","components","material","data","frustumCulled","castShadow","receiveShadow","skeleton","pose","bones","jointName","bone","getObjectByName","applyMatrix4","matrixWorld","updateMatrixWorld","console","warn","setObject3D","emit","format","srcLeft","srcRight","remove","bonesRight","gltfToJoints","bonesLeft","error","message","tick","session","xrSession","referenceSpace","renderer","xr","getReferenceSpace","toUpdate","frame","inputSourceLoop","inputSource","inputSources","currentMesh","getObject3D","elMap","Map","poseName","dataset","elArray","get","set","hand","joint","getJointPose","has","position","copy","transform","quaternion","orientation","getDOMAttribute","forEach","q","multiply","applyQuaternion","add","targetRaySpace","magnetEl","querySelector","magnetTarget","fadeT","updateWorldMatrix","magnetTargets","document","magnet","magnetRange","fadeEnd","split","map","n","Number","getWorldPosition","worldToLocal","d","length","lerp","sub","getWorldQuaternion","slerp","invert","distances","poses","details","clearTimeout","setTimeout","removeObject3D"],"mappings":"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"}