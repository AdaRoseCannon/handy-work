!function(){"use strict";const e="https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles/generic-hand/",t="https://cdn.jsdelivr.net/npm/handy-work@1.4.0",i=t+"/poses/",o=["wrist","thumb-metacarpal","thumb-phalanx-proximal","thumb-phalanx-distal","thumb-tip","index-finger-metacarpal","index-finger-phalanx-proximal","index-finger-phalanx-intermediate","index-finger-phalanx-distal","index-finger-tip","middle-finger-metacarpal","middle-finger-phalanx-proximal","middle-finger-phalanx-intermediate","middle-finger-phalanx-distal","middle-finger-tip","ring-finger-metacarpal","ring-finger-phalanx-proximal","ring-finger-phalanx-intermediate","ring-finger-phalanx-distal","ring-finger-tip","pinky-finger-metacarpal","pinky-finger-phalanx-proximal","pinky-finger-phalanx-intermediate","pinky-finger-phalanx-distal","pinky-finger-tip"];AFRAME.registerComponent("handy-controls",{schema:{left:{type:"model",default:e+"left.glb"},right:{type:"model",default:e+"right.glb"},materialOverride:{oneOf:["both","left","right","none"],default:"both"},fuseVShort:{default:48},fuseShort:{default:480},fuseLong:{default:1440}},init(){this.handyWorkCallback=this.handyWorkCallback.bind(this);const e=this.el.sceneEl.getAttribute("webxr"),t=e.optionalFeatures;t.includes("hand-tracking")||(t.push("hand-tracking"),this.el.sceneEl.setAttribute("webxr",e));const o=this,s=this.el.sceneEl.systems["gltf-model"].getDRACOLoader(),n=this.el.sceneEl.systems["gltf-model"].getMeshoptDecoder();this.model=null,this.loader=new THREE.GLTFLoader,s&&this.loader.setDRACOLoader(s),this.ready=n?n.then((function(e){o.loader.setMeshoptDecoder(e)})):Promise.resolve(),import("https://cdn.jsdelivr.net/npm/handy-work@1.4.0/build/esm/handy-work.standalone.js").then(function({update:e,loadPose:t,dumpHands:o}){this.handyWorkUpdate=e,this.dumpHands=o,this.loadPose=t,t("relax",i+"relax.handpose"),t("fist",i+"fist.handpose"),t("flat",i+"flat.handpose"),t("point",i+"point.handpose"),t("horns",i+"horns.handpose"),t("shaka",i+"shaka.handpose"),t("vulcan",i+"vulcan.handpose")}.bind(this));for(const e of["left","right"]){const t=Array.from(this.el.querySelectorAll(`[data-${e}]`));for(const e of t)e.object3D.visible=!1}this.gripOffset=new THREE.Vector3(-.005,-.03,0),this.gripQuaternions=[(new THREE.Quaternion).setFromUnitVectors(new THREE.Vector3(0,0,-1),new THREE.Vector3(-3,0,-1).normalize()),(new THREE.Quaternion).setFromUnitVectors(new THREE.Vector3(0,1,0),new THREE.Vector3(-1,0,0))]},async gltfToJoints(e,t){const i=this.el;await this.ready;const s=(await new Promise(function(t,i){this.loader.load(e,t,void 0,i)}.bind(this))).scene.children[0],n=s.getObjectByProperty("type","SkinnedMesh");this.el.components.material&&("both"!==this.data.materialOverride&&this.data.materialOverride!==t||(n.material=this.el.components.material.material)),n.visible=!1,n.frustumCulled=!1,n.castShadow=!0,n.receiveShadow=!0,n.skeleton.pose();const a=[];for(const t of o){const i=s.getObjectByName(t);void 0!==i?(i.jointName=t,a.push(i),i.applyMatrix4(this.el.object3D.matrixWorld),i.updateMatrixWorld()):(console.warn(`Couldn't find ${t} in ${e} hand mesh`),a.push(void 0))}return i.setObject3D("hand-mesh-"+t,n),i.emit("model-loaded",{format:"gltf",model:n}),a},async update(){const e=this.el,t=this.data.left,i=this.data.right;this.remove();try{this.bonesRight=await this.gltfToJoints(i,"right"),this.bonesLeft=await this.gltfToJoints(t,"left")}catch(t){const i=t&&t.message?t.message:"Failed to load glTF model";console.warn(i),e.emit("hand-model-error",{message:i})}},tick(){const e=this.el.sceneEl.xrSession;if(!e)return;const t=this.el.sceneEl.renderer.xr.getReferenceSpace(),i=[],o=this.el.sceneEl.frame;for(const s of e.inputSources){const e=this.el.getObject3D("hand-mesh-"+s.handedness);if(!e)return;const n=Array.from(this.el.querySelectorAll(`[data-${s.handedness}]`)),a=new Map;for(const e of n){const t=e.dataset[s.handedness],i=a.get(t)||[];i.push(e),a.set(t,i)}if(!s.hand){for(const e of n)e.object3D.visible=!1;e.visible=!1;continue}i.push(s);const r="right"===s.handedness&&this.bonesRight||"left"===s.handedness&&this.bonesLeft;if(r){for(const i of r){const n=s.hand.get(i.jointName);if(n){const s=o.getJointPose(n,t);if(s){if(e.visible=!0,a.has(i.jointName))for(const e of a.get(i.jointName))e.object3D.position.copy(s.transform.position),e.object3D.quaternion.copy(s.transform.orientation),e.object3D.visible=!1!==e.getDOMAttribute("visible");if("middle-finger-metacarpal"===i.jointName&&a.has("grip"))for(const e of a.get("grip"))e.object3D.quaternion.copy(s.transform.orientation),this.gripQuaternions.forEach((t=>e.object3D.quaternion.multiply(t))),e.object3D.position.copy(this.gripOffset),e.object3D.position.applyQuaternion(e.object3D.quaternion),e.object3D.position.add(s.transform.position),e.object3D.visible=!1!==e.getDOMAttribute("visible");i.position.copy(s.transform.position),i.quaternion.copy(s.transform.orientation),i.applyMatrix4(this.el.object3D.matrixWorld),i.updateMatrixWorld()}}}if(a.has("ray")&&s.targetRaySpace){const e=o.getPose(s.targetRaySpace,t);if(e)for(const t of a.get("ray"))t.object3D.position.copy(e.transform.position),t.object3D.quaternion.copy(e.transform.orientation),t.object3D.visible=!1!==t.getDOMAttribute("visible")}}}i.length&&this.handyWorkUpdate&&this.handyWorkUpdate(i,t,o,this.handyWorkCallback)},handyWorkCallback:function({distances:e,handedness:t}){this.emit(e[0][0],t,{pose:e[0][0],poses:e,handedness:t})},emit(e,t,i){if(e===this[t+"_currentPose"])return;const o=Array.from(this.el.querySelectorAll(`[data-${t}]`));clearTimeout(this[t+"_vshortTimeout"]),clearTimeout(this[t+"_shortTimeout"]),clearTimeout(this[t+"_longTimeout"]),this[t+"_currentPose"]=e,this[t+"_vshortTimeout"]=setTimeout((()=>{this.el.emit("pose_"+e,i),this.el.emit("pose",i);for(const t of o)t.emit("pose_"+e,i,!1),t.emit("pose",i,!1)}),this.data.fuseVShort),this[t+"_shortTimeout"]=setTimeout((()=>{this.el.emit("pose_"+e+"_fuseShort",i);for(const t of o)t.emit("pose_"+e+"_fuseShort",i,!1)}),this.data.fuseShort),this[t+"_longTimeout"]=setTimeout((()=>{this.el.emit("pose_"+e+"_fuseLong",i);for(const t of o)t.emit("pose_"+e+"_fuseLong",i,!1)}),this.data.fuseLong)},remove(){this.bonesLeft&&(this.bonesLeft=null,this.el.removeObject3D("hand-mesh-left")),this.bonesRight&&(this.bonesRight=null,this.el.removeObject3D("hand-mesh-right"))}})}();
//# sourceMappingURL=handy-controls.min.js.map
